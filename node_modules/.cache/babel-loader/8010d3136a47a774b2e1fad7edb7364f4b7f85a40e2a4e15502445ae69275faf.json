{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.solidityFamily = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = (0, debug_1.default)(\"codec:compiler:utils\");\nconst semver_1 = __importDefault(require(\"semver\"));\nfunction solidityFamily(compiler) {\n  if (!compiler || compiler.name !== \"solc\") {\n    return \"unknown\";\n  }\n  if (semver_1.default.satisfies(compiler.version, \">=0.8.18\", {\n    includePrerelease: true\n  })) {\n    return \"0.8.18+\";\n  } else if (semver_1.default.satisfies(compiler.version, \">=0.8.9\", {\n    includePrerelease: true\n  })) {\n    return \"0.8.9+\";\n  } else if (semver_1.default.satisfies(compiler.version, \">=0.8.7\", {\n    includePrerelease: true\n  })) {\n    return \"0.8.7+\";\n  } else if (\n  //see comment below about the weird-looking condition\n  semver_1.default.satisfies(compiler.version, \"~0.8 || >=0.8.0\", {\n    includePrerelease: true\n  })) {\n    return \"0.8.x\";\n  } else if (semver_1.default.satisfies(compiler.version, \"~0.5 || >=0.5.0\", {\n    includePrerelease: true\n  })) {\n    //what's with this weird-looking condition?  Well, I want to be sure to include\n    //prerelease versions of 0.5.0.  But isn't that what the includePrerelease option\n    //does?  No!  That just makes it so that prerelease versions can be included at\n    //all; without that, all prereleases of *any* version of Solidity can be excluded.\n    //A prerelease version of 0.5.0 still wouldn't satisfy >=0.5.0, so I added in ~0.5\n    //as well, which they do satisfy.\n    return \"0.5.x\";\n  } else {\n    return \"pre-0.5.0\";\n  }\n}\nexports.solidityFamily = solidityFamily;","map":{"version":3,"names":["debug_1","__importDefault","require","debug","default","semver_1","solidityFamily","compiler","name","satisfies","version","includePrerelease","exports"],"sources":["../../../lib/compiler/utils.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;AAAA,MAAAA,OAAA,GAAAC,eAAA,CAAAC,OAAA;AACA,MAAMC,KAAK,GAAG,IAAAH,OAAA,CAAAI,OAAW,EAAC,sBAAsB,CAAC;AAEjD,MAAAC,QAAA,GAAAJ,eAAA,CAAAC,OAAA;AAGA,SAAgBI,cAAcA,CAACC,QAAyB;EACtD,IAAI,CAACA,QAAQ,IAAIA,QAAQ,CAACC,IAAI,KAAK,MAAM,EAAE;IACzC,OAAO,SAAS;;EAElB,IACEH,QAAA,CAAAD,OAAM,CAACK,SAAS,CAACF,QAAQ,CAACG,OAAO,EAAE,UAAU,EAAE;IAC7CC,iBAAiB,EAAE;GACpB,CAAC,EACF;IACA,OAAO,SAAS;GACjB,MAAM,IACLN,QAAA,CAAAD,OAAM,CAACK,SAAS,CAACF,QAAQ,CAACG,OAAO,EAAE,SAAS,EAAE;IAC5CC,iBAAiB,EAAE;GACpB,CAAC,EACF;IACA,OAAO,QAAQ;GAChB,MAAM,IACLN,QAAA,CAAAD,OAAM,CAACK,SAAS,CAACF,QAAQ,CAACG,OAAO,EAAE,SAAS,EAAE;IAC5CC,iBAAiB,EAAE;GACpB,CAAC,EACF;IACA,OAAO,QAAQ;GAChB,MAAM;EACL;EACAN,QAAA,CAAAD,OAAM,CAACK,SAAS,CAACF,QAAQ,CAACG,OAAO,EAAE,iBAAiB,EAAE;IACpDC,iBAAiB,EAAE;GACpB,CAAC,EACF;IACA,OAAO,OAAO;GACf,MAAM,IACLN,QAAA,CAAAD,OAAM,CAACK,SAAS,CAACF,QAAQ,CAACG,OAAO,EAAE,iBAAiB,EAAE;IACpDC,iBAAiB,EAAE;GACpB,CAAC,EACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,OAAO;GACf,MAAM;IACL,OAAO,WAAW;;AAEtB;AA5CAC,OAAA,CAAAN,cAAA,GAAAA,cAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}