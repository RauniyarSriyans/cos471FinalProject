{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BigIntArbitrary = void 0;\nconst Stream_1 = require(\"../../stream/Stream\");\nconst Arbitrary_1 = require(\"../../check/arbitrary/definition/Arbitrary\");\nconst Value_1 = require(\"../../check/arbitrary/definition/Value\");\nconst BiasNumericRange_1 = require(\"./helpers/BiasNumericRange\");\nconst ShrinkBigInt_1 = require(\"./helpers/ShrinkBigInt\");\nclass BigIntArbitrary extends Arbitrary_1.Arbitrary {\n  constructor(min, max) {\n    super();\n    this.min = min;\n    this.max = max;\n  }\n  generate(mrng, biasFactor) {\n    const range = this.computeGenerateRange(mrng, biasFactor);\n    return new Value_1.Value(mrng.nextBigInt(range.min, range.max), undefined);\n  }\n  computeGenerateRange(mrng, biasFactor) {\n    if (biasFactor === undefined || mrng.nextInt(1, biasFactor) !== 1) {\n      return {\n        min: this.min,\n        max: this.max\n      };\n    }\n    const ranges = (0, BiasNumericRange_1.biasNumericRange)(this.min, this.max, BiasNumericRange_1.bigIntLogLike);\n    if (ranges.length === 1) {\n      return ranges[0];\n    }\n    const id = mrng.nextInt(-2 * (ranges.length - 1), ranges.length - 2);\n    return id < 0 ? ranges[0] : ranges[id + 1];\n  }\n  canShrinkWithoutContext(value) {\n    return typeof value === 'bigint' && this.min <= value && value <= this.max;\n  }\n  shrink(current, context) {\n    if (!BigIntArbitrary.isValidContext(current, context)) {\n      const target = this.defaultTarget();\n      return (0, ShrinkBigInt_1.shrinkBigInt)(current, target, true);\n    }\n    if (this.isLastChanceTry(current, context)) {\n      return Stream_1.Stream.of(new Value_1.Value(context, undefined));\n    }\n    return (0, ShrinkBigInt_1.shrinkBigInt)(current, context, false);\n  }\n  defaultTarget() {\n    if (this.min <= 0 && this.max >= 0) {\n      return BigInt(0);\n    }\n    return this.min < 0 ? this.max : this.min;\n  }\n  isLastChanceTry(current, context) {\n    if (current > 0) return current === context + BigInt(1) && current > this.min;\n    if (current < 0) return current === context - BigInt(1) && current < this.max;\n    return false;\n  }\n  static isValidContext(current, context) {\n    if (context === undefined) {\n      return false;\n    }\n    if (typeof context !== 'bigint') {\n      throw new Error(`Invalid context type passed to BigIntArbitrary (#1)`);\n    }\n    const differentSigns = current > 0 && context < 0 || current < 0 && context > 0;\n    if (context !== BigInt(0) && differentSigns) {\n      throw new Error(`Invalid context value passed to BigIntArbitrary (#2)`);\n    }\n    return true;\n  }\n}\nexports.BigIntArbitrary = BigIntArbitrary;","map":{"version":3,"names":["Object","defineProperty","exports","value","BigIntArbitrary","Stream_1","require","Arbitrary_1","Value_1","BiasNumericRange_1","ShrinkBigInt_1","Arbitrary","constructor","min","max","generate","mrng","biasFactor","range","computeGenerateRange","Value","nextBigInt","undefined","nextInt","ranges","biasNumericRange","bigIntLogLike","length","id","canShrinkWithoutContext","shrink","current","context","isValidContext","target","defaultTarget","shrinkBigInt","isLastChanceTry","Stream","of","BigInt","Error","differentSigns"],"sources":["/Users/karimelbarbary/Desktop/test4/devote/node_modules/fast-check/lib/arbitrary/_internals/BigIntArbitrary.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BigIntArbitrary = void 0;\nconst Stream_1 = require(\"../../stream/Stream\");\nconst Arbitrary_1 = require(\"../../check/arbitrary/definition/Arbitrary\");\nconst Value_1 = require(\"../../check/arbitrary/definition/Value\");\nconst BiasNumericRange_1 = require(\"./helpers/BiasNumericRange\");\nconst ShrinkBigInt_1 = require(\"./helpers/ShrinkBigInt\");\nclass BigIntArbitrary extends Arbitrary_1.Arbitrary {\n    constructor(min, max) {\n        super();\n        this.min = min;\n        this.max = max;\n    }\n    generate(mrng, biasFactor) {\n        const range = this.computeGenerateRange(mrng, biasFactor);\n        return new Value_1.Value(mrng.nextBigInt(range.min, range.max), undefined);\n    }\n    computeGenerateRange(mrng, biasFactor) {\n        if (biasFactor === undefined || mrng.nextInt(1, biasFactor) !== 1) {\n            return { min: this.min, max: this.max };\n        }\n        const ranges = (0, BiasNumericRange_1.biasNumericRange)(this.min, this.max, BiasNumericRange_1.bigIntLogLike);\n        if (ranges.length === 1) {\n            return ranges[0];\n        }\n        const id = mrng.nextInt(-2 * (ranges.length - 1), ranges.length - 2);\n        return id < 0 ? ranges[0] : ranges[id + 1];\n    }\n    canShrinkWithoutContext(value) {\n        return typeof value === 'bigint' && this.min <= value && value <= this.max;\n    }\n    shrink(current, context) {\n        if (!BigIntArbitrary.isValidContext(current, context)) {\n            const target = this.defaultTarget();\n            return (0, ShrinkBigInt_1.shrinkBigInt)(current, target, true);\n        }\n        if (this.isLastChanceTry(current, context)) {\n            return Stream_1.Stream.of(new Value_1.Value(context, undefined));\n        }\n        return (0, ShrinkBigInt_1.shrinkBigInt)(current, context, false);\n    }\n    defaultTarget() {\n        if (this.min <= 0 && this.max >= 0) {\n            return BigInt(0);\n        }\n        return this.min < 0 ? this.max : this.min;\n    }\n    isLastChanceTry(current, context) {\n        if (current > 0)\n            return current === context + BigInt(1) && current > this.min;\n        if (current < 0)\n            return current === context - BigInt(1) && current < this.max;\n        return false;\n    }\n    static isValidContext(current, context) {\n        if (context === undefined) {\n            return false;\n        }\n        if (typeof context !== 'bigint') {\n            throw new Error(`Invalid context type passed to BigIntArbitrary (#1)`);\n        }\n        const differentSigns = (current > 0 && context < 0) || (current < 0 && context > 0);\n        if (context !== BigInt(0) && differentSigns) {\n            throw new Error(`Invalid context value passed to BigIntArbitrary (#2)`);\n        }\n        return true;\n    }\n}\nexports.BigIntArbitrary = BigIntArbitrary;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}