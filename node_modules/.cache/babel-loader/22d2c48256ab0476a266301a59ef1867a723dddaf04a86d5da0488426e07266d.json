{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveSize = exports.depthBiasFromSizeForArbitrary = exports.maxGeneratedLengthFromSizeForArbitrary = exports.relativeSizeToSize = exports.maxLengthFromMinLength = exports.DefaultSize = exports.MaxLengthUpperBound = void 0;\nconst GlobalParameters_1 = require(\"../../../check/runner/configuration/GlobalParameters\");\nexports.MaxLengthUpperBound = 0x7fffffff;\nconst orderedSize = ['xsmall', 'small', 'medium', 'large', 'xlarge'];\nconst orderedRelativeSize = ['-4', '-3', '-2', '-1', '=', '+1', '+2', '+3', '+4'];\nexports.DefaultSize = 'small';\nfunction maxLengthFromMinLength(minLength, size) {\n  switch (size) {\n    case 'xsmall':\n      return Math.floor(1.1 * minLength) + 1;\n    case 'small':\n      return 2 * minLength + 10;\n    case 'medium':\n      return 11 * minLength + 100;\n    case 'large':\n      return 101 * minLength + 1000;\n    case 'xlarge':\n      return 1001 * minLength + 10000;\n    default:\n      throw new Error(`Unable to compute lengths based on received size: ${size}`);\n  }\n}\nexports.maxLengthFromMinLength = maxLengthFromMinLength;\nfunction relativeSizeToSize(size, defaultSize) {\n  const sizeInRelative = orderedRelativeSize.indexOf(size);\n  if (sizeInRelative === -1) {\n    return size;\n  }\n  const defaultSizeInSize = orderedSize.indexOf(defaultSize);\n  if (defaultSizeInSize === -1) {\n    throw new Error(`Unable to offset size based on the unknown defaulted one: ${defaultSize}`);\n  }\n  const resultingSizeInSize = defaultSizeInSize + sizeInRelative - 4;\n  return resultingSizeInSize < 0 ? orderedSize[0] : resultingSizeInSize >= orderedSize.length ? orderedSize[orderedSize.length - 1] : orderedSize[resultingSizeInSize];\n}\nexports.relativeSizeToSize = relativeSizeToSize;\nfunction maxGeneratedLengthFromSizeForArbitrary(size, minLength, maxLength, specifiedMaxLength) {\n  const {\n    baseSize: defaultSize = exports.DefaultSize,\n    defaultSizeToMaxWhenMaxSpecified\n  } = (0, GlobalParameters_1.readConfigureGlobal)() || {};\n  const definedSize = size !== undefined ? size : specifiedMaxLength && defaultSizeToMaxWhenMaxSpecified ? 'max' : defaultSize;\n  if (definedSize === 'max') {\n    return maxLength;\n  }\n  const finalSize = relativeSizeToSize(definedSize, defaultSize);\n  return Math.min(maxLengthFromMinLength(minLength, finalSize), maxLength);\n}\nexports.maxGeneratedLengthFromSizeForArbitrary = maxGeneratedLengthFromSizeForArbitrary;\nfunction depthBiasFromSizeForArbitrary(depthSizeOrSize, specifiedMaxDepth) {\n  if (typeof depthSizeOrSize === 'number') {\n    return 1 / depthSizeOrSize;\n  }\n  const {\n    baseSize: defaultSize = exports.DefaultSize,\n    defaultSizeToMaxWhenMaxSpecified\n  } = (0, GlobalParameters_1.readConfigureGlobal)() || {};\n  const definedSize = depthSizeOrSize !== undefined ? depthSizeOrSize : specifiedMaxDepth && defaultSizeToMaxWhenMaxSpecified ? 'max' : defaultSize;\n  if (definedSize === 'max') {\n    return 0;\n  }\n  const finalSize = relativeSizeToSize(definedSize, defaultSize);\n  switch (finalSize) {\n    case 'xsmall':\n      return 1;\n    case 'small':\n      return 0.5;\n    case 'medium':\n      return 0.25;\n    case 'large':\n      return 0.125;\n    case 'xlarge':\n      return 0.0625;\n  }\n}\nexports.depthBiasFromSizeForArbitrary = depthBiasFromSizeForArbitrary;\nfunction resolveSize(size) {\n  const {\n    baseSize: defaultSize = exports.DefaultSize\n  } = (0, GlobalParameters_1.readConfigureGlobal)() || {};\n  if (size === undefined) {\n    return defaultSize;\n  }\n  return relativeSizeToSize(size, defaultSize);\n}\nexports.resolveSize = resolveSize;","map":{"version":3,"names":["Object","defineProperty","exports","value","resolveSize","depthBiasFromSizeForArbitrary","maxGeneratedLengthFromSizeForArbitrary","relativeSizeToSize","maxLengthFromMinLength","DefaultSize","MaxLengthUpperBound","GlobalParameters_1","require","orderedSize","orderedRelativeSize","minLength","size","Math","floor","Error","defaultSize","sizeInRelative","indexOf","defaultSizeInSize","resultingSizeInSize","length","maxLength","specifiedMaxLength","baseSize","defaultSizeToMaxWhenMaxSpecified","readConfigureGlobal","definedSize","undefined","finalSize","min","depthSizeOrSize","specifiedMaxDepth"],"sources":["/Users/karimelbarbary/Desktop/test4/devote/node_modules/fast-check/lib/arbitrary/_internals/helpers/MaxLengthFromMinLength.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSize = exports.depthBiasFromSizeForArbitrary = exports.maxGeneratedLengthFromSizeForArbitrary = exports.relativeSizeToSize = exports.maxLengthFromMinLength = exports.DefaultSize = exports.MaxLengthUpperBound = void 0;\nconst GlobalParameters_1 = require(\"../../../check/runner/configuration/GlobalParameters\");\nexports.MaxLengthUpperBound = 0x7fffffff;\nconst orderedSize = ['xsmall', 'small', 'medium', 'large', 'xlarge'];\nconst orderedRelativeSize = ['-4', '-3', '-2', '-1', '=', '+1', '+2', '+3', '+4'];\nexports.DefaultSize = 'small';\nfunction maxLengthFromMinLength(minLength, size) {\n    switch (size) {\n        case 'xsmall':\n            return Math.floor(1.1 * minLength) + 1;\n        case 'small':\n            return 2 * minLength + 10;\n        case 'medium':\n            return 11 * minLength + 100;\n        case 'large':\n            return 101 * minLength + 1000;\n        case 'xlarge':\n            return 1001 * minLength + 10000;\n        default:\n            throw new Error(`Unable to compute lengths based on received size: ${size}`);\n    }\n}\nexports.maxLengthFromMinLength = maxLengthFromMinLength;\nfunction relativeSizeToSize(size, defaultSize) {\n    const sizeInRelative = orderedRelativeSize.indexOf(size);\n    if (sizeInRelative === -1) {\n        return size;\n    }\n    const defaultSizeInSize = orderedSize.indexOf(defaultSize);\n    if (defaultSizeInSize === -1) {\n        throw new Error(`Unable to offset size based on the unknown defaulted one: ${defaultSize}`);\n    }\n    const resultingSizeInSize = defaultSizeInSize + sizeInRelative - 4;\n    return resultingSizeInSize < 0\n        ? orderedSize[0]\n        : resultingSizeInSize >= orderedSize.length\n            ? orderedSize[orderedSize.length - 1]\n            : orderedSize[resultingSizeInSize];\n}\nexports.relativeSizeToSize = relativeSizeToSize;\nfunction maxGeneratedLengthFromSizeForArbitrary(size, minLength, maxLength, specifiedMaxLength) {\n    const { baseSize: defaultSize = exports.DefaultSize, defaultSizeToMaxWhenMaxSpecified } = (0, GlobalParameters_1.readConfigureGlobal)() || {};\n    const definedSize = size !== undefined ? size : specifiedMaxLength && defaultSizeToMaxWhenMaxSpecified ? 'max' : defaultSize;\n    if (definedSize === 'max') {\n        return maxLength;\n    }\n    const finalSize = relativeSizeToSize(definedSize, defaultSize);\n    return Math.min(maxLengthFromMinLength(minLength, finalSize), maxLength);\n}\nexports.maxGeneratedLengthFromSizeForArbitrary = maxGeneratedLengthFromSizeForArbitrary;\nfunction depthBiasFromSizeForArbitrary(depthSizeOrSize, specifiedMaxDepth) {\n    if (typeof depthSizeOrSize === 'number') {\n        return 1 / depthSizeOrSize;\n    }\n    const { baseSize: defaultSize = exports.DefaultSize, defaultSizeToMaxWhenMaxSpecified } = (0, GlobalParameters_1.readConfigureGlobal)() || {};\n    const definedSize = depthSizeOrSize !== undefined\n        ? depthSizeOrSize\n        : specifiedMaxDepth && defaultSizeToMaxWhenMaxSpecified\n            ? 'max'\n            : defaultSize;\n    if (definedSize === 'max') {\n        return 0;\n    }\n    const finalSize = relativeSizeToSize(definedSize, defaultSize);\n    switch (finalSize) {\n        case 'xsmall':\n            return 1;\n        case 'small':\n            return 0.5;\n        case 'medium':\n            return 0.25;\n        case 'large':\n            return 0.125;\n        case 'xlarge':\n            return 0.0625;\n    }\n}\nexports.depthBiasFromSizeForArbitrary = depthBiasFromSizeForArbitrary;\nfunction resolveSize(size) {\n    const { baseSize: defaultSize = exports.DefaultSize } = (0, GlobalParameters_1.readConfigureGlobal)() || {};\n    if (size === undefined) {\n        return defaultSize;\n    }\n    return relativeSizeToSize(size, defaultSize);\n}\nexports.resolveSize = resolveSize;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}