{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addressCases = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = (0, debug_1.default)(\"codec:wrap:address\");\nconst dispatch_1 = require(\"./dispatch\");\nconst errors_1 = require(\"./errors\");\nconst Utils = __importStar(require(\"./utils\"));\nconst EvmUtils = __importStar(require(\"../evm/utils\"));\nconst Messages = __importStar(require(\"./messages\"));\nconst web3_utils_1 = __importDefault(require(\"web3-utils\"));\n//no separate cases for contracts; even with loose turned off,\n//we consider these interchangeable\nconst addressFromStringCases = [addressFromHexString, addressFromPrefixlessHexString, addressFromOtherString //Please put after other string cases! Also, can yield\n];\n\nconst addressCasesBasic = [...addressFromStringCases, addressFromBoxedString, addressFromContractInput, addressFromCodecAddressLikeValue, addressFromCodecUdvtValue, addressFailureCase];\nexports.addressCases = [addressFromTypeValueInput, ...addressCasesBasic];\nfunction* addressFromHexString(dataType, input, wrapOptions) {\n  if (typeof input !== \"string\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a string\");\n  }\n  if (!Utils.isHexString(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a 0x-prefixed hex string\");\n  }\n  return validateNormalizeAndWrap(dataType, input, input, wrapOptions.name);\n}\nfunction* addressFromPrefixlessHexString(dataType, input, wrapOptions) {\n  if (typeof input !== \"string\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a string\");\n  }\n  if (!Utils.isPrefixlessHexString(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not an unprefixed hex string\");\n  }\n  return validateNormalizeAndWrap(dataType, \"0x\" + input, input, wrapOptions.name);\n}\nfunction* addressFromOtherString(dataType, input, wrapOptions) {\n  if (typeof input !== \"string\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a string\");\n  }\n  const request = {\n    kind: \"address\",\n    name: input\n  };\n  const response = yield request;\n  if (response.kind !== \"address\") {\n    throw new errors_1.BadResponseTypeError(request, response);\n  }\n  if (response.address === null) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, response.partiallyRecognized ? 5 : 3, response.reason);\n  }\n  //we should be able to skip validation & normalization here\n  return wrapAsAppropriateType(dataType, response.address);\n}\nfunction* addressFromBoxedString(dataType, input, wrapOptions) {\n  if (!Utils.isBoxedString(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a boxed string\");\n  }\n  //unbox and try again\n  return yield* (0, dispatch_1.wrapWithCases)(dataType, input.valueOf(), wrapOptions, addressFromStringCases);\n}\nfunction* addressFromContractInput(dataType, input, wrapOptions) {\n  if (!Utils.isContractInput(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a contract-like object\");\n  }\n  return validateNormalizeAndWrap(dataType, input.address, input, wrapOptions.name);\n}\nfunction* addressFromCodecAddressLikeValue(dataType, input, wrapOptions) {\n  if (!Utils.isWrappedResult(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a wrapped result\");\n  }\n  if (input.type.typeClass !== \"address\" && input.type.typeClass !== \"contract\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.wrappedTypeMessage(input.type));\n  }\n  if (input.kind !== \"value\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.errorResultMessage);\n  }\n  let address;\n  switch (input.type.typeClass) {\n    case \"address\":\n      address = input.value.asAddress;\n      break;\n    case \"contract\":\n      address = input.value.address;\n      break;\n    //other cases are impossible at this point\n  }\n  //we should be able to skip validation/normalization here\n  return wrapAsAppropriateType(dataType, address);\n}\nfunction* addressFromCodecUdvtValue(dataType, input, wrapOptions) {\n  if (!Utils.isWrappedResult(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a wrapped result\");\n  }\n  if (input.type.typeClass !== \"userDefinedValueType\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, Messages.wrappedTypeMessage(input.type));\n  }\n  if (input.kind !== \"value\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.errorResultMessage);\n  }\n  return yield* addressFromCodecAddressLikeValue(dataType, input.value, wrapOptions);\n}\nfunction* addressFromTypeValueInput(dataType, input, wrapOptions) {\n  if (!Utils.isTypeValueInput(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a type/value pair\");\n  }\n  if (input.type !== \"address\" && input.type !== \"contract\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.specifiedTypeMessage(input.type));\n  }\n  //extract value & try again, with loose option turned on\n  return yield* (0, dispatch_1.wrapWithCases)(dataType, input.value, Object.assign(Object.assign({}, wrapOptions), {\n    loose: true\n  }), addressCasesBasic);\n}\nfunction* addressFailureCase(dataType, input, wrapOptions) {\n  throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 2, \"Input was not recognizable as an address\");\n}\nfunction validateAndNormalize(asAddress, dataType,\n//for errors\ninput,\n//for errors\nname //for errors\n) {\n  if (!Utils.isByteString(asAddress)) {\n    throw new errors_1.TypeMismatchError(dataType, input, name, 5, Messages.notABytestringMessage(\"Address\"));\n  }\n  if (asAddress.length !== 2 * EvmUtils.ADDRESS_SIZE + 2) {\n    throw new errors_1.TypeMismatchError(dataType, input, name, 5, Messages.wrongLengthMessage(\"address\", EvmUtils.ADDRESS_SIZE, (asAddress.length - 2) / 2));\n  }\n  if (!web3_utils_1.default.isAddress(asAddress)) {\n    throw new errors_1.TypeMismatchError(dataType, input, name, 6,\n    //to beat the one from the yield case :P\n    Messages.checksumFailedMessage);\n  }\n  //and normalize\n  return web3_utils_1.default.toChecksumAddress(asAddress);\n}\nfunction wrapAsAppropriateType(dataType, asAddress) {\n  //return address or contract value as appropriate\n  switch (dataType.typeClass) {\n    case \"address\":\n      return {\n        type: dataType,\n        kind: \"value\",\n        value: {\n          asAddress\n        }\n      };\n    case \"contract\":\n      return {\n        type: dataType,\n        kind: \"value\",\n        value: {\n          kind: \"unknown\",\n          address: asAddress\n        }\n      };\n  }\n}\nfunction validateNormalizeAndWrap(dataType, asAddress, input,\n//for errors\nname //for errors\n) {\n  return wrapAsAppropriateType(dataType, validateAndNormalize(asAddress, dataType, input, name));\n}","map":{"version":3,"names":["debug_1","__importDefault","require","debug","default","dispatch_1","errors_1","Utils","__importStar","EvmUtils","Messages","web3_utils_1","addressFromStringCases","addressFromHexString","addressFromPrefixlessHexString","addressFromOtherString","addressCasesBasic","addressFromBoxedString","addressFromContractInput","addressFromCodecAddressLikeValue","addressFromCodecUdvtValue","addressFailureCase","exports","addressCases","addressFromTypeValueInput","dataType","input","wrapOptions","TypeMismatchError","name","isHexString","validateNormalizeAndWrap","isPrefixlessHexString","request","kind","response","BadResponseTypeError","address","partiallyRecognized","reason","wrapAsAppropriateType","isBoxedString","wrapWithCases","valueOf","isContractInput","isWrappedResult","type","typeClass","wrappedTypeMessage","errorResultMessage","value","asAddress","isTypeValueInput","specifiedTypeMessage","Object","assign","loose","validateAndNormalize","isByteString","notABytestringMessage","length","ADDRESS_SIZE","wrongLengthMessage","isAddress","checksumFailedMessage","toChecksumAddress"],"sources":["../../../lib/wrap/address.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}