{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.asyncDefaultReportMessage = exports.defaultReportMessage = exports.asyncReportRunDetails = exports.reportRunDetails = void 0;\nconst stringify_1 = require(\"../../../utils/stringify\");\nconst VerbosityLevel_1 = require(\"../configuration/VerbosityLevel\");\nconst ExecutionStatus_1 = require(\"../reporter/ExecutionStatus\");\nfunction formatHints(hints) {\n  if (hints.length === 1) {\n    return `Hint: ${hints[0]}`;\n  }\n  return hints.map((h, idx) => `Hint (${idx + 1}): ${h}`).join('\\n');\n}\nfunction formatFailures(failures, stringifyOne) {\n  return `Encountered failures were:\\n- ${failures.map(stringifyOne).join('\\n- ')}`;\n}\nfunction formatExecutionSummary(executionTrees, stringifyOne) {\n  const summaryLines = [];\n  const remainingTreesAndDepth = [];\n  for (const tree of executionTrees.slice().reverse()) {\n    remainingTreesAndDepth.push({\n      depth: 1,\n      tree\n    });\n  }\n  while (remainingTreesAndDepth.length !== 0) {\n    const currentTreeAndDepth = remainingTreesAndDepth.pop();\n    const currentTree = currentTreeAndDepth.tree;\n    const currentDepth = currentTreeAndDepth.depth;\n    const statusIcon = currentTree.status === ExecutionStatus_1.ExecutionStatus.Success ? '\\x1b[32m\\u221A\\x1b[0m' : currentTree.status === ExecutionStatus_1.ExecutionStatus.Failure ? '\\x1b[31m\\xD7\\x1b[0m' : '\\x1b[33m!\\x1b[0m';\n    const leftPadding = Array(currentDepth).join('. ');\n    summaryLines.push(`${leftPadding}${statusIcon} ${stringifyOne(currentTree.value)}`);\n    for (const tree of currentTree.children.slice().reverse()) {\n      remainingTreesAndDepth.push({\n        depth: currentDepth + 1,\n        tree\n      });\n    }\n  }\n  return `Execution summary:\\n${summaryLines.join('\\n')}`;\n}\nfunction preFormatTooManySkipped(out, stringifyOne) {\n  const message = `Failed to run property, too many pre-condition failures encountered\\n{ seed: ${out.seed} }\\n\\nRan ${out.numRuns} time(s)\\nSkipped ${out.numSkips} time(s)`;\n  let details = null;\n  const hints = ['Try to reduce the number of rejected values by combining map, flatMap and built-in arbitraries', 'Increase failure tolerance by setting maxSkipsPerRun to an higher value'];\n  if (out.verbose >= VerbosityLevel_1.VerbosityLevel.VeryVerbose) {\n    details = formatExecutionSummary(out.executionSummary, stringifyOne);\n  } else {\n    hints.push('Enable verbose mode at level VeryVerbose in order to check all generated values and their associated status');\n  }\n  return {\n    message,\n    details,\n    hints\n  };\n}\nfunction preFormatFailure(out, stringifyOne) {\n  const message = `Property failed after ${out.numRuns} tests\\n{ seed: ${out.seed}, path: \"${out.counterexamplePath}\", endOnFailure: true }\\nCounterexample: ${stringifyOne(out.counterexample)}\\nShrunk ${out.numShrinks} time(s)\\nGot error: ${out.error}`;\n  let details = null;\n  const hints = [];\n  if (out.verbose >= VerbosityLevel_1.VerbosityLevel.VeryVerbose) {\n    details = formatExecutionSummary(out.executionSummary, stringifyOne);\n  } else if (out.verbose === VerbosityLevel_1.VerbosityLevel.Verbose) {\n    details = formatFailures(out.failures, stringifyOne);\n  } else {\n    hints.push('Enable verbose mode in order to have the list of all failing values encountered during the run');\n  }\n  return {\n    message,\n    details,\n    hints\n  };\n}\nfunction preFormatEarlyInterrupted(out, stringifyOne) {\n  const message = `Property interrupted after ${out.numRuns} tests\\n{ seed: ${out.seed} }`;\n  let details = null;\n  const hints = [];\n  if (out.verbose >= VerbosityLevel_1.VerbosityLevel.VeryVerbose) {\n    details = formatExecutionSummary(out.executionSummary, stringifyOne);\n  } else {\n    hints.push('Enable verbose mode at level VeryVerbose in order to check all generated values and their associated status');\n  }\n  return {\n    message,\n    details,\n    hints\n  };\n}\nfunction defaultReportMessageInternal(out, stringifyOne) {\n  if (!out.failed) return;\n  const {\n    message,\n    details,\n    hints\n  } = out.counterexamplePath === null ? out.interrupted ? preFormatEarlyInterrupted(out, stringifyOne) : preFormatTooManySkipped(out, stringifyOne) : preFormatFailure(out, stringifyOne);\n  let errorMessage = message;\n  if (details != null) errorMessage += `\\n\\n${details}`;\n  if (hints.length > 0) errorMessage += `\\n\\n${formatHints(hints)}`;\n  return errorMessage;\n}\nfunction defaultReportMessage(out) {\n  return defaultReportMessageInternal(out, stringify_1.stringify);\n}\nexports.defaultReportMessage = defaultReportMessage;\nasync function asyncDefaultReportMessage(out) {\n  const pendingStringifieds = [];\n  function stringifyOne(value) {\n    const stringified = (0, stringify_1.possiblyAsyncStringify)(value);\n    if (typeof stringified === 'string') {\n      return stringified;\n    }\n    pendingStringifieds.push(Promise.all([value, stringified]));\n    return '\\u2026';\n  }\n  const firstTryMessage = defaultReportMessageInternal(out, stringifyOne);\n  if (pendingStringifieds.length === 0) {\n    return firstTryMessage;\n  }\n  const registeredValues = new Map(await Promise.all(pendingStringifieds));\n  function stringifySecond(value) {\n    const asyncStringifiedIfRegistered = registeredValues.get(value);\n    if (asyncStringifiedIfRegistered !== undefined) {\n      return asyncStringifiedIfRegistered;\n    }\n    return (0, stringify_1.stringify)(value);\n  }\n  return defaultReportMessageInternal(out, stringifySecond);\n}\nexports.asyncDefaultReportMessage = asyncDefaultReportMessage;\nfunction throwIfFailed(out) {\n  if (!out.failed) return;\n  throw new Error(defaultReportMessage(out));\n}\nasync function asyncThrowIfFailed(out) {\n  if (!out.failed) return;\n  throw new Error(await asyncDefaultReportMessage(out));\n}\nfunction reportRunDetails(out) {\n  if (out.runConfiguration.asyncReporter) return out.runConfiguration.asyncReporter(out);else if (out.runConfiguration.reporter) return out.runConfiguration.reporter(out);else return throwIfFailed(out);\n}\nexports.reportRunDetails = reportRunDetails;\nasync function asyncReportRunDetails(out) {\n  if (out.runConfiguration.asyncReporter) return out.runConfiguration.asyncReporter(out);else if (out.runConfiguration.reporter) return out.runConfiguration.reporter(out);else return asyncThrowIfFailed(out);\n}\nexports.asyncReportRunDetails = asyncReportRunDetails;","map":{"version":3,"names":["Object","defineProperty","exports","value","asyncDefaultReportMessage","defaultReportMessage","asyncReportRunDetails","reportRunDetails","stringify_1","require","VerbosityLevel_1","ExecutionStatus_1","formatHints","hints","length","map","h","idx","join","formatFailures","failures","stringifyOne","formatExecutionSummary","executionTrees","summaryLines","remainingTreesAndDepth","tree","slice","reverse","push","depth","currentTreeAndDepth","pop","currentTree","currentDepth","statusIcon","status","ExecutionStatus","Success","Failure","leftPadding","Array","children","preFormatTooManySkipped","out","message","seed","numRuns","numSkips","details","verbose","VerbosityLevel","VeryVerbose","executionSummary","preFormatFailure","counterexamplePath","counterexample","numShrinks","error","Verbose","preFormatEarlyInterrupted","defaultReportMessageInternal","failed","interrupted","errorMessage","stringify","pendingStringifieds","stringified","possiblyAsyncStringify","Promise","all","firstTryMessage","registeredValues","Map","stringifySecond","asyncStringifiedIfRegistered","get","undefined","throwIfFailed","Error","asyncThrowIfFailed","runConfiguration","asyncReporter","reporter"],"sources":["/Users/karimelbarbary/Desktop/test4/devote/node_modules/fast-check/lib/check/runner/utils/RunDetailsFormatter.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.asyncDefaultReportMessage = exports.defaultReportMessage = exports.asyncReportRunDetails = exports.reportRunDetails = void 0;\nconst stringify_1 = require(\"../../../utils/stringify\");\nconst VerbosityLevel_1 = require(\"../configuration/VerbosityLevel\");\nconst ExecutionStatus_1 = require(\"../reporter/ExecutionStatus\");\nfunction formatHints(hints) {\n    if (hints.length === 1) {\n        return `Hint: ${hints[0]}`;\n    }\n    return hints.map((h, idx) => `Hint (${idx + 1}): ${h}`).join('\\n');\n}\nfunction formatFailures(failures, stringifyOne) {\n    return `Encountered failures were:\\n- ${failures.map(stringifyOne).join('\\n- ')}`;\n}\nfunction formatExecutionSummary(executionTrees, stringifyOne) {\n    const summaryLines = [];\n    const remainingTreesAndDepth = [];\n    for (const tree of executionTrees.slice().reverse()) {\n        remainingTreesAndDepth.push({ depth: 1, tree });\n    }\n    while (remainingTreesAndDepth.length !== 0) {\n        const currentTreeAndDepth = remainingTreesAndDepth.pop();\n        const currentTree = currentTreeAndDepth.tree;\n        const currentDepth = currentTreeAndDepth.depth;\n        const statusIcon = currentTree.status === ExecutionStatus_1.ExecutionStatus.Success\n            ? '\\x1b[32m\\u221A\\x1b[0m'\n            : currentTree.status === ExecutionStatus_1.ExecutionStatus.Failure\n                ? '\\x1b[31m\\xD7\\x1b[0m'\n                : '\\x1b[33m!\\x1b[0m';\n        const leftPadding = Array(currentDepth).join('. ');\n        summaryLines.push(`${leftPadding}${statusIcon} ${stringifyOne(currentTree.value)}`);\n        for (const tree of currentTree.children.slice().reverse()) {\n            remainingTreesAndDepth.push({ depth: currentDepth + 1, tree });\n        }\n    }\n    return `Execution summary:\\n${summaryLines.join('\\n')}`;\n}\nfunction preFormatTooManySkipped(out, stringifyOne) {\n    const message = `Failed to run property, too many pre-condition failures encountered\\n{ seed: ${out.seed} }\\n\\nRan ${out.numRuns} time(s)\\nSkipped ${out.numSkips} time(s)`;\n    let details = null;\n    const hints = [\n        'Try to reduce the number of rejected values by combining map, flatMap and built-in arbitraries',\n        'Increase failure tolerance by setting maxSkipsPerRun to an higher value',\n    ];\n    if (out.verbose >= VerbosityLevel_1.VerbosityLevel.VeryVerbose) {\n        details = formatExecutionSummary(out.executionSummary, stringifyOne);\n    }\n    else {\n        hints.push('Enable verbose mode at level VeryVerbose in order to check all generated values and their associated status');\n    }\n    return { message, details, hints };\n}\nfunction preFormatFailure(out, stringifyOne) {\n    const message = `Property failed after ${out.numRuns} tests\\n{ seed: ${out.seed}, path: \"${out.counterexamplePath}\", endOnFailure: true }\\nCounterexample: ${stringifyOne(out.counterexample)}\\nShrunk ${out.numShrinks} time(s)\\nGot error: ${out.error}`;\n    let details = null;\n    const hints = [];\n    if (out.verbose >= VerbosityLevel_1.VerbosityLevel.VeryVerbose) {\n        details = formatExecutionSummary(out.executionSummary, stringifyOne);\n    }\n    else if (out.verbose === VerbosityLevel_1.VerbosityLevel.Verbose) {\n        details = formatFailures(out.failures, stringifyOne);\n    }\n    else {\n        hints.push('Enable verbose mode in order to have the list of all failing values encountered during the run');\n    }\n    return { message, details, hints };\n}\nfunction preFormatEarlyInterrupted(out, stringifyOne) {\n    const message = `Property interrupted after ${out.numRuns} tests\\n{ seed: ${out.seed} }`;\n    let details = null;\n    const hints = [];\n    if (out.verbose >= VerbosityLevel_1.VerbosityLevel.VeryVerbose) {\n        details = formatExecutionSummary(out.executionSummary, stringifyOne);\n    }\n    else {\n        hints.push('Enable verbose mode at level VeryVerbose in order to check all generated values and their associated status');\n    }\n    return { message, details, hints };\n}\nfunction defaultReportMessageInternal(out, stringifyOne) {\n    if (!out.failed)\n        return;\n    const { message, details, hints } = out.counterexamplePath === null\n        ? out.interrupted\n            ? preFormatEarlyInterrupted(out, stringifyOne)\n            : preFormatTooManySkipped(out, stringifyOne)\n        : preFormatFailure(out, stringifyOne);\n    let errorMessage = message;\n    if (details != null)\n        errorMessage += `\\n\\n${details}`;\n    if (hints.length > 0)\n        errorMessage += `\\n\\n${formatHints(hints)}`;\n    return errorMessage;\n}\nfunction defaultReportMessage(out) {\n    return defaultReportMessageInternal(out, stringify_1.stringify);\n}\nexports.defaultReportMessage = defaultReportMessage;\nasync function asyncDefaultReportMessage(out) {\n    const pendingStringifieds = [];\n    function stringifyOne(value) {\n        const stringified = (0, stringify_1.possiblyAsyncStringify)(value);\n        if (typeof stringified === 'string') {\n            return stringified;\n        }\n        pendingStringifieds.push(Promise.all([value, stringified]));\n        return '\\u2026';\n    }\n    const firstTryMessage = defaultReportMessageInternal(out, stringifyOne);\n    if (pendingStringifieds.length === 0) {\n        return firstTryMessage;\n    }\n    const registeredValues = new Map(await Promise.all(pendingStringifieds));\n    function stringifySecond(value) {\n        const asyncStringifiedIfRegistered = registeredValues.get(value);\n        if (asyncStringifiedIfRegistered !== undefined) {\n            return asyncStringifiedIfRegistered;\n        }\n        return (0, stringify_1.stringify)(value);\n    }\n    return defaultReportMessageInternal(out, stringifySecond);\n}\nexports.asyncDefaultReportMessage = asyncDefaultReportMessage;\nfunction throwIfFailed(out) {\n    if (!out.failed)\n        return;\n    throw new Error(defaultReportMessage(out));\n}\nasync function asyncThrowIfFailed(out) {\n    if (!out.failed)\n        return;\n    throw new Error(await asyncDefaultReportMessage(out));\n}\nfunction reportRunDetails(out) {\n    if (out.runConfiguration.asyncReporter)\n        return out.runConfiguration.asyncReporter(out);\n    else if (out.runConfiguration.reporter)\n        return out.runConfiguration.reporter(out);\n    else\n        return throwIfFailed(out);\n}\nexports.reportRunDetails = reportRunDetails;\nasync function asyncReportRunDetails(out) {\n    if (out.runConfiguration.asyncReporter)\n        return out.runConfiguration.asyncReporter(out);\n    else if (out.runConfiguration.reporter)\n        return out.runConfiguration.reporter(out);\n    else\n        return asyncThrowIfFailed(out);\n}\nexports.asyncReportRunDetails = asyncReportRunDetails;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}