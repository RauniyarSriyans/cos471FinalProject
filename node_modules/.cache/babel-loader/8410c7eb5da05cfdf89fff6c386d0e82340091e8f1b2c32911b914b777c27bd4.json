{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.patternsToStringUnmapperFor = exports.patternsToStringMapper = void 0;\nconst MaxLengthFromMinLength_1 = require(\"../helpers/MaxLengthFromMinLength\");\nfunction patternsToStringMapper(tab) {\n  return tab.join('');\n}\nexports.patternsToStringMapper = patternsToStringMapper;\nfunction patternsToStringUnmapperFor(patternsArb, constraints) {\n  return function patternsToStringUnmapper(value) {\n    if (typeof value !== 'string') {\n      throw new Error('Unsupported value');\n    }\n    const minLength = constraints.minLength !== undefined ? constraints.minLength : 0;\n    const maxLength = constraints.maxLength !== undefined ? constraints.maxLength : MaxLengthFromMinLength_1.MaxLengthUpperBound;\n    if (value.length === 0) {\n      if (minLength > 0) {\n        throw new Error('Unable to unmap received string');\n      }\n      return [];\n    }\n    const stack = [{\n      endIndexChunks: 0,\n      nextStartIndex: 1,\n      chunks: []\n    }];\n    while (stack.length > 0) {\n      const last = stack.pop();\n      for (let index = last.nextStartIndex; index <= value.length; ++index) {\n        const chunk = value.substring(last.endIndexChunks, index);\n        if (patternsArb.canShrinkWithoutContext(chunk)) {\n          const newChunks = last.chunks.concat([chunk]);\n          if (index === value.length) {\n            if (newChunks.length < minLength || newChunks.length > maxLength) {\n              break;\n            }\n            return newChunks;\n          }\n          stack.push({\n            endIndexChunks: last.endIndexChunks,\n            nextStartIndex: index + 1,\n            chunks: last.chunks\n          });\n          stack.push({\n            endIndexChunks: index,\n            nextStartIndex: index + 1,\n            chunks: newChunks\n          });\n          break;\n        }\n      }\n    }\n    throw new Error('Unable to unmap received string');\n  };\n}\nexports.patternsToStringUnmapperFor = patternsToStringUnmapperFor;","map":{"version":3,"names":["Object","defineProperty","exports","value","patternsToStringUnmapperFor","patternsToStringMapper","MaxLengthFromMinLength_1","require","tab","join","patternsArb","constraints","patternsToStringUnmapper","Error","minLength","undefined","maxLength","MaxLengthUpperBound","length","stack","endIndexChunks","nextStartIndex","chunks","last","pop","index","chunk","substring","canShrinkWithoutContext","newChunks","concat","push"],"sources":["/Users/karimelbarbary/Desktop/test4/devote/node_modules/fast-check/lib/arbitrary/_internals/mappers/PatternsToString.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.patternsToStringUnmapperFor = exports.patternsToStringMapper = void 0;\nconst MaxLengthFromMinLength_1 = require(\"../helpers/MaxLengthFromMinLength\");\nfunction patternsToStringMapper(tab) {\n    return tab.join('');\n}\nexports.patternsToStringMapper = patternsToStringMapper;\nfunction patternsToStringUnmapperFor(patternsArb, constraints) {\n    return function patternsToStringUnmapper(value) {\n        if (typeof value !== 'string') {\n            throw new Error('Unsupported value');\n        }\n        const minLength = constraints.minLength !== undefined ? constraints.minLength : 0;\n        const maxLength = constraints.maxLength !== undefined ? constraints.maxLength : MaxLengthFromMinLength_1.MaxLengthUpperBound;\n        if (value.length === 0) {\n            if (minLength > 0) {\n                throw new Error('Unable to unmap received string');\n            }\n            return [];\n        }\n        const stack = [{ endIndexChunks: 0, nextStartIndex: 1, chunks: [] }];\n        while (stack.length > 0) {\n            const last = stack.pop();\n            for (let index = last.nextStartIndex; index <= value.length; ++index) {\n                const chunk = value.substring(last.endIndexChunks, index);\n                if (patternsArb.canShrinkWithoutContext(chunk)) {\n                    const newChunks = last.chunks.concat([chunk]);\n                    if (index === value.length) {\n                        if (newChunks.length < minLength || newChunks.length > maxLength) {\n                            break;\n                        }\n                        return newChunks;\n                    }\n                    stack.push({ endIndexChunks: last.endIndexChunks, nextStartIndex: index + 1, chunks: last.chunks });\n                    stack.push({ endIndexChunks: index, nextStartIndex: index + 1, chunks: newChunks });\n                    break;\n                }\n            }\n        }\n        throw new Error('Unable to unmap received string');\n    };\n}\nexports.patternsToStringUnmapperFor = patternsToStringUnmapperFor;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,2BAA2B,GAAGF,OAAO,CAACG,sBAAsB,GAAG,KAAK,CAAC;AAC7E,MAAMC,wBAAwB,GAAGC,OAAO,CAAC,mCAAmC,CAAC;AAC7E,SAASF,sBAAsBA,CAACG,GAAG,EAAE;EACjC,OAAOA,GAAG,CAACC,IAAI,CAAC,EAAE,CAAC;AACvB;AACAP,OAAO,CAACG,sBAAsB,GAAGA,sBAAsB;AACvD,SAASD,2BAA2BA,CAACM,WAAW,EAAEC,WAAW,EAAE;EAC3D,OAAO,SAASC,wBAAwBA,CAACT,KAAK,EAAE;IAC5C,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC3B,MAAM,IAAIU,KAAK,CAAC,mBAAmB,CAAC;IACxC;IACA,MAAMC,SAAS,GAAGH,WAAW,CAACG,SAAS,KAAKC,SAAS,GAAGJ,WAAW,CAACG,SAAS,GAAG,CAAC;IACjF,MAAME,SAAS,GAAGL,WAAW,CAACK,SAAS,KAAKD,SAAS,GAAGJ,WAAW,CAACK,SAAS,GAAGV,wBAAwB,CAACW,mBAAmB;IAC5H,IAAId,KAAK,CAACe,MAAM,KAAK,CAAC,EAAE;MACpB,IAAIJ,SAAS,GAAG,CAAC,EAAE;QACf,MAAM,IAAID,KAAK,CAAC,iCAAiC,CAAC;MACtD;MACA,OAAO,EAAE;IACb;IACA,MAAMM,KAAK,GAAG,CAAC;MAAEC,cAAc,EAAE,CAAC;MAAEC,cAAc,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAG,CAAC,CAAC;IACpE,OAAOH,KAAK,CAACD,MAAM,GAAG,CAAC,EAAE;MACrB,MAAMK,IAAI,GAAGJ,KAAK,CAACK,GAAG,CAAC,CAAC;MACxB,KAAK,IAAIC,KAAK,GAAGF,IAAI,CAACF,cAAc,EAAEI,KAAK,IAAItB,KAAK,CAACe,MAAM,EAAE,EAAEO,KAAK,EAAE;QAClE,MAAMC,KAAK,GAAGvB,KAAK,CAACwB,SAAS,CAACJ,IAAI,CAACH,cAAc,EAAEK,KAAK,CAAC;QACzD,IAAIf,WAAW,CAACkB,uBAAuB,CAACF,KAAK,CAAC,EAAE;UAC5C,MAAMG,SAAS,GAAGN,IAAI,CAACD,MAAM,CAACQ,MAAM,CAAC,CAACJ,KAAK,CAAC,CAAC;UAC7C,IAAID,KAAK,KAAKtB,KAAK,CAACe,MAAM,EAAE;YACxB,IAAIW,SAAS,CAACX,MAAM,GAAGJ,SAAS,IAAIe,SAAS,CAACX,MAAM,GAAGF,SAAS,EAAE;cAC9D;YACJ;YACA,OAAOa,SAAS;UACpB;UACAV,KAAK,CAACY,IAAI,CAAC;YAAEX,cAAc,EAAEG,IAAI,CAACH,cAAc;YAAEC,cAAc,EAAEI,KAAK,GAAG,CAAC;YAAEH,MAAM,EAAEC,IAAI,CAACD;UAAO,CAAC,CAAC;UACnGH,KAAK,CAACY,IAAI,CAAC;YAAEX,cAAc,EAAEK,KAAK;YAAEJ,cAAc,EAAEI,KAAK,GAAG,CAAC;YAAEH,MAAM,EAAEO;UAAU,CAAC,CAAC;UACnF;QACJ;MACJ;IACJ;IACA,MAAM,IAAIhB,KAAK,CAAC,iCAAiC,CAAC;EACtD,CAAC;AACL;AACAX,OAAO,CAACE,2BAA2B,GAAGA,2BAA2B"},"metadata":{},"sourceType":"script","externalDependencies":[]}