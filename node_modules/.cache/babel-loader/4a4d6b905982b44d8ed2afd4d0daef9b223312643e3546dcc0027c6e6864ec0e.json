{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.emailAddress = void 0;\nconst array_1 = require(\"./array\");\nconst CharacterRangeArbitraryBuilder_1 = require(\"./_internals/builders/CharacterRangeArbitraryBuilder\");\nconst domain_1 = require(\"./domain\");\nconst stringOf_1 = require(\"./stringOf\");\nconst tuple_1 = require(\"./tuple\");\nconst AdapterArbitrary_1 = require(\"./_internals/AdapterArbitrary\");\nfunction dotAdapter(a) {\n  let currentLength = a[0].length;\n  for (let index = 1; index !== a.length; ++index) {\n    currentLength += 1 + a[index].length;\n    if (currentLength > 64) {\n      return {\n        adapted: true,\n        value: a.slice(0, index)\n      };\n    }\n  }\n  return {\n    adapted: false,\n    value: a\n  };\n}\nfunction dotMapper(a) {\n  return a.join('.');\n}\nfunction dotUnmapper(value) {\n  if (typeof value !== 'string') {\n    throw new Error('Unsupported');\n  }\n  return value.split('.');\n}\nfunction atMapper(data) {\n  return `${data[0]}@${data[1]}`;\n}\nfunction atUnmapper(value) {\n  if (typeof value !== 'string') {\n    throw new Error('Unsupported');\n  }\n  return value.split('@', 2);\n}\nfunction emailAddress() {\n  let constraints = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const others = ['!', '#', '$', '%', '&', \"'\", '*', '+', '-', '/', '=', '?', '^', '_', '`', '{', '|', '}', '~'];\n  const atextArb = (0, CharacterRangeArbitraryBuilder_1.buildLowerAlphaNumericArbitrary)(others);\n  const localPartArb = (0, AdapterArbitrary_1.adapter)((0, array_1.array)((0, stringOf_1.stringOf)(atextArb, {\n    minLength: 1,\n    maxLength: 64,\n    size: constraints.size\n  }), {\n    minLength: 1,\n    maxLength: 32,\n    size: constraints.size\n  }), dotAdapter).map(dotMapper, dotUnmapper);\n  return (0, tuple_1.tuple)(localPartArb, (0, domain_1.domain)({\n    size: constraints.size\n  })).map(atMapper, atUnmapper);\n}\nexports.emailAddress = emailAddress;","map":{"version":3,"names":["Object","defineProperty","exports","value","emailAddress","array_1","require","CharacterRangeArbitraryBuilder_1","domain_1","stringOf_1","tuple_1","AdapterArbitrary_1","dotAdapter","a","currentLength","length","index","adapted","slice","dotMapper","join","dotUnmapper","Error","split","atMapper","data","atUnmapper","constraints","arguments","undefined","others","atextArb","buildLowerAlphaNumericArbitrary","localPartArb","adapter","array","stringOf","minLength","maxLength","size","map","tuple","domain"],"sources":["/Users/karimelbarbary/Desktop/test4/devote/node_modules/fast-check/lib/arbitrary/emailAddress.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.emailAddress = void 0;\nconst array_1 = require(\"./array\");\nconst CharacterRangeArbitraryBuilder_1 = require(\"./_internals/builders/CharacterRangeArbitraryBuilder\");\nconst domain_1 = require(\"./domain\");\nconst stringOf_1 = require(\"./stringOf\");\nconst tuple_1 = require(\"./tuple\");\nconst AdapterArbitrary_1 = require(\"./_internals/AdapterArbitrary\");\nfunction dotAdapter(a) {\n    let currentLength = a[0].length;\n    for (let index = 1; index !== a.length; ++index) {\n        currentLength += 1 + a[index].length;\n        if (currentLength > 64) {\n            return { adapted: true, value: a.slice(0, index) };\n        }\n    }\n    return { adapted: false, value: a };\n}\nfunction dotMapper(a) {\n    return a.join('.');\n}\nfunction dotUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Unsupported');\n    }\n    return value.split('.');\n}\nfunction atMapper(data) {\n    return `${data[0]}@${data[1]}`;\n}\nfunction atUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Unsupported');\n    }\n    return value.split('@', 2);\n}\nfunction emailAddress(constraints = {}) {\n    const others = ['!', '#', '$', '%', '&', \"'\", '*', '+', '-', '/', '=', '?', '^', '_', '`', '{', '|', '}', '~'];\n    const atextArb = (0, CharacterRangeArbitraryBuilder_1.buildLowerAlphaNumericArbitrary)(others);\n    const localPartArb = (0, AdapterArbitrary_1.adapter)((0, array_1.array)((0, stringOf_1.stringOf)(atextArb, {\n        minLength: 1,\n        maxLength: 64,\n        size: constraints.size,\n    }), { minLength: 1, maxLength: 32, size: constraints.size }), dotAdapter).map(dotMapper, dotUnmapper);\n    return (0, tuple_1.tuple)(localPartArb, (0, domain_1.domain)({ size: constraints.size })).map(atMapper, atUnmapper);\n}\nexports.emailAddress = emailAddress;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}