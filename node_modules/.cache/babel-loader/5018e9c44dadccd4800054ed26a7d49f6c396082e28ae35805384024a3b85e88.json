{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bigIntN = void 0;\nconst BigIntArbitrary_1 = require(\"./_internals/BigIntArbitrary\");\nfunction bigIntN(n) {\n  if (n < 1) {\n    throw new Error('fc.bigIntN expects requested number of bits to be superior or equal to 1');\n  }\n  const min = BigInt(-1) << BigInt(n - 1);\n  const max = (BigInt(1) << BigInt(n - 1)) - BigInt(1);\n  return new BigIntArbitrary_1.BigIntArbitrary(min, max);\n}\nexports.bigIntN = bigIntN;","map":{"version":3,"names":["Object","defineProperty","exports","value","bigIntN","BigIntArbitrary_1","require","n","Error","min","BigInt","max","BigIntArbitrary"],"sources":["/Users/karimelbarbary/Desktop/test4/devote/node_modules/fast-check/lib/arbitrary/bigIntN.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bigIntN = void 0;\nconst BigIntArbitrary_1 = require(\"./_internals/BigIntArbitrary\");\nfunction bigIntN(n) {\n    if (n < 1) {\n        throw new Error('fc.bigIntN expects requested number of bits to be superior or equal to 1');\n    }\n    const min = BigInt(-1) << BigInt(n - 1);\n    const max = (BigInt(1) << BigInt(n - 1)) - BigInt(1);\n    return new BigIntArbitrary_1.BigIntArbitrary(min, max);\n}\nexports.bigIntN = bigIntN;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,MAAMC,iBAAiB,GAAGC,OAAO,CAAC,8BAA8B,CAAC;AACjE,SAASF,OAAOA,CAACG,CAAC,EAAE;EAChB,IAAIA,CAAC,GAAG,CAAC,EAAE;IACP,MAAM,IAAIC,KAAK,CAAC,0EAA0E,CAAC;EAC/F;EACA,MAAMC,GAAG,GAAGC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAIA,MAAM,CAACH,CAAC,GAAG,CAAC,CAAC;EACvC,MAAMI,GAAG,GAAG,CAACD,MAAM,CAAC,CAAC,CAAC,IAAIA,MAAM,CAACH,CAAC,GAAG,CAAC,CAAC,IAAIG,MAAM,CAAC,CAAC,CAAC;EACpD,OAAO,IAAIL,iBAAiB,CAACO,eAAe,CAACH,GAAG,EAAEE,GAAG,CAAC;AAC1D;AACAT,OAAO,CAACE,OAAO,GAAGA,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}