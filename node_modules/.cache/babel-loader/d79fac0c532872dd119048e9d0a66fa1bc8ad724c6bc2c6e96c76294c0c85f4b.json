{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.noTrailingUnmapper = exports.noTrailingMapper = exports.singleTrailingUnmapper = exports.singleTrailingMapper = exports.multiTrailingUnmapperOne = exports.multiTrailingMapperOne = exports.multiTrailingUnmapper = exports.multiTrailingMapper = exports.onlyTrailingUnmapper = exports.onlyTrailingMapper = exports.fullySpecifiedUnmapper = exports.fullySpecifiedMapper = void 0;\nfunction readBh(value) {\n  if (value.length === 0) return [];else return value.split(':');\n}\nfunction extractEhAndL(value) {\n  const valueSplits = value.split(':');\n  if (valueSplits.length >= 2 && valueSplits[valueSplits.length - 1].length <= 4) {\n    return [valueSplits.slice(0, valueSplits.length - 2), `${valueSplits[valueSplits.length - 2]}:${valueSplits[valueSplits.length - 1]}`];\n  }\n  return [valueSplits.slice(0, valueSplits.length - 1), valueSplits[valueSplits.length - 1]];\n}\nfunction fullySpecifiedMapper(data) {\n  return `${data[0].join(':')}:${data[1]}`;\n}\nexports.fullySpecifiedMapper = fullySpecifiedMapper;\nfunction fullySpecifiedUnmapper(value) {\n  if (typeof value !== 'string') throw new Error('Invalid type');\n  return extractEhAndL(value);\n}\nexports.fullySpecifiedUnmapper = fullySpecifiedUnmapper;\nfunction onlyTrailingMapper(data) {\n  return `::${data[0].join(':')}:${data[1]}`;\n}\nexports.onlyTrailingMapper = onlyTrailingMapper;\nfunction onlyTrailingUnmapper(value) {\n  if (typeof value !== 'string') throw new Error('Invalid type');\n  if (!value.startsWith('::')) throw new Error('Invalid value');\n  return extractEhAndL(value.substring(2));\n}\nexports.onlyTrailingUnmapper = onlyTrailingUnmapper;\nfunction multiTrailingMapper(data) {\n  return `${data[0].join(':')}::${data[1].join(':')}:${data[2]}`;\n}\nexports.multiTrailingMapper = multiTrailingMapper;\nfunction multiTrailingUnmapper(value) {\n  if (typeof value !== 'string') throw new Error('Invalid type');\n  const [bhString, trailingString] = value.split('::', 2);\n  const [eh, l] = extractEhAndL(trailingString);\n  return [readBh(bhString), eh, l];\n}\nexports.multiTrailingUnmapper = multiTrailingUnmapper;\nfunction multiTrailingMapperOne(data) {\n  return multiTrailingMapper([data[0], [data[1]], data[2]]);\n}\nexports.multiTrailingMapperOne = multiTrailingMapperOne;\nfunction multiTrailingUnmapperOne(value) {\n  const out = multiTrailingUnmapper(value);\n  return [out[0], out[1].join(':'), out[2]];\n}\nexports.multiTrailingUnmapperOne = multiTrailingUnmapperOne;\nfunction singleTrailingMapper(data) {\n  return `${data[0].join(':')}::${data[1]}`;\n}\nexports.singleTrailingMapper = singleTrailingMapper;\nfunction singleTrailingUnmapper(value) {\n  if (typeof value !== 'string') throw new Error('Invalid type');\n  const [bhString, trailing] = value.split('::', 2);\n  return [readBh(bhString), trailing];\n}\nexports.singleTrailingUnmapper = singleTrailingUnmapper;\nfunction noTrailingMapper(data) {\n  return `${data[0].join(':')}::`;\n}\nexports.noTrailingMapper = noTrailingMapper;\nfunction noTrailingUnmapper(value) {\n  if (typeof value !== 'string') throw new Error('Invalid type');\n  if (!value.endsWith('::')) throw new Error('Invalid value');\n  return [readBh(value.substring(0, value.length - 2))];\n}\nexports.noTrailingUnmapper = noTrailingUnmapper;","map":{"version":3,"names":["Object","defineProperty","exports","value","noTrailingUnmapper","noTrailingMapper","singleTrailingUnmapper","singleTrailingMapper","multiTrailingUnmapperOne","multiTrailingMapperOne","multiTrailingUnmapper","multiTrailingMapper","onlyTrailingUnmapper","onlyTrailingMapper","fullySpecifiedUnmapper","fullySpecifiedMapper","readBh","length","split","extractEhAndL","valueSplits","slice","data","join","Error","startsWith","substring","bhString","trailingString","eh","l","out","trailing","endsWith"],"sources":["/Users/karimelbarbary/Desktop/test4/devote/node_modules/fast-check/lib/arbitrary/_internals/mappers/EntitiesToIPv6.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.noTrailingUnmapper = exports.noTrailingMapper = exports.singleTrailingUnmapper = exports.singleTrailingMapper = exports.multiTrailingUnmapperOne = exports.multiTrailingMapperOne = exports.multiTrailingUnmapper = exports.multiTrailingMapper = exports.onlyTrailingUnmapper = exports.onlyTrailingMapper = exports.fullySpecifiedUnmapper = exports.fullySpecifiedMapper = void 0;\nfunction readBh(value) {\n    if (value.length === 0)\n        return [];\n    else\n        return value.split(':');\n}\nfunction extractEhAndL(value) {\n    const valueSplits = value.split(':');\n    if (valueSplits.length >= 2 && valueSplits[valueSplits.length - 1].length <= 4) {\n        return [\n            valueSplits.slice(0, valueSplits.length - 2),\n            `${valueSplits[valueSplits.length - 2]}:${valueSplits[valueSplits.length - 1]}`,\n        ];\n    }\n    return [valueSplits.slice(0, valueSplits.length - 1), valueSplits[valueSplits.length - 1]];\n}\nfunction fullySpecifiedMapper(data) {\n    return `${data[0].join(':')}:${data[1]}`;\n}\nexports.fullySpecifiedMapper = fullySpecifiedMapper;\nfunction fullySpecifiedUnmapper(value) {\n    if (typeof value !== 'string')\n        throw new Error('Invalid type');\n    return extractEhAndL(value);\n}\nexports.fullySpecifiedUnmapper = fullySpecifiedUnmapper;\nfunction onlyTrailingMapper(data) {\n    return `::${data[0].join(':')}:${data[1]}`;\n}\nexports.onlyTrailingMapper = onlyTrailingMapper;\nfunction onlyTrailingUnmapper(value) {\n    if (typeof value !== 'string')\n        throw new Error('Invalid type');\n    if (!value.startsWith('::'))\n        throw new Error('Invalid value');\n    return extractEhAndL(value.substring(2));\n}\nexports.onlyTrailingUnmapper = onlyTrailingUnmapper;\nfunction multiTrailingMapper(data) {\n    return `${data[0].join(':')}::${data[1].join(':')}:${data[2]}`;\n}\nexports.multiTrailingMapper = multiTrailingMapper;\nfunction multiTrailingUnmapper(value) {\n    if (typeof value !== 'string')\n        throw new Error('Invalid type');\n    const [bhString, trailingString] = value.split('::', 2);\n    const [eh, l] = extractEhAndL(trailingString);\n    return [readBh(bhString), eh, l];\n}\nexports.multiTrailingUnmapper = multiTrailingUnmapper;\nfunction multiTrailingMapperOne(data) {\n    return multiTrailingMapper([data[0], [data[1]], data[2]]);\n}\nexports.multiTrailingMapperOne = multiTrailingMapperOne;\nfunction multiTrailingUnmapperOne(value) {\n    const out = multiTrailingUnmapper(value);\n    return [out[0], out[1].join(':'), out[2]];\n}\nexports.multiTrailingUnmapperOne = multiTrailingUnmapperOne;\nfunction singleTrailingMapper(data) {\n    return `${data[0].join(':')}::${data[1]}`;\n}\nexports.singleTrailingMapper = singleTrailingMapper;\nfunction singleTrailingUnmapper(value) {\n    if (typeof value !== 'string')\n        throw new Error('Invalid type');\n    const [bhString, trailing] = value.split('::', 2);\n    return [readBh(bhString), trailing];\n}\nexports.singleTrailingUnmapper = singleTrailingUnmapper;\nfunction noTrailingMapper(data) {\n    return `${data[0].join(':')}::`;\n}\nexports.noTrailingMapper = noTrailingMapper;\nfunction noTrailingUnmapper(value) {\n    if (typeof value !== 'string')\n        throw new Error('Invalid type');\n    if (!value.endsWith('::'))\n        throw new Error('Invalid value');\n    return [readBh(value.substring(0, value.length - 2))];\n}\nexports.noTrailingUnmapper = noTrailingUnmapper;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,kBAAkB,GAAGF,OAAO,CAACG,gBAAgB,GAAGH,OAAO,CAACI,sBAAsB,GAAGJ,OAAO,CAACK,oBAAoB,GAAGL,OAAO,CAACM,wBAAwB,GAAGN,OAAO,CAACO,sBAAsB,GAAGP,OAAO,CAACQ,qBAAqB,GAAGR,OAAO,CAACS,mBAAmB,GAAGT,OAAO,CAACU,oBAAoB,GAAGV,OAAO,CAACW,kBAAkB,GAAGX,OAAO,CAACY,sBAAsB,GAAGZ,OAAO,CAACa,oBAAoB,GAAG,KAAK,CAAC;AAC5X,SAASC,MAAMA,CAACb,KAAK,EAAE;EACnB,IAAIA,KAAK,CAACc,MAAM,KAAK,CAAC,EAClB,OAAO,EAAE,CAAC,KAEV,OAAOd,KAAK,CAACe,KAAK,CAAC,GAAG,CAAC;AAC/B;AACA,SAASC,aAAaA,CAAChB,KAAK,EAAE;EAC1B,MAAMiB,WAAW,GAAGjB,KAAK,CAACe,KAAK,CAAC,GAAG,CAAC;EACpC,IAAIE,WAAW,CAACH,MAAM,IAAI,CAAC,IAAIG,WAAW,CAACA,WAAW,CAACH,MAAM,GAAG,CAAC,CAAC,CAACA,MAAM,IAAI,CAAC,EAAE;IAC5E,OAAO,CACHG,WAAW,CAACC,KAAK,CAAC,CAAC,EAAED,WAAW,CAACH,MAAM,GAAG,CAAC,CAAC,EAC3C,GAAEG,WAAW,CAACA,WAAW,CAACH,MAAM,GAAG,CAAC,CAAE,IAAGG,WAAW,CAACA,WAAW,CAACH,MAAM,GAAG,CAAC,CAAE,EAAC,CAClF;EACL;EACA,OAAO,CAACG,WAAW,CAACC,KAAK,CAAC,CAAC,EAAED,WAAW,CAACH,MAAM,GAAG,CAAC,CAAC,EAAEG,WAAW,CAACA,WAAW,CAACH,MAAM,GAAG,CAAC,CAAC,CAAC;AAC9F;AACA,SAASF,oBAAoBA,CAACO,IAAI,EAAE;EAChC,OAAQ,GAAEA,IAAI,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAE,IAAGD,IAAI,CAAC,CAAC,CAAE,EAAC;AAC5C;AACApB,OAAO,CAACa,oBAAoB,GAAGA,oBAAoB;AACnD,SAASD,sBAAsBA,CAACX,KAAK,EAAE;EACnC,IAAI,OAAOA,KAAK,KAAK,QAAQ,EACzB,MAAM,IAAIqB,KAAK,CAAC,cAAc,CAAC;EACnC,OAAOL,aAAa,CAAChB,KAAK,CAAC;AAC/B;AACAD,OAAO,CAACY,sBAAsB,GAAGA,sBAAsB;AACvD,SAASD,kBAAkBA,CAACS,IAAI,EAAE;EAC9B,OAAQ,KAAIA,IAAI,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAE,IAAGD,IAAI,CAAC,CAAC,CAAE,EAAC;AAC9C;AACApB,OAAO,CAACW,kBAAkB,GAAGA,kBAAkB;AAC/C,SAASD,oBAAoBA,CAACT,KAAK,EAAE;EACjC,IAAI,OAAOA,KAAK,KAAK,QAAQ,EACzB,MAAM,IAAIqB,KAAK,CAAC,cAAc,CAAC;EACnC,IAAI,CAACrB,KAAK,CAACsB,UAAU,CAAC,IAAI,CAAC,EACvB,MAAM,IAAID,KAAK,CAAC,eAAe,CAAC;EACpC,OAAOL,aAAa,CAAChB,KAAK,CAACuB,SAAS,CAAC,CAAC,CAAC,CAAC;AAC5C;AACAxB,OAAO,CAACU,oBAAoB,GAAGA,oBAAoB;AACnD,SAASD,mBAAmBA,CAACW,IAAI,EAAE;EAC/B,OAAQ,GAAEA,IAAI,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAE,KAAID,IAAI,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAE,IAAGD,IAAI,CAAC,CAAC,CAAE,EAAC;AAClE;AACApB,OAAO,CAACS,mBAAmB,GAAGA,mBAAmB;AACjD,SAASD,qBAAqBA,CAACP,KAAK,EAAE;EAClC,IAAI,OAAOA,KAAK,KAAK,QAAQ,EACzB,MAAM,IAAIqB,KAAK,CAAC,cAAc,CAAC;EACnC,MAAM,CAACG,QAAQ,EAAEC,cAAc,CAAC,GAAGzB,KAAK,CAACe,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;EACvD,MAAM,CAACW,EAAE,EAAEC,CAAC,CAAC,GAAGX,aAAa,CAACS,cAAc,CAAC;EAC7C,OAAO,CAACZ,MAAM,CAACW,QAAQ,CAAC,EAAEE,EAAE,EAAEC,CAAC,CAAC;AACpC;AACA5B,OAAO,CAACQ,qBAAqB,GAAGA,qBAAqB;AACrD,SAASD,sBAAsBA,CAACa,IAAI,EAAE;EAClC,OAAOX,mBAAmB,CAAC,CAACW,IAAI,CAAC,CAAC,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D;AACApB,OAAO,CAACO,sBAAsB,GAAGA,sBAAsB;AACvD,SAASD,wBAAwBA,CAACL,KAAK,EAAE;EACrC,MAAM4B,GAAG,GAAGrB,qBAAqB,CAACP,KAAK,CAAC;EACxC,OAAO,CAAC4B,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,CAACR,IAAI,CAAC,GAAG,CAAC,EAAEQ,GAAG,CAAC,CAAC,CAAC,CAAC;AAC7C;AACA7B,OAAO,CAACM,wBAAwB,GAAGA,wBAAwB;AAC3D,SAASD,oBAAoBA,CAACe,IAAI,EAAE;EAChC,OAAQ,GAAEA,IAAI,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAE,KAAID,IAAI,CAAC,CAAC,CAAE,EAAC;AAC7C;AACApB,OAAO,CAACK,oBAAoB,GAAGA,oBAAoB;AACnD,SAASD,sBAAsBA,CAACH,KAAK,EAAE;EACnC,IAAI,OAAOA,KAAK,KAAK,QAAQ,EACzB,MAAM,IAAIqB,KAAK,CAAC,cAAc,CAAC;EACnC,MAAM,CAACG,QAAQ,EAAEK,QAAQ,CAAC,GAAG7B,KAAK,CAACe,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;EACjD,OAAO,CAACF,MAAM,CAACW,QAAQ,CAAC,EAAEK,QAAQ,CAAC;AACvC;AACA9B,OAAO,CAACI,sBAAsB,GAAGA,sBAAsB;AACvD,SAASD,gBAAgBA,CAACiB,IAAI,EAAE;EAC5B,OAAQ,GAAEA,IAAI,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAE,IAAG;AACnC;AACArB,OAAO,CAACG,gBAAgB,GAAGA,gBAAgB;AAC3C,SAASD,kBAAkBA,CAACD,KAAK,EAAE;EAC/B,IAAI,OAAOA,KAAK,KAAK,QAAQ,EACzB,MAAM,IAAIqB,KAAK,CAAC,cAAc,CAAC;EACnC,IAAI,CAACrB,KAAK,CAAC8B,QAAQ,CAAC,IAAI,CAAC,EACrB,MAAM,IAAIT,KAAK,CAAC,eAAe,CAAC;EACpC,OAAO,CAACR,MAAM,CAACb,KAAK,CAACuB,SAAS,CAAC,CAAC,EAAEvB,KAAK,CAACc,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;AACzD;AACAf,OAAO,CAACE,kBAAkB,GAAGA,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}