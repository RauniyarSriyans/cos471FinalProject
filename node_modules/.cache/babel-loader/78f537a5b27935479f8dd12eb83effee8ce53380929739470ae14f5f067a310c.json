{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bigUintN = void 0;\nconst BigIntArbitrary_1 = require(\"./_internals/BigIntArbitrary\");\nfunction bigUintN(n) {\n  if (n < 0) {\n    throw new Error('fc.bigUintN expects requested number of bits to be superior or equal to 0');\n  }\n  const min = BigInt(0);\n  const max = (BigInt(1) << BigInt(n)) - BigInt(1);\n  return new BigIntArbitrary_1.BigIntArbitrary(min, max);\n}\nexports.bigUintN = bigUintN;","map":{"version":3,"names":["Object","defineProperty","exports","value","bigUintN","BigIntArbitrary_1","require","n","Error","min","BigInt","max","BigIntArbitrary"],"sources":["/Users/karimelbarbary/Desktop/test4/devote/node_modules/fast-check/lib/arbitrary/bigUintN.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bigUintN = void 0;\nconst BigIntArbitrary_1 = require(\"./_internals/BigIntArbitrary\");\nfunction bigUintN(n) {\n    if (n < 0) {\n        throw new Error('fc.bigUintN expects requested number of bits to be superior or equal to 0');\n    }\n    const min = BigInt(0);\n    const max = (BigInt(1) << BigInt(n)) - BigInt(1);\n    return new BigIntArbitrary_1.BigIntArbitrary(min, max);\n}\nexports.bigUintN = bigUintN;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,QAAQ,GAAG,KAAK,CAAC;AACzB,MAAMC,iBAAiB,GAAGC,OAAO,CAAC,8BAA8B,CAAC;AACjE,SAASF,QAAQA,CAACG,CAAC,EAAE;EACjB,IAAIA,CAAC,GAAG,CAAC,EAAE;IACP,MAAM,IAAIC,KAAK,CAAC,2EAA2E,CAAC;EAChG;EACA,MAAMC,GAAG,GAAGC,MAAM,CAAC,CAAC,CAAC;EACrB,MAAMC,GAAG,GAAG,CAACD,MAAM,CAAC,CAAC,CAAC,IAAIA,MAAM,CAACH,CAAC,CAAC,IAAIG,MAAM,CAAC,CAAC,CAAC;EAChD,OAAO,IAAIL,iBAAiB,CAACO,eAAe,CAACH,GAAG,EAAEE,GAAG,CAAC;AAC1D;AACAT,OAAO,CAACE,QAAQ,GAAGA,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}