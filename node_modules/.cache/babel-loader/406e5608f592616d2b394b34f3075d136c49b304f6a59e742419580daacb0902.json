{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Abi = exports.ConstructorEntry = exports.FallbackEntry = exports.ReceiveEntry = exports.FunctionEntry = exports.ErrorEntry = exports.EventEntry = exports.EventParameter = exports.Parameter = void 0;\nconst fc = __importStar(require(\"fast-check\"));\nconst change_case_1 = require(\"change-case\");\nconst wordLists_1 = __importDefault(require(\"./wordLists\"));\nconst Parameter = () => fc.tuple(fc.record({\n  name: ParameterName()\n}), TypeRecord()).map(_ref => {\n  let [{\n    name\n  }, type] = _ref;\n  return Object.assign({\n    name\n  }, type);\n});\nexports.Parameter = Parameter;\nconst EventParameter = () => fc.tuple(fc.record({\n  name: ParameterName(),\n  indexed: fc.boolean()\n}), TypeRecord()).map(_ref2 => {\n  let [{\n    name,\n    indexed\n  }, type] = _ref2;\n  return Object.assign({\n    name,\n    indexed\n  }, type);\n});\nexports.EventParameter = EventParameter;\nconst EventEntry = () => fc.record({\n  type: fc.constant(\"event\"),\n  name: EventName(),\n  inputs: fc.array((0, exports.EventParameter)(), {\n    maxLength: 10\n  }).filter(inputs => {\n    if (inputs.filter(_ref3 => {\n      let {\n        indexed\n      } = _ref3;\n      return indexed;\n    }).length > 3) {\n      // only up to 3 params can be indexed\n      return false;\n    }\n    // names that are not blank should be unique\n    const names = inputs.map(_ref4 => {\n      let {\n        name\n      } = _ref4;\n      return name;\n    }).filter(name => name !== \"\");\n    return names.length === new Set(names).size;\n  }),\n  anonymous: fc.boolean()\n});\nexports.EventEntry = EventEntry;\nconst ErrorEntry = () => fc.record({\n  type: fc.constant(\"error\"),\n  name: ErrorName(),\n  inputs: fc.array((0, exports.Parameter)(), {\n    maxLength: 10\n  }).filter(inputs => {\n    // names that are not blank should be unique\n    const names = inputs.map(_ref5 => {\n      let {\n        name\n      } = _ref5;\n      return name;\n    }).filter(name => name !== \"\");\n    return names.length === new Set(names).size;\n  })\n});\nexports.ErrorEntry = ErrorEntry;\nconst FunctionEntry = () => fc.tuple(fc.record({\n  type: fc.constant(\"function\")\n}, {\n  withDeletedKeys: true\n}), fc.record({\n  name: FunctionName(),\n  inputs: fc.array((0, exports.Parameter)(), {\n    maxLength: 10\n  })\n}), fc.record({\n  outputs: fc.array((0, exports.Parameter)(), {\n    maxLength: 10\n  })\n}, {\n  withDeletedKeys: true\n}), fc.tuple(fc.oneof(fc.constant(\"pure\"), fc.constant(\"view\"), fc.constant(\"nonpayable\"), fc.constant(\"payable\")), fc.boolean(), fc.boolean()).map(_ref6 => {\n  let [stateMutability, includeLegacy, includeModern] = _ref6;\n  const payable = stateMutability === \"payable\";\n  const constant = stateMutability === \"view\" || stateMutability === \"pure\";\n  const modern = {\n    stateMutability\n  };\n  const legacy = {\n    payable,\n    constant\n  };\n  return includeLegacy && includeModern ? Object.assign(Object.assign({}, modern), legacy) : includeModern ? modern : legacy;\n})).map(records => records.reduce((a, b) => Object.assign(Object.assign({}, a), b), {})).filter(entry => {\n  const {\n    inputs,\n    outputs = []\n  } = entry;\n  // names that are not blank should be unique\n  const names = [...inputs, ...outputs].map(_ref7 => {\n    let {\n      name\n    } = _ref7;\n    return name;\n  }).filter(name => name !== \"\");\n  return names.length === new Set(names).size;\n});\nexports.FunctionEntry = FunctionEntry;\nconst ReceiveEntry = () => fc.record({\n  type: fc.constant(\"receive\"),\n  stateMutability: fc.constant(\"payable\")\n});\nexports.ReceiveEntry = ReceiveEntry;\nconst FallbackEntry = () => fc.tuple(fc.record({\n  type: fc.constant(\"fallback\")\n}), fc.tuple(fc.oneof(fc.constant(\"nonpayable\"), fc.constant(\"payable\")), fc.boolean(), fc.boolean()).map(_ref8 => {\n  let [stateMutability, includeLegacy, includeModern] = _ref8;\n  const payable = stateMutability === \"payable\";\n  const modern = {\n    stateMutability\n  };\n  const legacy = {\n    payable\n  };\n  return includeLegacy && includeModern ? Object.assign(Object.assign({}, modern), legacy) : includeModern ? modern : legacy;\n})).map(_ref9 => {\n  let [{\n    type\n  }, mutabilityFields] = _ref9;\n  return Object.assign({\n    type\n  }, mutabilityFields);\n});\nexports.FallbackEntry = FallbackEntry;\nconst ConstructorEntry = () => fc.tuple(fc.record({\n  type: fc.constant(\"constructor\"),\n  inputs: fc.array((0, exports.Parameter)(), {\n    maxLength: 10\n  }).filter(inputs => {\n    // names that are not blank should be unique\n    const names = inputs.map(_ref10 => {\n      let {\n        name\n      } = _ref10;\n      return name;\n    }).filter(name => name !== \"\");\n    return names.length === new Set(names).size;\n  })\n}), fc.tuple(fc.oneof(fc.constant(\"nonpayable\"), fc.constant(\"payable\")), fc.boolean(), fc.boolean()).map(_ref11 => {\n  let [stateMutability, includeLegacy, includeModern] = _ref11;\n  const payable = stateMutability === \"payable\";\n  const modern = {\n    stateMutability\n  };\n  const legacy = {\n    payable\n  };\n  return includeLegacy && includeModern ? Object.assign(Object.assign({}, modern), legacy) : includeModern ? modern : legacy;\n})).map(_ref12 => {\n  let [{\n    type,\n    inputs\n  }, mutabilityFields] = _ref12;\n  return Object.assign({\n    type,\n    inputs\n  }, mutabilityFields);\n});\nexports.ConstructorEntry = ConstructorEntry;\nconst Abi = () => fc.tuple((0, exports.ConstructorEntry)(), (0, exports.FallbackEntry)(), (0, exports.ReceiveEntry)(), fc.array(fc.oneof((0, exports.FunctionEntry)(), (0, exports.EventEntry)(), (0, exports.ErrorEntry)()))).chain(_ref13 => {\n  let [constructor, fallback, receive, entries] = _ref13;\n  return fc.shuffledSubarray([constructor, fallback, receive, ...entries]);\n});\nexports.Abi = Abi;\nvar Numerics;\n(function (Numerics) {\n  // 0 < n <= 32\n  // use subtraction so that fast-check treats 32 as simpler than 1\n  Numerics.Bytes = () => fc.nat(31).map(k => 32 - k);\n  // 0 < n <= 256, 8 | n\n  Numerics.Bits = () => Numerics.Bytes().map(k => 8 * k);\n  // 0 < n <= 80\n  // use fancy math so that fast-check treats 18 as the simplest case\n  //\n  //     0 ----------------- 79\n  //     lines up as:\n  //     18 ------ 80, 0 --- 17\n  Numerics.DecimalPlaces = () => fc.nat(79).map(k => (k + 17) % 80 + 1);\n  Numerics.Precision = () => fc.tuple(Numerics.Bits(), Numerics.DecimalPlaces());\n})(Numerics || (Numerics = {}));\nvar Primitives;\n(function (Primitives) {\n  Primitives.Uint = () => Numerics.Bits().map(m => `uint${m}`);\n  Primitives.Int = () => Numerics.Bits().map(m => `int${m}`);\n  Primitives.Address = () => fc.constant(\"address\");\n  Primitives.Bool = () => fc.constant(\"bool\");\n  Primitives.Fixed = () => Numerics.Precision().map(_ref14 => {\n    let [m, n] = _ref14;\n    return `fixed${m}x${n}`;\n  });\n  Primitives.Ufixed = () => Numerics.Precision().map(_ref15 => {\n    let [m, n] = _ref15;\n    return `ufixed${m}x${n}`;\n  });\n  Primitives.BytesM = () => Numerics.Bytes().map(m => `bytes${m}`);\n  Primitives.Function = () => fc.constant(\"function\");\n  Primitives.Bytes = () => fc.constant(\"bytes\");\n  Primitives.String = () => fc.constant(\"string\");\n  Primitives.Tuple = () => fc.constant(\"tuple\");\n})(Primitives || (Primitives = {}));\nconst Primitive = () => fc.oneof(Primitives.Uint(), Primitives.Int(), Primitives.Address(), Primitives.Bool(), Primitives.Fixed(), Primitives.Ufixed(), Primitives.BytesM(), Primitives.Function(), Primitives.Bytes(), Primitives.String(), Primitives.Tuple());\nconst Type = fc.memo(n => n === 0 ? Primitive() :\n// we cap this at 3 so that fast-check doesn't blow the stack\nfc.oneof(Primitive(), ArrayFixed(n > 3 ? 3 : n), ArrayDynamic(n)));\nconst ArrayFixed = fc.memo(n => fc.tuple(Type(n - 1), fc.integer({\n  min: 1,\n  max: 256\n})).map(_ref16 => {\n  let [type, length] = _ref16;\n  return `${type}[${length}]`;\n}));\nconst ArrayDynamic = fc.memo(n => Type(n - 1).map(type => `${type}[]`));\nconst reservedWords = new Set([\"Error\", \"Panic\", \"_\", \"abi\", \"abstract\", \"addmod\", \"address\", \"after\", \"alias\", \"anonymous\", \"apply\", \"as\", \"assembly\", \"assert\", \"auto\", \"block\", \"blockhash\", \"bool\", \"break\", \"byte\", \"bytes\", \"calldata\", \"case\", \"catch\", \"constant\", \"constructor\", \"continue\", \"contract\", \"copyof\", \"days\", \"default\", \"define\", \"delete\", \"ecrecover\", \"else\", \"emit\", \"enum\", \"error\", \"ether\", \"event\", \"external\", \"fallback\", \"false\", \"final\", \"finney\", \"fixed\", \"for\", \"from\", \"function\", \"gasleft\", \"gwei\", \"hours\", \"if\", \"immutable\", \"implements\", \"import\", \"in\", \"indexed\", \"inline\", \"int\", \"interface\", \"internal\", \"is\", \"keccak256\", \"let\", \"library\", \"log0\", \"log1\", \"log2\", \"log3\", \"log4\", \"macro\", \"mapping\", \"match\", \"memory\", \"minutes\", \"modifier\", \"msg\", \"mulmod\", \"mutable\", \"new\", \"now\", \"null\", \"of\", \"override\", \"partial\", \"payable\", \"pragma\", \"private\", \"promise\", \"public\", \"pure\", \"receive\", \"reference\", \"relocatable\", \"require\", \"return\", \"returns\", \"revert\", \"ripemd160\", \"sealed\", \"seconds\", \"selfdestruct\", \"sha256\", \"sha3\", \"sizeof\", \"static\", \"storage\", \"string\", \"struct\", \"suicide\", \"super\", \"supports\", \"switch\", \"szabo\", \"this\", \"throw\", \"true\", \"try\", \"tx\", \"type\", \"typedef\", \"typeof\", \"ufixed\", \"uint\", \"unchecked\", \"using\", \"var\", \"view\", \"virtual\", \"weeks\", \"wei\", \"while\", \"years\"]);\nconst Name = function () {\n  let wordTypes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [\"noun\"];\n  let transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : change_case_1.camelCase;\n  const wordArbitraries = wordTypes.map(wordType => fc.constantFrom(...wordLists_1.default[wordType]));\n  const wordsArbitrary = fc.tuple(...wordArbitraries);\n  const nameArbitrary = wordsArbitrary.map(words => transform(words.join(\" \")));\n  return nameArbitrary.filter(word => !reservedWords.has(word));\n};\nconst ParameterName = () => fc.oneof({\n  arbitrary: Name([\"noun\"]),\n  weight: 9\n}, {\n  arbitrary: fc.constant(\"\"),\n  weight: 1\n});\nconst EventName = () => Name([\"verb\", \"noun\"], change_case_1.pascalCase);\nconst ErrorName = () => Name([\"noun\", \"noun\"], change_case_1.pascalCase);\nconst FunctionName = () => Name([\"verb\", \"noun\"]);\nconst TypeRecord = () => Type().chain(type => type.startsWith(\"tuple\") ? fc.record({\n  type: fc.constant(type),\n  components: fc.array((0, exports.Parameter)().filter(_ref17 => {\n    let {\n      name\n    } = _ref17;\n    return name !== \"\";\n  }), {\n    minLength: 1,\n    maxLength: 5\n  }).filter(items => {\n    const names = items.map(_ref18 => {\n      let {\n        name\n      } = _ref18;\n      return name;\n    }).filter(name => name !== \"\");\n    return names.length === new Set(names).size;\n  })\n}) : fc.record({\n  type: fc.constant(type)\n}));","map":{"version":3,"names":["fc","__importStar","require","change_case_1","wordLists_1","__importDefault","Parameter","tuple","record","name","ParameterName","TypeRecord","map","_ref","type","Object","assign","exports","EventParameter","indexed","boolean","_ref2","EventEntry","constant","EventName","inputs","array","maxLength","filter","_ref3","length","names","_ref4","Set","size","anonymous","ErrorEntry","ErrorName","_ref5","FunctionEntry","withDeletedKeys","FunctionName","outputs","oneof","_ref6","stateMutability","includeLegacy","includeModern","payable","modern","legacy","records","reduce","a","b","entry","_ref7","ReceiveEntry","FallbackEntry","_ref8","_ref9","mutabilityFields","ConstructorEntry","_ref10","_ref11","_ref12","Abi","chain","_ref13","constructor","fallback","receive","entries","shuffledSubarray","Numerics","Bytes","nat","k","Bits","DecimalPlaces","Precision","Primitives","Uint","m","Int","Address","Bool","Fixed","_ref14","n","Ufixed","_ref15","BytesM","Function","String","Tuple","Primitive","Type","memo","ArrayFixed","ArrayDynamic","integer","min","max","_ref16","reservedWords","Name","wordTypes","arguments","undefined","transform","camelCase","wordArbitraries","wordType","constantFrom","default","wordsArbitrary","nameArbitrary","words","join","word","has","arbitrary","weight","pascalCase","startsWith","components","_ref17","minLength","items","_ref18"],"sources":["../../lib/arbitrary.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAAA,EAAA,GAAAC,YAAA,CAAAC,OAAA;AACA,MAAAC,aAAA,GAAAD,OAAA;AACA,MAAAE,WAAA,GAAAC,eAAA,CAAAH,OAAA;AAGO,MAAMI,SAAS,GAAGA,CAAA,KACvBN,EAAE,CACCO,KAAK,CACJP,EAAE,CAACQ,MAAM,CAAC;EACRC,IAAI,EAAEC,aAAa;CACpB,CAAC,EACFC,UAAU,EAAE,CACb,CACAC,GAAG,CAACC,IAAA;EAAA,IAAC,CAAC;IAAEJ;EAAI,CAAE,EAAEK,IAAI,CAAC,GAAAD,IAAA;EAAA,OAAKE,MAAA,CAAAC,MAAA;IAAGP;EAAI,GAAKK,IAAI;AAAA,CAAG,CAAC;AARtCG,OAAA,CAAAX,SAAS,GAAAA,SAAA;AAUf,MAAMY,cAAc,GAAGA,CAAA,KAC5BlB,EAAE,CACCO,KAAK,CACJP,EAAE,CAACQ,MAAM,CAAC;EACRC,IAAI,EAAEC,aAAa,EAAE;EACrBS,OAAO,EAAEnB,EAAE,CAACoB,OAAO;CACpB,CAAC,EACFT,UAAU,EAAE,CACb,CACAC,GAAG,CAACS,KAAA;EAAA,IAAC,CAAC;IAAEZ,IAAI;IAAEU;EAAO,CAAE,EAAEL,IAAI,CAAC,GAAAO,KAAA;EAAA,OAAKN,MAAA,CAAAC,MAAA;IAAGP,IAAI;IAAEU;EAAO,GAAKL,IAAI;AAAA,CAAG,CAAC;AATxDG,OAAA,CAAAC,cAAc,GAAAA,cAAA;AAWpB,MAAMI,UAAU,GAAGA,CAAA,KACxBtB,EAAE,CAACQ,MAAM,CAAC;EACRM,IAAI,EAAEd,EAAE,CAACuB,QAAQ,CAAC,OAAO,CAAC;EAC1Bd,IAAI,EAAEe,SAAS,EAAE;EACjBC,MAAM,EAAEzB,EAAE,CAAC0B,KAAK,CAAC,IAAAT,OAAA,CAAAC,cAAc,GAAE,EAAE;IAAES,SAAS,EAAE;EAAE,CAAE,CAAC,CAACC,MAAM,CAACH,MAAM,IAAG;IACpE,IAAIA,MAAM,CAACG,MAAM,CAACC,KAAA;MAAA,IAAC;QAAEV;MAAO,CAAE,GAAAU,KAAA;MAAA,OAAKV,OAAO;IAAA,EAAC,CAACW,MAAM,GAAG,CAAC,EAAE;MACtD;MACA,OAAO,KAAK;;IAGd;IACA,MAAMC,KAAK,GAAGN,MAAM,CAACb,GAAG,CAACoB,KAAA;MAAA,IAAC;QAAEvB;MAAI,CAAE,GAAAuB,KAAA;MAAA,OAAKvB,IAAI;IAAA,EAAC,CAACmB,MAAM,CAACnB,IAAI,IAAIA,IAAI,KAAK,EAAE,CAAC;IACxE,OAAOsB,KAAK,CAACD,MAAM,KAAK,IAAIG,GAAG,CAACF,KAAK,CAAC,CAACG,IAAI;EAC7C,CAAC,CAAC;EACFC,SAAS,EAAEnC,EAAE,CAACoB,OAAO;CACtB,CAAC;AAfSH,OAAA,CAAAK,UAAU,GAAAA,UAAA;AAiBhB,MAAMc,UAAU,GAAGA,CAAA,KACxBpC,EAAE,CAACQ,MAAM,CAAC;EACRM,IAAI,EAAEd,EAAE,CAACuB,QAAQ,CAAC,OAAO,CAAC;EAC1Bd,IAAI,EAAE4B,SAAS,EAAE;EACjBZ,MAAM,EAAEzB,EAAE,CAAC0B,KAAK,CAAC,IAAAT,OAAA,CAAAX,SAAS,GAAE,EAAE;IAAEqB,SAAS,EAAE;EAAE,CAAE,CAAC,CAACC,MAAM,CAACH,MAAM,IAAG;IAC/D;IACA,MAAMM,KAAK,GAAGN,MAAM,CAACb,GAAG,CAAC0B,KAAA;MAAA,IAAC;QAAE7B;MAAI,CAAE,GAAA6B,KAAA;MAAA,OAAK7B,IAAI;IAAA,EAAC,CAACmB,MAAM,CAACnB,IAAI,IAAIA,IAAI,KAAK,EAAE,CAAC;IACxE,OAAOsB,KAAK,CAACD,MAAM,KAAK,IAAIG,GAAG,CAACF,KAAK,CAAC,CAACG,IAAI;EAC7C,CAAC;CACF,CAAC;AATSjB,OAAA,CAAAmB,UAAU,GAAAA,UAAA;AAWhB,MAAMG,aAAa,GAAGA,CAAA,KAC3BvC,EAAE,CACCO,KAAK,CACJP,EAAE,CAACQ,MAAM,CACP;EACEM,IAAI,EAAEd,EAAE,CAACuB,QAAQ,CAAC,UAAU;CAC7B,EACD;EAAEiB,eAAe,EAAE;AAAI,CAAE,CAC1B,EACDxC,EAAE,CAACQ,MAAM,CAAC;EACRC,IAAI,EAAEgC,YAAY,EAAE;EACpBhB,MAAM,EAAEzB,EAAE,CAAC0B,KAAK,CAAC,IAAAT,OAAA,CAAAX,SAAS,GAAE,EAAE;IAAEqB,SAAS,EAAE;EAAE,CAAE;CAChD,CAAC,EACF3B,EAAE,CAACQ,MAAM,CACP;EACEkC,OAAO,EAAE1C,EAAE,CAAC0B,KAAK,CAAC,IAAAT,OAAA,CAAAX,SAAS,GAAE,EAAE;IAAEqB,SAAS,EAAE;EAAE,CAAE;CACjD,EACD;EAAEa,eAAe,EAAE;AAAI,CAAE,CAC1B,EACDxC,EAAE,CACCO,KAAK,CACJP,EAAE,CAAC2C,KAAK,CACN3C,EAAE,CAACuB,QAAQ,CAAC,MAAM,CAAC,EACnBvB,EAAE,CAACuB,QAAQ,CAAC,MAAM,CAAC,EACnBvB,EAAE,CAACuB,QAAQ,CAAC,YAAY,CAAC,EACzBvB,EAAE,CAACuB,QAAQ,CAAC,SAAS,CAAC,CACvB,EACDvB,EAAE,CAACoB,OAAO,EAAE,EACZpB,EAAE,CAACoB,OAAO,EAAE,CACb,CACAR,GAAG,CAACgC,KAAA,IAAoD;EAAA,IAAnD,CAACC,eAAe,EAAEC,aAAa,EAAEC,aAAa,CAAC,GAAAH,KAAA;EACnD,MAAMI,OAAO,GAAGH,eAAe,KAAK,SAAS;EAC7C,MAAMtB,QAAQ,GACZsB,eAAe,KAAK,MAAM,IAAIA,eAAe,KAAK,MAAM;EAE1D,MAAMI,MAAM,GAAG;IAAEJ;EAAe,CAAE;EAClC,MAAMK,MAAM,GAAG;IAAEF,OAAO;IAAEzB;EAAQ,CAAE;EAEpC,OAAOuB,aAAa,IAAIC,aAAa,GAClChC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAMiC,MAAM,GAAKC,MAAM,IACtBH,aAAa,GACbE,MAAM,GACNC,MAAM;AACZ,CAAC,CAAC,CACL,CACAtC,GAAG,CAACuC,OAAO,IAAIA,OAAO,CAACC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKvC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAMqC,CAAC,GAAKC,CAAC,CAAG,EAAE,EAAE,CAAC,CAAC,CAC9D1B,MAAM,CAAC2B,KAAK,IAAG;EACd,MAAM;IAAE9B,MAAM;IAAEiB,OAAO,GAAG;EAAE,CAAE,GAAGa,KAA4B;EAC7D;EACA,MAAMxB,KAAK,GAAG,CAAC,GAAGN,MAAM,EAAE,GAAGiB,OAAO,CAAC,CAClC9B,GAAG,CAAC4C,KAAA;IAAA,IAAC;MAAE/C;IAAI,CAAE,GAAA+C,KAAA;IAAA,OAAK/C,IAAI;EAAA,EAAC,CACvBmB,MAAM,CAACnB,IAAI,IAAIA,IAAI,KAAK,EAAE,CAAC;EAC9B,OAAOsB,KAAK,CAACD,MAAM,KAAK,IAAIG,GAAG,CAACF,KAAK,CAAC,CAACG,IAAI;AAC7C,CAAC,CAAC;AArDOjB,OAAA,CAAAsB,aAAa,GAAAA,aAAA;AAuDnB,MAAMkB,YAAY,GAAGA,CAAA,KAC1BzD,EAAE,CAACQ,MAAM,CAAC;EACRM,IAAI,EAAEd,EAAE,CAACuB,QAAQ,CAAC,SAAS,CAAC;EAC5BsB,eAAe,EAAE7C,EAAE,CAACuB,QAAQ,CAAC,SAAS;CACvC,CAAC;AAJSN,OAAA,CAAAwC,YAAY,GAAAA,YAAA;AAMlB,MAAMC,aAAa,GAAGA,CAAA,KAC3B1D,EAAE,CACCO,KAAK,CACJP,EAAE,CAACQ,MAAM,CAAC;EACRM,IAAI,EAAEd,EAAE,CAACuB,QAAQ,CAAC,UAAU;CAC7B,CAAC,EACFvB,EAAE,CACCO,KAAK,CACJP,EAAE,CAAC2C,KAAK,CAAC3C,EAAE,CAACuB,QAAQ,CAAC,YAAY,CAAC,EAAEvB,EAAE,CAACuB,QAAQ,CAAC,SAAS,CAAC,CAAC,EAC3DvB,EAAE,CAACoB,OAAO,EAAE,EACZpB,EAAE,CAACoB,OAAO,EAAE,CACb,CACAR,GAAG,CAAC+C,KAAA,IAAoD;EAAA,IAAnD,CAACd,eAAe,EAAEC,aAAa,EAAEC,aAAa,CAAC,GAAAY,KAAA;EACnD,MAAMX,OAAO,GAAGH,eAAe,KAAK,SAAS;EAE7C,MAAMI,MAAM,GAAG;IAAEJ;EAAe,CAAE;EAClC,MAAMK,MAAM,GAAG;IAAEF;EAAO,CAAE;EAE1B,OAAOF,aAAa,IAAIC,aAAa,GAClChC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAMiC,MAAM,GAAKC,MAAM,IACtBH,aAAa,GACbE,MAAM,GACNC,MAAM;AACZ,CAAC,CAAC,CACL,CACAtC,GAAG,CAACgD,KAAA;EAAA,IAAC,CAAC;IAAE9C;EAAI,CAAE,EAAE+C,gBAAgB,CAAC,GAAAD,KAAA;EAAA,OAAK7C,MAAA,CAAAC,MAAA;IAAGF;EAAI,GAAK+C,gBAAgB;AAAA,CAAG,CAAC;AAzB9D5C,OAAA,CAAAyC,aAAa,GAAAA,aAAA;AA2BnB,MAAMI,gBAAgB,GAAGA,CAAA,KAC9B9D,EAAE,CACCO,KAAK,CACJP,EAAE,CAACQ,MAAM,CAAC;EACRM,IAAI,EAAEd,EAAE,CAACuB,QAAQ,CAAC,aAAa,CAAC;EAChCE,MAAM,EAAEzB,EAAE,CAAC0B,KAAK,CAAC,IAAAT,OAAA,CAAAX,SAAS,GAAE,EAAE;IAAEqB,SAAS,EAAE;EAAE,CAAE,CAAC,CAACC,MAAM,CAACH,MAAM,IAAG;IAC/D;IACA,MAAMM,KAAK,GAAGN,MAAM,CACjBb,GAAG,CAACmD,MAAA;MAAA,IAAC;QAAEtD;MAAI,CAAE,GAAAsD,MAAA;MAAA,OAAKtD,IAAI;IAAA,EAAC,CACvBmB,MAAM,CAACnB,IAAI,IAAIA,IAAI,KAAK,EAAE,CAAC;IAC9B,OAAOsB,KAAK,CAACD,MAAM,KAAK,IAAIG,GAAG,CAACF,KAAK,CAAC,CAACG,IAAI;EAC7C,CAAC;CACF,CAAC,EACFlC,EAAE,CACCO,KAAK,CACJP,EAAE,CAAC2C,KAAK,CAAC3C,EAAE,CAACuB,QAAQ,CAAC,YAAY,CAAC,EAAEvB,EAAE,CAACuB,QAAQ,CAAC,SAAS,CAAC,CAAC,EAC3DvB,EAAE,CAACoB,OAAO,EAAE,EACZpB,EAAE,CAACoB,OAAO,EAAE,CACb,CACAR,GAAG,CAACoD,MAAA,IAAoD;EAAA,IAAnD,CAACnB,eAAe,EAAEC,aAAa,EAAEC,aAAa,CAAC,GAAAiB,MAAA;EACnD,MAAMhB,OAAO,GAAGH,eAAe,KAAK,SAAS;EAE7C,MAAMI,MAAM,GAAG;IAAEJ;EAAe,CAAE;EAClC,MAAMK,MAAM,GAAG;IAAEF;EAAO,CAAE;EAE1B,OAAOF,aAAa,IAAIC,aAAa,GAClChC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAMiC,MAAM,GAAKC,MAAM,IACtBH,aAAa,GACbE,MAAM,GACNC,MAAM;AACZ,CAAC,CAAC,CACL,CACAtC,GAAG,CAACqD,MAAA;EAAA,IAAC,CAAC;IAAEnD,IAAI;IAAEW;EAAM,CAAE,EAAEoC,gBAAgB,CAAC,GAAAI,MAAA;EAAA,OAAKlD,MAAA,CAAAC,MAAA;IAC7CF,IAAI;IACJW;EAAM,GACHoC,gBAAgB;AAAA,CACnB,CAAC;AApCM5C,OAAA,CAAA6C,gBAAgB,GAAAA,gBAAA;AAsCtB,MAAMI,GAAG,GAAGA,CAAA,KACjBlE,EAAE,CACCO,KAAK,CACJ,IAAAU,OAAA,CAAA6C,gBAAgB,GAAE,EAClB,IAAA7C,OAAA,CAAAyC,aAAa,GAAE,EACf,IAAAzC,OAAA,CAAAwC,YAAY,GAAE,EACdzD,EAAE,CAAC0B,KAAK,CAAC1B,EAAE,CAAC2C,KAAK,CAAC,IAAA1B,OAAA,CAAAsB,aAAa,GAAE,EAAE,IAAAtB,OAAA,CAAAK,UAAU,GAAE,EAAE,IAAAL,OAAA,CAAAmB,UAAU,GAAE,CAAC,CAAC,CAChE,CACA+B,KAAK,CAACC,MAAA;EAAA,IAAC,CAACC,WAAW,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,OAAO,CAAC,GAAAJ,MAAA;EAAA,OAC/CpE,EAAE,CAACyE,gBAAgB,CAAC,CAACJ,WAAW,EAAEC,QAAQ,EAAEC,OAAO,EAAE,GAAGC,OAAO,CAAC,CAAC;AAAA,EAClE;AAVQvD,OAAA,CAAAiD,GAAG,GAAAA,GAAA;AAYhB,IAAUQ,QAAQ;AAAlB,WAAUA,QAAQ;EAChB;EACA;EACaA,QAAA,CAAAC,KAAK,GAAG,MAAM3E,EAAE,CAAC4E,GAAG,CAAC,EAAE,CAAC,CAAChE,GAAG,CAACiE,CAAC,IAAI,EAAE,GAAGA,CAAC,CAAC;EAEtD;EACaH,QAAA,CAAAI,IAAI,GAAG,MAAMJ,QAAA,CAAAC,KAAK,EAAE,CAAC/D,GAAG,CAACiE,CAAC,IAAI,CAAC,GAAGA,CAAC,CAAC;EAEjD;EACA;EACA;EACA;EACA;EACA;EACaH,QAAA,CAAAK,aAAa,GAAG,MAAM/E,EAAE,CAAC4E,GAAG,CAAC,EAAE,CAAC,CAAChE,GAAG,CAACiE,CAAC,IAAK,CAACA,CAAC,GAAG,EAAE,IAAI,EAAE,GAAI,CAAC,CAAC;EAE9DH,QAAA,CAAAM,SAAS,GAAG,MAAMhF,EAAE,CAACO,KAAK,CAACmE,QAAA,CAAAI,IAAI,EAAE,EAAEJ,QAAA,CAAAK,aAAa,EAAE,CAAC;AAClE,CAAC,EAjBSL,QAAQ,KAARA,QAAQ;AAmBlB,IAAUO,UAAU;AAApB,WAAUA,UAAU;EACLA,UAAA,CAAAC,IAAI,GAAG,MAAMR,QAAQ,CAACI,IAAI,EAAE,CAAClE,GAAG,CAACuE,CAAC,IAAI,OAAOA,CAAC,EAAE,CAAC;EACjDF,UAAA,CAAAG,GAAG,GAAG,MAAMV,QAAQ,CAACI,IAAI,EAAE,CAAClE,GAAG,CAACuE,CAAC,IAAI,MAAMA,CAAC,EAAE,CAAC;EAC/CF,UAAA,CAAAI,OAAO,GAAG,MAAMrF,EAAE,CAACuB,QAAQ,CAAC,SAAS,CAAC;EACtC0D,UAAA,CAAAK,IAAI,GAAG,MAAMtF,EAAE,CAACuB,QAAQ,CAAC,MAAM,CAAC;EAChC0D,UAAA,CAAAM,KAAK,GAAG,MACnBb,QAAQ,CAACM,SAAS,EAAE,CAACpE,GAAG,CAAC4E,MAAA;IAAA,IAAC,CAACL,CAAC,EAAEM,CAAC,CAAC,GAAAD,MAAA;IAAA,OAAK,QAAQL,CAAC,IAAIM,CAAC,EAAE;EAAA,EAAC;EAC3CR,UAAA,CAAAS,MAAM,GAAG,MACpBhB,QAAQ,CAACM,SAAS,EAAE,CAACpE,GAAG,CAAC+E,MAAA;IAAA,IAAC,CAACR,CAAC,EAAEM,CAAC,CAAC,GAAAE,MAAA;IAAA,OAAK,SAASR,CAAC,IAAIM,CAAC,EAAE;EAAA,EAAC;EAC5CR,UAAA,CAAAW,MAAM,GAAG,MAAMlB,QAAQ,CAACC,KAAK,EAAE,CAAC/D,GAAG,CAACuE,CAAC,IAAI,QAAQA,CAAC,EAAE,CAAC;EACrDF,UAAA,CAAAY,QAAQ,GAAG,MAAM7F,EAAE,CAACuB,QAAQ,CAAC,UAAU,CAAC;EACxC0D,UAAA,CAAAN,KAAK,GAAG,MAAM3E,EAAE,CAACuB,QAAQ,CAAC,OAAO,CAAC;EAClC0D,UAAA,CAAAa,MAAM,GAAG,MAAM9F,EAAE,CAACuB,QAAQ,CAAC,QAAQ,CAAC;EACpC0D,UAAA,CAAAc,KAAK,GAAG,MAAM/F,EAAE,CAACuB,QAAQ,CAAC,OAAO,CAAC;AACjD,CAAC,EAdS0D,UAAU,KAAVA,UAAU;AAgBpB,MAAMe,SAAS,GAAGA,CAAA,KAChBhG,EAAE,CAAC2C,KAAK,CACNsC,UAAU,CAACC,IAAI,EAAE,EACjBD,UAAU,CAACG,GAAG,EAAE,EAChBH,UAAU,CAACI,OAAO,EAAE,EACpBJ,UAAU,CAACK,IAAI,EAAE,EACjBL,UAAU,CAACM,KAAK,EAAE,EAClBN,UAAU,CAACS,MAAM,EAAE,EACnBT,UAAU,CAACW,MAAM,EAAE,EACnBX,UAAU,CAACY,QAAQ,EAAE,EACrBZ,UAAU,CAACN,KAAK,EAAE,EAClBM,UAAU,CAACa,MAAM,EAAE,EACnBb,UAAU,CAACc,KAAK,EAAE,CACnB;AAEH,MAAME,IAAI,GAAoBjG,EAAE,CAACkG,IAAI,CAACT,CAAC,IACrCA,CAAC,KAAK,CAAC,GACHO,SAAS,EAAE;AACX;AACAhG,EAAE,CAAC2C,KAAK,CAACqD,SAAS,EAAE,EAAEG,UAAU,CAACV,CAAC,GAAG,CAAC,GAAG,CAAC,GAAGA,CAAC,CAAC,EAAEW,YAAY,CAACX,CAAC,CAAC,CAAC,CACtE;AAED,MAAMU,UAAU,GAAGnG,EAAE,CAACkG,IAAI,CAACT,CAAC,IAC1BzF,EAAE,CACCO,KAAK,CAAC0F,IAAI,CAACR,CAAC,GAAG,CAAC,CAAC,EAAEzF,EAAE,CAACqG,OAAO,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAE,CAAC,CAAC,CACpD3F,GAAG,CAAC4F,MAAA;EAAA,IAAC,CAAC1F,IAAI,EAAEgB,MAAM,CAAC,GAAA0E,MAAA;EAAA,OAAK,GAAG1F,IAAI,IAAIgB,MAAM,GAAG;AAAA,EAAC,CACjD;AAED,MAAMsE,YAAY,GAAGpG,EAAE,CAACkG,IAAI,CAACT,CAAC,IAAIQ,IAAI,CAACR,CAAC,GAAG,CAAC,CAAC,CAAC7E,GAAG,CAACE,IAAI,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;AAEvE,MAAM2F,aAAa,GAAG,IAAIxE,GAAG,CAAC,CAC5B,OAAO,EACP,OAAO,EACP,GAAG,EACH,KAAK,EACL,UAAU,EACV,QAAQ,EACR,SAAS,EACT,OAAO,EACP,OAAO,EACP,WAAW,EACX,OAAO,EACP,IAAI,EACJ,UAAU,EACV,QAAQ,EACR,MAAM,EACN,OAAO,EACP,WAAW,EACX,MAAM,EACN,OAAO,EACP,MAAM,EACN,OAAO,EACP,UAAU,EACV,MAAM,EACN,OAAO,EACP,UAAU,EACV,aAAa,EACb,UAAU,EACV,UAAU,EACV,QAAQ,EACR,MAAM,EACN,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,WAAW,EACX,MAAM,EACN,MAAM,EACN,MAAM,EACN,OAAO,EACP,OAAO,EACP,OAAO,EACP,UAAU,EACV,UAAU,EACV,OAAO,EACP,OAAO,EACP,QAAQ,EACR,OAAO,EACP,KAAK,EACL,MAAM,EACN,UAAU,EACV,SAAS,EACT,MAAM,EACN,OAAO,EACP,IAAI,EACJ,WAAW,EACX,YAAY,EACZ,QAAQ,EACR,IAAI,EACJ,SAAS,EACT,QAAQ,EACR,KAAK,EACL,WAAW,EACX,UAAU,EACV,IAAI,EACJ,WAAW,EACX,KAAK,EACL,SAAS,EACT,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,OAAO,EACP,SAAS,EACT,OAAO,EACP,QAAQ,EACR,SAAS,EACT,UAAU,EACV,KAAK,EACL,QAAQ,EACR,SAAS,EACT,KAAK,EACL,KAAK,EACL,MAAM,EACN,IAAI,EACJ,UAAU,EACV,SAAS,EACT,SAAS,EACT,QAAQ,EACR,SAAS,EACT,SAAS,EACT,QAAQ,EACR,MAAM,EACN,SAAS,EACT,WAAW,EACX,aAAa,EACb,SAAS,EACT,QAAQ,EACR,SAAS,EACT,QAAQ,EACR,WAAW,EACX,QAAQ,EACR,SAAS,EACT,cAAc,EACd,QAAQ,EACR,MAAM,EACN,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,OAAO,EACP,UAAU,EACV,QAAQ,EACR,OAAO,EACP,MAAM,EACN,OAAO,EACP,MAAM,EACN,KAAK,EACL,IAAI,EACJ,MAAM,EACN,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,WAAW,EACX,OAAO,EACP,KAAK,EACL,MAAM,EACN,SAAS,EACT,OAAO,EACP,KAAK,EACL,OAAO,EACP,OAAO,CACR,CAAC;AAGF,MAAMyE,IAAI,GAAG,SAAAA,CAAA,EAGa;EAAA,IAFxBC,SAAA,GAAAC,SAAA,CAAA9E,MAAA,QAAA8E,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAA2B,CAAC,MAAM,CAAC;EAAA,IACnCE,SAAS,GAAAF,SAAA,CAAA9E,MAAA,QAAA8E,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAGzG,aAAA,CAAA4G,SAAS;EAErB,MAAMC,eAAe,GAAGL,SAAS,CAAC/F,GAAG,CAACqG,QAAQ,IAC5CjH,EAAE,CAACkH,YAAY,CAAC,GAAG9G,WAAA,CAAA+G,OAAS,CAACF,QAAQ,CAAC,CAAC,CACxC;EAED,MAAMG,cAAc,GAAGpH,EAAE,CAACO,KAAK,CAAC,GAAGyG,eAAe,CAAC;EAEnD,MAAMK,aAAa,GAAGD,cAAc,CAACxG,GAAG,CAAC0G,KAAK,IAAIR,SAAS,CAACQ,KAAK,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;EAE7E,OAAOF,aAAa,CAACzF,MAAM,CAAC4F,IAAI,IAAI,CAACf,aAAa,CAACgB,GAAG,CAACD,IAAI,CAAC,CAAC;AAC/D,CAAC;AAED,MAAM9G,aAAa,GAAGA,CAAA,KACpBV,EAAE,CAAC2C,KAAK,CACN;EAAE+E,SAAS,EAAEhB,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;EAAEiB,MAAM,EAAE;AAAC,CAAE,EACxC;EAAED,SAAS,EAAE1H,EAAE,CAACuB,QAAQ,CAAC,EAAE,CAAC;EAAEoG,MAAM,EAAE;AAAC,CAAE,CAC1C;AACH,MAAMnG,SAAS,GAAGA,CAAA,KAAMkF,IAAI,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,EAAEvG,aAAA,CAAAyH,UAAU,CAAC;AAC1D,MAAMvF,SAAS,GAAGA,CAAA,KAAMqE,IAAI,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,EAAEvG,aAAA,CAAAyH,UAAU,CAAC;AAC1D,MAAMnF,YAAY,GAAGA,CAAA,KAAMiE,IAAI,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAEjD,MAAM/F,UAAU,GAAGA,CAAA,KACjBsF,IAAI,EAAE,CAAC9B,KAAK,CAACrD,IAAI,IACfA,IAAI,CAAC+G,UAAU,CAAC,OAAO,CAAC,GACpB7H,EAAE,CAACQ,MAAM,CAAC;EACRM,IAAI,EAAEd,EAAE,CAACuB,QAAQ,CAACT,IAAI,CAAC;EACvBgH,UAAU,EAAE9H,EAAE,CACX0B,KAAK,CACJ,IAAAT,OAAA,CAAAX,SAAS,GAAE,CAACsB,MAAM,CAACmG,MAAA;IAAA,IAAC;MAAEtH;IAAI,CAAE,GAAAsH,MAAA;IAAA,OAAKtH,IAAI,KAAK,EAAE;EAAA,EAAC,EAC7C;IAAEuH,SAAS,EAAE,CAAC;IAAErG,SAAS,EAAE;EAAC,CAAE,CAC/B,CACAC,MAAM,CAACqG,KAAK,IAAG;IACd,MAAMlG,KAAK,GAAGkG,KAAK,CAChBrH,GAAG,CAACsH,MAAA;MAAA,IAAC;QAAEzH;MAAI,CAAE,GAAAyH,MAAA;MAAA,OAAKzH,IAAI;IAAA,EAAC,CACvBmB,MAAM,CAACnB,IAAI,IAAIA,IAAI,KAAK,EAAE,CAAC;IAC9B,OAAOsB,KAAK,CAACD,MAAM,KAAK,IAAIG,GAAG,CAACF,KAAK,CAAC,CAACG,IAAI;EAC7C,CAAC;CACJ,CAAC,GACFlC,EAAE,CAACQ,MAAM,CAAC;EACRM,IAAI,EAAEd,EAAE,CAACuB,QAAQ,CAACT,IAAI;CACvB,CAAC,CACP"},"metadata":{},"sourceType":"script","externalDependencies":[]}