{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toAddress = exports.equalData = exports.keccak256 = exports.ZERO_ADDRESS = exports.MAX_WORD = exports.PC_SIZE = exports.SELECTOR_SIZE = exports.ADDRESS_SIZE = exports.WORD_SIZE = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = (0, debug_1.default)(\"codec:evm:utils\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst web3_utils_1 = __importDefault(require(\"web3-utils\"));\nconst Conversion = __importStar(require(\"../conversion\"));\nconst abi_utils_1 = require(\"@truffle/abi-utils\");\nexports.WORD_SIZE = 0x20;\nexports.ADDRESS_SIZE = 20;\nexports.SELECTOR_SIZE = abi_utils_1.ShortSelectorSize; //equals 4; function & error selectors, not event selectors\nexports.PC_SIZE = 4;\nexports.MAX_WORD = new bn_js_1.default(-1).toTwos(exports.WORD_SIZE * 8);\nexports.ZERO_ADDRESS = \"0x\" + \"00\".repeat(exports.ADDRESS_SIZE);\n//beware of using this for generic strings! (it's fine for bytestrings, or\n//strings representing numbers) if you want to use this on a generic string,\n//you should pass in {type: \"string\", value: theString} instead of the string\n//itself.\n//(maybe I should add a rawKeccak256 function, using sha3 instead of\n//soliditysha3?  not seeing the need atm though)\nfunction keccak256() {\n  // debug(\"args %o\", args);\n  const rawSha = web3_utils_1.default.soliditySha3(...arguments);\n  debug(\"rawSha %o\", rawSha);\n  let sha;\n  if (rawSha === null) {\n    sha = \"\"; //HACK, I guess?\n  } else {\n    sha = rawSha.replace(/0x/, \"\");\n  }\n  return Conversion.toBN(sha);\n}\nexports.keccak256 = keccak256;\n//checks if two bytearrays (which may be undefined) are equal.\n//does not consider undefined to be equal to itself.\nfunction equalData(bytes1, bytes2) {\n  if (!bytes1 || !bytes2) {\n    return false;\n  }\n  if (bytes1.length !== bytes2.length) {\n    return false;\n  }\n  for (let i = 0; i < bytes1.length; i++) {\n    if (bytes1[i] !== bytes2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nexports.equalData = equalData;\nfunction toAddress(bytes) {\n  if (typeof bytes === \"string\") {\n    //in this case, we can do some simple string manipulation and\n    //then pass to web3\n    let hex = bytes; //just renaming for clarity\n    if (hex.startsWith(\"0x\")) {\n      hex = hex.slice(2);\n    }\n    if (hex.length < 2 * exports.ADDRESS_SIZE) {\n      hex = hex.padStart(2 * exports.ADDRESS_SIZE, \"0\");\n    }\n    if (hex.length > 2 * exports.ADDRESS_SIZE) {\n      hex = \"0x\" + hex.slice(hex.length - 2 * exports.ADDRESS_SIZE);\n    }\n    return web3_utils_1.default.toChecksumAddress(hex);\n  }\n  //otherwise, we're in the Uint8Array case, which we can't fully handle ourself\n  //truncate *on left* to 20 bytes\n  if (bytes.length > exports.ADDRESS_SIZE) {\n    bytes = bytes.slice(bytes.length - exports.ADDRESS_SIZE, bytes.length);\n  }\n  //now, convert to hex string and apply checksum case that second argument\n  //(which ensures it's padded to 20 bytes) shouldn't actually ever be\n  //needed, but I'll be safe and include it\n  return web3_utils_1.default.toChecksumAddress(Conversion.toHexString(bytes, exports.ADDRESS_SIZE));\n}\nexports.toAddress = toAddress;","map":{"version":3,"names":["debug_1","__importDefault","require","debug","default","bn_js_1","web3_utils_1","Conversion","__importStar","abi_utils_1","exports","WORD_SIZE","ADDRESS_SIZE","SELECTOR_SIZE","ShortSelectorSize","PC_SIZE","MAX_WORD","toTwos","ZERO_ADDRESS","repeat","keccak256","rawSha","soliditySha3","arguments","sha","replace","toBN","equalData","bytes1","bytes2","length","i","toAddress","bytes","hex","startsWith","slice","padStart","toChecksumAddress","toHexString"],"sources":["../../../lib/evm/utils.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}