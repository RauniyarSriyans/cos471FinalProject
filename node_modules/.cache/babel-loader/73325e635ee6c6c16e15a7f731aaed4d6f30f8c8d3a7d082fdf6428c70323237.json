{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildCompareFunctionArbitrary = void 0;\nconst TextEscaper_1 = require(\"../helpers/TextEscaper\");\nconst symbols_1 = require(\"../../../check/symbols\");\nconst hash_1 = require(\"../../../utils/hash\");\nconst stringify_1 = require(\"../../../utils/stringify\");\nconst integer_1 = require(\"../../integer\");\nconst tuple_1 = require(\"../../tuple\");\nfunction buildCompareFunctionArbitrary(cmp) {\n  return (0, tuple_1.tuple)((0, integer_1.integer)().noShrink(), (0, integer_1.integer)({\n    min: 1,\n    max: 0xffffffff\n  }).noShrink()).map(_ref => {\n    let [seed, hashEnvSize] = _ref;\n    const producer = () => {\n      const recorded = {};\n      const f = (a, b) => {\n        const reprA = (0, stringify_1.stringify)(a);\n        const reprB = (0, stringify_1.stringify)(b);\n        const hA = (0, hash_1.hash)(`${seed}${reprA}`) % hashEnvSize;\n        const hB = (0, hash_1.hash)(`${seed}${reprB}`) % hashEnvSize;\n        const val = cmp(hA, hB);\n        recorded[`[${reprA},${reprB}]`] = val;\n        return val;\n      };\n      return Object.assign(f, {\n        toString: () => {\n          const seenValues = Object.keys(recorded).sort().map(k => `${k} => ${(0, stringify_1.stringify)(recorded[k])}`).map(line => `/* ${(0, TextEscaper_1.escapeForMultilineComments)(line)} */`);\n          return `function(a, b) {\n  // With hash and stringify coming from fast-check${seenValues.length !== 0 ? `\\n  ${seenValues.join('\\n  ')}` : ''}\n  const cmp = ${cmp};\n  const hA = hash('${seed}' + stringify(a)) % ${hashEnvSize};\n  const hB = hash('${seed}' + stringify(b)) % ${hashEnvSize};\n  return cmp(hA, hB);\n}`;\n        },\n        [symbols_1.cloneMethod]: producer\n      });\n    };\n    return producer();\n  });\n}\nexports.buildCompareFunctionArbitrary = buildCompareFunctionArbitrary;","map":{"version":3,"names":["Object","defineProperty","exports","value","buildCompareFunctionArbitrary","TextEscaper_1","require","symbols_1","hash_1","stringify_1","integer_1","tuple_1","cmp","tuple","integer","noShrink","min","max","map","_ref","seed","hashEnvSize","producer","recorded","f","a","b","reprA","stringify","reprB","hA","hash","hB","val","assign","toString","seenValues","keys","sort","k","line","escapeForMultilineComments","length","join","cloneMethod"],"sources":["/Users/karimelbarbary/Desktop/test4/devote/node_modules/fast-check/lib/arbitrary/_internals/builders/CompareFunctionArbitraryBuilder.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildCompareFunctionArbitrary = void 0;\nconst TextEscaper_1 = require(\"../helpers/TextEscaper\");\nconst symbols_1 = require(\"../../../check/symbols\");\nconst hash_1 = require(\"../../../utils/hash\");\nconst stringify_1 = require(\"../../../utils/stringify\");\nconst integer_1 = require(\"../../integer\");\nconst tuple_1 = require(\"../../tuple\");\nfunction buildCompareFunctionArbitrary(cmp) {\n    return (0, tuple_1.tuple)((0, integer_1.integer)().noShrink(), (0, integer_1.integer)({ min: 1, max: 0xffffffff }).noShrink()).map(([seed, hashEnvSize]) => {\n        const producer = () => {\n            const recorded = {};\n            const f = (a, b) => {\n                const reprA = (0, stringify_1.stringify)(a);\n                const reprB = (0, stringify_1.stringify)(b);\n                const hA = (0, hash_1.hash)(`${seed}${reprA}`) % hashEnvSize;\n                const hB = (0, hash_1.hash)(`${seed}${reprB}`) % hashEnvSize;\n                const val = cmp(hA, hB);\n                recorded[`[${reprA},${reprB}]`] = val;\n                return val;\n            };\n            return Object.assign(f, {\n                toString: () => {\n                    const seenValues = Object.keys(recorded)\n                        .sort()\n                        .map((k) => `${k} => ${(0, stringify_1.stringify)(recorded[k])}`)\n                        .map((line) => `/* ${(0, TextEscaper_1.escapeForMultilineComments)(line)} */`);\n                    return `function(a, b) {\n  // With hash and stringify coming from fast-check${seenValues.length !== 0 ? `\\n  ${seenValues.join('\\n  ')}` : ''}\n  const cmp = ${cmp};\n  const hA = hash('${seed}' + stringify(a)) % ${hashEnvSize};\n  const hB = hash('${seed}' + stringify(b)) % ${hashEnvSize};\n  return cmp(hA, hB);\n}`;\n                },\n                [symbols_1.cloneMethod]: producer,\n            });\n        };\n        return producer();\n    });\n}\nexports.buildCompareFunctionArbitrary = buildCompareFunctionArbitrary;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}