{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arrayInt64 = void 0;\nconst Stream_1 = require(\"../../stream/Stream\");\nconst Arbitrary_1 = require(\"../../check/arbitrary/definition/Arbitrary\");\nconst Value_1 = require(\"../../check/arbitrary/definition/Value\");\nconst ArrayInt64_1 = require(\"./helpers/ArrayInt64\");\nclass ArrayInt64Arbitrary extends Arbitrary_1.Arbitrary {\n  constructor(min, max) {\n    super();\n    this.min = min;\n    this.max = max;\n    this.biasedRanges = null;\n  }\n  generate(mrng, biasFactor) {\n    const range = this.computeGenerateRange(mrng, biasFactor);\n    const uncheckedValue = mrng.nextArrayInt(range.min, range.max);\n    if (uncheckedValue.data.length === 1) {\n      uncheckedValue.data.unshift(0);\n    }\n    return new Value_1.Value(uncheckedValue, undefined);\n  }\n  computeGenerateRange(mrng, biasFactor) {\n    if (biasFactor === undefined || mrng.nextInt(1, biasFactor) !== 1) {\n      return {\n        min: this.min,\n        max: this.max\n      };\n    }\n    const ranges = this.retrieveBiasedRanges();\n    if (ranges.length === 1) {\n      return ranges[0];\n    }\n    const id = mrng.nextInt(-2 * (ranges.length - 1), ranges.length - 2);\n    return id < 0 ? ranges[0] : ranges[id + 1];\n  }\n  canShrinkWithoutContext(value) {\n    const unsafeValue = value;\n    return typeof value === 'object' && value !== null && (unsafeValue.sign === -1 || unsafeValue.sign === 1) && Array.isArray(unsafeValue.data) && unsafeValue.data.length === 2 && ((0, ArrayInt64_1.isStrictlySmaller64)(this.min, unsafeValue) && (0, ArrayInt64_1.isStrictlySmaller64)(unsafeValue, this.max) || (0, ArrayInt64_1.isEqual64)(this.min, unsafeValue) || (0, ArrayInt64_1.isEqual64)(this.max, unsafeValue));\n  }\n  shrinkArrayInt64(value, target, tryTargetAsap) {\n    const realGap = (0, ArrayInt64_1.substract64)(value, target);\n    function* shrinkGen() {\n      let previous = tryTargetAsap ? undefined : target;\n      const gap = tryTargetAsap ? realGap : (0, ArrayInt64_1.halve64)(realGap);\n      for (let toremove = gap; !(0, ArrayInt64_1.isZero64)(toremove); toremove = (0, ArrayInt64_1.halve64)(toremove)) {\n        const next = (0, ArrayInt64_1.substract64)(value, toremove);\n        yield new Value_1.Value(next, previous);\n        previous = next;\n      }\n    }\n    return (0, Stream_1.stream)(shrinkGen());\n  }\n  shrink(current, context) {\n    if (!ArrayInt64Arbitrary.isValidContext(current, context)) {\n      const target = this.defaultTarget();\n      return this.shrinkArrayInt64(current, target, true);\n    }\n    if (this.isLastChanceTry(current, context)) {\n      return Stream_1.Stream.of(new Value_1.Value(context, undefined));\n    }\n    return this.shrinkArrayInt64(current, context, false);\n  }\n  defaultTarget() {\n    if (!(0, ArrayInt64_1.isStrictlyPositive64)(this.min) && !(0, ArrayInt64_1.isStrictlyNegative64)(this.max)) {\n      return ArrayInt64_1.Zero64;\n    }\n    return (0, ArrayInt64_1.isStrictlyNegative64)(this.min) ? this.max : this.min;\n  }\n  isLastChanceTry(current, context) {\n    if ((0, ArrayInt64_1.isZero64)(current)) {\n      return false;\n    }\n    if (current.sign === 1) {\n      return (0, ArrayInt64_1.isEqual64)(current, (0, ArrayInt64_1.add64)(context, ArrayInt64_1.Unit64)) && (0, ArrayInt64_1.isStrictlyPositive64)((0, ArrayInt64_1.substract64)(current, this.min));\n    } else {\n      return (0, ArrayInt64_1.isEqual64)(current, (0, ArrayInt64_1.substract64)(context, ArrayInt64_1.Unit64)) && (0, ArrayInt64_1.isStrictlyNegative64)((0, ArrayInt64_1.substract64)(current, this.max));\n    }\n  }\n  static isValidContext(_current, context) {\n    if (context === undefined) {\n      return false;\n    }\n    if (typeof context !== 'object' || context === null || !('sign' in context) || !('data' in context)) {\n      throw new Error(`Invalid context type passed to ArrayInt64Arbitrary (#1)`);\n    }\n    return true;\n  }\n  retrieveBiasedRanges() {\n    if (this.biasedRanges != null) {\n      return this.biasedRanges;\n    }\n    if ((0, ArrayInt64_1.isEqual64)(this.min, this.max)) {\n      this.biasedRanges = [{\n        min: this.min,\n        max: this.max\n      }];\n      return this.biasedRanges;\n    }\n    const minStrictlySmallerZero = (0, ArrayInt64_1.isStrictlyNegative64)(this.min);\n    const maxStrictlyGreaterZero = (0, ArrayInt64_1.isStrictlyPositive64)(this.max);\n    if (minStrictlySmallerZero && maxStrictlyGreaterZero) {\n      const logMin = (0, ArrayInt64_1.logLike64)(this.min);\n      const logMax = (0, ArrayInt64_1.logLike64)(this.max);\n      this.biasedRanges = [{\n        min: logMin,\n        max: logMax\n      }, {\n        min: (0, ArrayInt64_1.substract64)(this.max, logMax),\n        max: this.max\n      }, {\n        min: this.min,\n        max: (0, ArrayInt64_1.substract64)(this.min, logMin)\n      }];\n    } else {\n      const logGap = (0, ArrayInt64_1.logLike64)((0, ArrayInt64_1.substract64)(this.max, this.min));\n      const arbCloseToMin = {\n        min: this.min,\n        max: (0, ArrayInt64_1.add64)(this.min, logGap)\n      };\n      const arbCloseToMax = {\n        min: (0, ArrayInt64_1.substract64)(this.max, logGap),\n        max: this.max\n      };\n      this.biasedRanges = minStrictlySmallerZero ? [arbCloseToMax, arbCloseToMin] : [arbCloseToMin, arbCloseToMax];\n    }\n    return this.biasedRanges;\n  }\n}\nfunction arrayInt64(min, max) {\n  const arb = new ArrayInt64Arbitrary(min, max);\n  return arb;\n}\nexports.arrayInt64 = arrayInt64;","map":{"version":3,"names":["Object","defineProperty","exports","value","arrayInt64","Stream_1","require","Arbitrary_1","Value_1","ArrayInt64_1","ArrayInt64Arbitrary","Arbitrary","constructor","min","max","biasedRanges","generate","mrng","biasFactor","range","computeGenerateRange","uncheckedValue","nextArrayInt","data","length","unshift","Value","undefined","nextInt","ranges","retrieveBiasedRanges","id","canShrinkWithoutContext","unsafeValue","sign","Array","isArray","isStrictlySmaller64","isEqual64","shrinkArrayInt64","target","tryTargetAsap","realGap","substract64","shrinkGen","previous","gap","halve64","toremove","isZero64","next","stream","shrink","current","context","isValidContext","defaultTarget","isLastChanceTry","Stream","of","isStrictlyPositive64","isStrictlyNegative64","Zero64","add64","Unit64","_current","Error","minStrictlySmallerZero","maxStrictlyGreaterZero","logMin","logLike64","logMax","logGap","arbCloseToMin","arbCloseToMax","arb"],"sources":["/Users/karimelbarbary/Desktop/test4/devote/node_modules/fast-check/lib/arbitrary/_internals/ArrayInt64Arbitrary.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.arrayInt64 = void 0;\nconst Stream_1 = require(\"../../stream/Stream\");\nconst Arbitrary_1 = require(\"../../check/arbitrary/definition/Arbitrary\");\nconst Value_1 = require(\"../../check/arbitrary/definition/Value\");\nconst ArrayInt64_1 = require(\"./helpers/ArrayInt64\");\nclass ArrayInt64Arbitrary extends Arbitrary_1.Arbitrary {\n    constructor(min, max) {\n        super();\n        this.min = min;\n        this.max = max;\n        this.biasedRanges = null;\n    }\n    generate(mrng, biasFactor) {\n        const range = this.computeGenerateRange(mrng, biasFactor);\n        const uncheckedValue = mrng.nextArrayInt(range.min, range.max);\n        if (uncheckedValue.data.length === 1) {\n            uncheckedValue.data.unshift(0);\n        }\n        return new Value_1.Value(uncheckedValue, undefined);\n    }\n    computeGenerateRange(mrng, biasFactor) {\n        if (biasFactor === undefined || mrng.nextInt(1, biasFactor) !== 1) {\n            return { min: this.min, max: this.max };\n        }\n        const ranges = this.retrieveBiasedRanges();\n        if (ranges.length === 1) {\n            return ranges[0];\n        }\n        const id = mrng.nextInt(-2 * (ranges.length - 1), ranges.length - 2);\n        return id < 0 ? ranges[0] : ranges[id + 1];\n    }\n    canShrinkWithoutContext(value) {\n        const unsafeValue = value;\n        return (typeof value === 'object' &&\n            value !== null &&\n            (unsafeValue.sign === -1 || unsafeValue.sign === 1) &&\n            Array.isArray(unsafeValue.data) &&\n            unsafeValue.data.length === 2 &&\n            (((0, ArrayInt64_1.isStrictlySmaller64)(this.min, unsafeValue) && (0, ArrayInt64_1.isStrictlySmaller64)(unsafeValue, this.max)) ||\n                (0, ArrayInt64_1.isEqual64)(this.min, unsafeValue) ||\n                (0, ArrayInt64_1.isEqual64)(this.max, unsafeValue)));\n    }\n    shrinkArrayInt64(value, target, tryTargetAsap) {\n        const realGap = (0, ArrayInt64_1.substract64)(value, target);\n        function* shrinkGen() {\n            let previous = tryTargetAsap ? undefined : target;\n            const gap = tryTargetAsap ? realGap : (0, ArrayInt64_1.halve64)(realGap);\n            for (let toremove = gap; !(0, ArrayInt64_1.isZero64)(toremove); toremove = (0, ArrayInt64_1.halve64)(toremove)) {\n                const next = (0, ArrayInt64_1.substract64)(value, toremove);\n                yield new Value_1.Value(next, previous);\n                previous = next;\n            }\n        }\n        return (0, Stream_1.stream)(shrinkGen());\n    }\n    shrink(current, context) {\n        if (!ArrayInt64Arbitrary.isValidContext(current, context)) {\n            const target = this.defaultTarget();\n            return this.shrinkArrayInt64(current, target, true);\n        }\n        if (this.isLastChanceTry(current, context)) {\n            return Stream_1.Stream.of(new Value_1.Value(context, undefined));\n        }\n        return this.shrinkArrayInt64(current, context, false);\n    }\n    defaultTarget() {\n        if (!(0, ArrayInt64_1.isStrictlyPositive64)(this.min) && !(0, ArrayInt64_1.isStrictlyNegative64)(this.max)) {\n            return ArrayInt64_1.Zero64;\n        }\n        return (0, ArrayInt64_1.isStrictlyNegative64)(this.min) ? this.max : this.min;\n    }\n    isLastChanceTry(current, context) {\n        if ((0, ArrayInt64_1.isZero64)(current)) {\n            return false;\n        }\n        if (current.sign === 1) {\n            return (0, ArrayInt64_1.isEqual64)(current, (0, ArrayInt64_1.add64)(context, ArrayInt64_1.Unit64)) && (0, ArrayInt64_1.isStrictlyPositive64)((0, ArrayInt64_1.substract64)(current, this.min));\n        }\n        else {\n            return (0, ArrayInt64_1.isEqual64)(current, (0, ArrayInt64_1.substract64)(context, ArrayInt64_1.Unit64)) && (0, ArrayInt64_1.isStrictlyNegative64)((0, ArrayInt64_1.substract64)(current, this.max));\n        }\n    }\n    static isValidContext(_current, context) {\n        if (context === undefined) {\n            return false;\n        }\n        if (typeof context !== 'object' || context === null || !('sign' in context) || !('data' in context)) {\n            throw new Error(`Invalid context type passed to ArrayInt64Arbitrary (#1)`);\n        }\n        return true;\n    }\n    retrieveBiasedRanges() {\n        if (this.biasedRanges != null) {\n            return this.biasedRanges;\n        }\n        if ((0, ArrayInt64_1.isEqual64)(this.min, this.max)) {\n            this.biasedRanges = [{ min: this.min, max: this.max }];\n            return this.biasedRanges;\n        }\n        const minStrictlySmallerZero = (0, ArrayInt64_1.isStrictlyNegative64)(this.min);\n        const maxStrictlyGreaterZero = (0, ArrayInt64_1.isStrictlyPositive64)(this.max);\n        if (minStrictlySmallerZero && maxStrictlyGreaterZero) {\n            const logMin = (0, ArrayInt64_1.logLike64)(this.min);\n            const logMax = (0, ArrayInt64_1.logLike64)(this.max);\n            this.biasedRanges = [\n                { min: logMin, max: logMax },\n                { min: (0, ArrayInt64_1.substract64)(this.max, logMax), max: this.max },\n                { min: this.min, max: (0, ArrayInt64_1.substract64)(this.min, logMin) },\n            ];\n        }\n        else {\n            const logGap = (0, ArrayInt64_1.logLike64)((0, ArrayInt64_1.substract64)(this.max, this.min));\n            const arbCloseToMin = { min: this.min, max: (0, ArrayInt64_1.add64)(this.min, logGap) };\n            const arbCloseToMax = { min: (0, ArrayInt64_1.substract64)(this.max, logGap), max: this.max };\n            this.biasedRanges = minStrictlySmallerZero\n                ? [arbCloseToMax, arbCloseToMin]\n                : [arbCloseToMin, arbCloseToMax];\n        }\n        return this.biasedRanges;\n    }\n}\nfunction arrayInt64(min, max) {\n    const arb = new ArrayInt64Arbitrary(min, max);\n    return arb;\n}\nexports.arrayInt64 = arrayInt64;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}