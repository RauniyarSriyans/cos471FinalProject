{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.abiSelector = exports.abiTypeSignature = exports.abiTupleSignature = exports.abiSignature = exports.ShortSelectorSize = void 0;\nconst web3_utils_1 = require(\"web3-utils\");\nexports.ShortSelectorSize = 4;\n//NOTE: this function returns the written out SIGNATURE, not the SELECTOR\nfunction abiSignature(abiEntry) {\n  return abiEntry.name + abiTupleSignature(abiEntry.inputs);\n}\nexports.abiSignature = abiSignature;\nfunction abiTupleSignature(parameters) {\n  const components = parameters.map(abiTypeSignature);\n  return \"(\" + components.join(\",\") + \")\";\n}\nexports.abiTupleSignature = abiTupleSignature;\nfunction abiTypeSignature(parameter) {\n  const tupleMatch = parameter.type.match(/^tuple(.*)/);\n  if (tupleMatch === null) {\n    //does not start with \"tuple\"\n    return parameter.type;\n  } else {\n    const tail = tupleMatch[1]; //everything after \"tuple\"\n    const tupleSignature = abiTupleSignature(parameter.components); //it won't be undefined\n    return tupleSignature + tail;\n  }\n}\nexports.abiTypeSignature = abiTypeSignature;\nfunction abiSelector(abiEntry) {\n  const signature = abiSignature(abiEntry);\n  //NOTE: web3's soliditySha3 has a problem if the empty\n  //string is passed in.  Fortunately, that should never happen here.\n  const hash = (0, web3_utils_1.soliditySha3)({\n    type: \"string\",\n    value: signature\n  });\n  switch (abiEntry.type) {\n    case \"event\":\n      return hash;\n    case \"function\":\n    case \"error\":\n      return hash.slice(0, 2 + 2 * exports.ShortSelectorSize);\n    //arithmetic to account for hex string\n  }\n}\n\nexports.abiSelector = abiSelector;","map":{"version":3,"names":["web3_utils_1","require","exports","ShortSelectorSize","abiSignature","abiEntry","name","abiTupleSignature","inputs","parameters","components","map","abiTypeSignature","join","parameter","tupleMatch","type","match","tail","tupleSignature","abiSelector","signature","hash","soliditySha3","value","slice"],"sources":["../../lib/signature.ts"],"sourcesContent":[null],"mappings":";;;;;;AACA,MAAAA,YAAA,GAAAC,OAAA;AAEaC,OAAA,CAAAC,iBAAiB,GAAG,CAAC;AAElC;AACA,SAAgBC,YAAYA,CAC1BC,QAAiD;EAEjD,OAAOA,QAAQ,CAACC,IAAI,GAAGC,iBAAiB,CAACF,QAAQ,CAACG,MAAM,CAAC;AAC3D;AAJAN,OAAA,CAAAE,YAAA,GAAAA,YAAA;AAMA,SAAgBG,iBAAiBA,CAACE,UAAuB;EACvD,MAAMC,UAAU,GAAGD,UAAU,CAACE,GAAG,CAACC,gBAAgB,CAAC;EACnD,OAAO,GAAG,GAAGF,UAAU,CAACG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG;AACzC;AAHAX,OAAA,CAAAK,iBAAA,GAAAA,iBAAA;AAKA,SAAgBK,gBAAgBA,CAACE,SAAoB;EACnD,MAAMC,UAAU,GAAGD,SAAS,CAACE,IAAI,CAACC,KAAK,CAAC,YAAY,CAAC;EACrD,IAAIF,UAAU,KAAK,IAAI,EAAE;IACvB;IACA,OAAOD,SAAS,CAACE,IAAI;GACtB,MAAM;IACL,MAAME,IAAI,GAAGH,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B,MAAMI,cAAc,GAAGZ,iBAAiB,CACtCO,SAAS,CAACJ,UAAyB,CACpC,CAAC,CAAC;IACH,OAAOS,cAAc,GAAGD,IAAI;;AAEhC;AAZAhB,OAAA,CAAAU,gBAAA,GAAAA,gBAAA;AAcA,SAAgBQ,WAAWA,CACzBf,QAAiD;EAEjD,MAAMgB,SAAS,GAAGjB,YAAY,CAACC,QAAQ,CAAC;EACxC;EACA;EACA,MAAMiB,IAAI,GAAG,IAAAtB,YAAA,CAAAuB,YAAY,EAAC;IAAEP,IAAI,EAAE,QAAQ;IAAEQ,KAAK,EAAEH;EAAS,CAAE,CAAW;EACzE,QAAQhB,QAAQ,CAACW,IAAI;IACnB,KAAK,OAAO;MACV,OAAOM,IAAI;IACb,KAAK,UAAU;IACf,KAAK,OAAO;MACV,OAAOA,IAAI,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAGvB,OAAA,CAAAC,iBAAiB,CAAC;IAAE;;AAEvD;;AAdAD,OAAA,CAAAkB,WAAA,GAAAA,WAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}