{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.unsafeUniformIntDistribution = void 0;\nvar UnsafeUniformIntDistributionInternal_1 = require(\"./internals/UnsafeUniformIntDistributionInternal\");\nvar ArrayInt_1 = require(\"./internals/ArrayInt\");\nvar UnsafeUniformArrayIntDistributionInternal_1 = require(\"./internals/UnsafeUniformArrayIntDistributionInternal\");\nvar safeNumberMaxSafeInteger = Number.MAX_SAFE_INTEGER;\nvar sharedA = {\n  sign: 1,\n  data: [0, 0]\n};\nvar sharedB = {\n  sign: 1,\n  data: [0, 0]\n};\nvar sharedC = {\n  sign: 1,\n  data: [0, 0]\n};\nvar sharedData = [0, 0];\nfunction uniformLargeIntInternal(from, to, rangeSize, rng) {\n  var rangeSizeArrayIntValue = rangeSize <= safeNumberMaxSafeInteger ? (0, ArrayInt_1.fromNumberToArrayInt64)(sharedC, rangeSize) : (0, ArrayInt_1.substractArrayInt64)(sharedC, (0, ArrayInt_1.fromNumberToArrayInt64)(sharedA, to), (0, ArrayInt_1.fromNumberToArrayInt64)(sharedB, from));\n  if (rangeSizeArrayIntValue.data[1] === 0xffffffff) {\n    rangeSizeArrayIntValue.data[0] += 1;\n    rangeSizeArrayIntValue.data[1] = 0;\n  } else {\n    rangeSizeArrayIntValue.data[1] += 1;\n  }\n  (0, UnsafeUniformArrayIntDistributionInternal_1.unsafeUniformArrayIntDistributionInternal)(sharedData, rangeSizeArrayIntValue.data, rng);\n  return sharedData[0] * 0x100000000 + sharedData[1] + from;\n}\nfunction unsafeUniformIntDistribution(from, to, rng) {\n  var rangeSize = to - from;\n  if (rangeSize <= 0xffffffff) {\n    var g = (0, UnsafeUniformIntDistributionInternal_1.unsafeUniformIntDistributionInternal)(rangeSize + 1, rng);\n    return g + from;\n  }\n  return uniformLargeIntInternal(from, to, rangeSize, rng);\n}\nexports.unsafeUniformIntDistribution = unsafeUniformIntDistribution;","map":{"version":3,"names":["exports","__esModule","unsafeUniformIntDistribution","UnsafeUniformIntDistributionInternal_1","require","ArrayInt_1","UnsafeUniformArrayIntDistributionInternal_1","safeNumberMaxSafeInteger","Number","MAX_SAFE_INTEGER","sharedA","sign","data","sharedB","sharedC","sharedData","uniformLargeIntInternal","from","to","rangeSize","rng","rangeSizeArrayIntValue","fromNumberToArrayInt64","substractArrayInt64","unsafeUniformArrayIntDistributionInternal","g","unsafeUniformIntDistributionInternal"],"sources":["/Users/karimelbarbary/Desktop/test4/devote/node_modules/pure-rand/lib/distribution/UnsafeUniformIntDistribution.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.unsafeUniformIntDistribution = void 0;\nvar UnsafeUniformIntDistributionInternal_1 = require(\"./internals/UnsafeUniformIntDistributionInternal\");\nvar ArrayInt_1 = require(\"./internals/ArrayInt\");\nvar UnsafeUniformArrayIntDistributionInternal_1 = require(\"./internals/UnsafeUniformArrayIntDistributionInternal\");\nvar safeNumberMaxSafeInteger = Number.MAX_SAFE_INTEGER;\nvar sharedA = { sign: 1, data: [0, 0] };\nvar sharedB = { sign: 1, data: [0, 0] };\nvar sharedC = { sign: 1, data: [0, 0] };\nvar sharedData = [0, 0];\nfunction uniformLargeIntInternal(from, to, rangeSize, rng) {\n    var rangeSizeArrayIntValue = rangeSize <= safeNumberMaxSafeInteger\n        ? (0, ArrayInt_1.fromNumberToArrayInt64)(sharedC, rangeSize)\n        : (0, ArrayInt_1.substractArrayInt64)(sharedC, (0, ArrayInt_1.fromNumberToArrayInt64)(sharedA, to), (0, ArrayInt_1.fromNumberToArrayInt64)(sharedB, from));\n    if (rangeSizeArrayIntValue.data[1] === 0xffffffff) {\n        rangeSizeArrayIntValue.data[0] += 1;\n        rangeSizeArrayIntValue.data[1] = 0;\n    }\n    else {\n        rangeSizeArrayIntValue.data[1] += 1;\n    }\n    (0, UnsafeUniformArrayIntDistributionInternal_1.unsafeUniformArrayIntDistributionInternal)(sharedData, rangeSizeArrayIntValue.data, rng);\n    return sharedData[0] * 0x100000000 + sharedData[1] + from;\n}\nfunction unsafeUniformIntDistribution(from, to, rng) {\n    var rangeSize = to - from;\n    if (rangeSize <= 0xffffffff) {\n        var g = (0, UnsafeUniformIntDistributionInternal_1.unsafeUniformIntDistributionInternal)(rangeSize + 1, rng);\n        return g + from;\n    }\n    return uniformLargeIntInternal(from, to, rangeSize, rng);\n}\nexports.unsafeUniformIntDistribution = unsafeUniformIntDistribution;\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,4BAA4B,GAAG,KAAK,CAAC;AAC7C,IAAIC,sCAAsC,GAAGC,OAAO,CAAC,kDAAkD,CAAC;AACxG,IAAIC,UAAU,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAChD,IAAIE,2CAA2C,GAAGF,OAAO,CAAC,uDAAuD,CAAC;AAClH,IAAIG,wBAAwB,GAAGC,MAAM,CAACC,gBAAgB;AACtD,IAAIC,OAAO,GAAG;EAAEC,IAAI,EAAE,CAAC;EAAEC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;AAAE,CAAC;AACvC,IAAIC,OAAO,GAAG;EAAEF,IAAI,EAAE,CAAC;EAAEC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;AAAE,CAAC;AACvC,IAAIE,OAAO,GAAG;EAAEH,IAAI,EAAE,CAAC;EAAEC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;AAAE,CAAC;AACvC,IAAIG,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACvB,SAASC,uBAAuBA,CAACC,IAAI,EAAEC,EAAE,EAAEC,SAAS,EAAEC,GAAG,EAAE;EACvD,IAAIC,sBAAsB,GAAGF,SAAS,IAAIZ,wBAAwB,GAC5D,CAAC,CAAC,EAAEF,UAAU,CAACiB,sBAAsB,EAAER,OAAO,EAAEK,SAAS,CAAC,GAC1D,CAAC,CAAC,EAAEd,UAAU,CAACkB,mBAAmB,EAAET,OAAO,EAAE,CAAC,CAAC,EAAET,UAAU,CAACiB,sBAAsB,EAAEZ,OAAO,EAAEQ,EAAE,CAAC,EAAE,CAAC,CAAC,EAAEb,UAAU,CAACiB,sBAAsB,EAAET,OAAO,EAAEI,IAAI,CAAC,CAAC;EAC9J,IAAII,sBAAsB,CAACT,IAAI,CAAC,CAAC,CAAC,KAAK,UAAU,EAAE;IAC/CS,sBAAsB,CAACT,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;IACnCS,sBAAsB,CAACT,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;EACtC,CAAC,MACI;IACDS,sBAAsB,CAACT,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;EACvC;EACA,CAAC,CAAC,EAAEN,2CAA2C,CAACkB,yCAAyC,EAAET,UAAU,EAAEM,sBAAsB,CAACT,IAAI,EAAEQ,GAAG,CAAC;EACxI,OAAOL,UAAU,CAAC,CAAC,CAAC,GAAG,WAAW,GAAGA,UAAU,CAAC,CAAC,CAAC,GAAGE,IAAI;AAC7D;AACA,SAASf,4BAA4BA,CAACe,IAAI,EAAEC,EAAE,EAAEE,GAAG,EAAE;EACjD,IAAID,SAAS,GAAGD,EAAE,GAAGD,IAAI;EACzB,IAAIE,SAAS,IAAI,UAAU,EAAE;IACzB,IAAIM,CAAC,GAAG,CAAC,CAAC,EAAEtB,sCAAsC,CAACuB,oCAAoC,EAAEP,SAAS,GAAG,CAAC,EAAEC,GAAG,CAAC;IAC5G,OAAOK,CAAC,GAAGR,IAAI;EACnB;EACA,OAAOD,uBAAuB,CAACC,IAAI,EAAEC,EAAE,EAAEC,SAAS,EAAEC,GAAG,CAAC;AAC5D;AACApB,OAAO,CAACE,4BAA4B,GAAGA,4BAA4B"},"metadata":{},"sourceType":"script","externalDependencies":[]}