{"ast":null,"code":"import { createHash as t } from \"crypto\";\nfor (var r = \"qpzry9x8gf2tvdw0s3jn54khce6mua7l\", e = {}, n = 0; n < r.length; n++) {\n  var i = r.charAt(n);\n  if (void 0 !== e[i]) throw new TypeError(i + \" is ambiguous\");\n  e[i] = n;\n}\nfunction o(t) {\n  var r = t >> 25;\n  return (33554431 & t) << 5 ^ 996825010 & -(r >> 0 & 1) ^ 642813549 & -(r >> 1 & 1) ^ 513874426 & -(r >> 2 & 1) ^ 1027748829 & -(r >> 3 & 1) ^ 705979059 & -(r >> 4 & 1);\n}\nfunction f(t) {\n  for (var r = 1, e = 0; e < t.length; ++e) {\n    var n = t.charCodeAt(e);\n    if (n < 33 || n > 126) throw new Error(\"Invalid prefix (\" + t + \")\");\n    r = o(r) ^ n >> 5;\n  }\n  for (r = o(r), e = 0; e < t.length; ++e) {\n    var i = t.charCodeAt(e);\n    r = o(r) ^ 31 & i;\n  }\n  return r;\n}\nfunction u(t, r, e, n) {\n  for (var i = 0, o = 0, f = (1 << e) - 1, u = [], a = 0; a < t.length; ++a) for (i = i << r | t[a], o += r; o >= e;) u.push(i >> (o -= e) & f);\n  if (n) o > 0 && u.push(i << e - o & f);else {\n    if (o >= r) throw new Error(\"Excess padding\");\n    if (i << e - o & f) throw new Error(\"Non-zero padding\");\n  }\n  return u;\n}\nvar a = function (t, r) {\n    if (r = r || 90, t.length < 8) throw new TypeError(t + \" too short\");\n    if (t.length > r) throw new TypeError(\"Exceeds length limit\");\n    var n = t.toLowerCase(),\n      i = t.toUpperCase();\n    if (t !== n && t !== i) throw new Error(\"Mixed-case string \" + t);\n    var u = (t = n).lastIndexOf(\"1\");\n    if (-1 === u) throw new Error(\"No separator character for \" + t);\n    if (0 === u) throw new Error(\"Missing prefix for \" + t);\n    var a = t.slice(0, u),\n      s = t.slice(u + 1);\n    if (s.length < 6) throw new Error(\"Data too short\");\n    for (var h = f(a), c = [], l = 0; l < s.length; ++l) {\n      var p = s.charAt(l),\n        d = e[p];\n      if (void 0 === d) throw new Error(\"Unknown character \" + p);\n      h = o(h) ^ d, l + 6 >= s.length || c.push(d);\n    }\n    if (1 !== h) throw new Error(\"Invalid checksum for \" + t);\n    return {\n      prefix: a,\n      words: c\n    };\n  },\n  s = function (t, e, n) {\n    if (t.length + 7 + e.length > (n = n || 90)) throw new TypeError(\"Exceeds length limit\");\n    for (var i = f(t = t.toLowerCase()), u = t + \"1\", a = 0; a < e.length; ++a) {\n      var s = e[a];\n      if (s >> 5 != 0) throw new Error(\"Non 5-bit word\");\n      i = o(i) ^ s, u += r.charAt(s);\n    }\n    for (a = 0; a < 6; ++a) i = o(i);\n    for (i ^= 1, a = 0; a < 6; ++a) u += r.charAt(i >> 5 * (5 - a) & 31);\n    return u;\n  },\n  h = function (t) {\n    return u(t, 8, 5, !0);\n  },\n  c = function (t) {\n    return u(t, 5, 8, !1);\n  };\nfunction l(t, r, e) {\n  return t(e = {\n    path: r,\n    exports: {},\n    require: function (t, r) {\n      return function () {\n        throw new Error(\"Dynamic requires are not currently supported by @rollup/plugin-commonjs\");\n      }();\n    }\n  }, e.exports), e.exports;\n}\nvar p = l(function (t) {\n    var r = function (t) {\n      var e = 1e7,\n        n = 9007199254740992,\n        i = h(n),\n        o = Math.log(n);\n      function f(t, r) {\n        return void 0 === t ? f[0] : void 0 !== r ? 10 == +r ? K(t) : q(t, r) : K(t);\n      }\n      function u(t, r) {\n        this.value = t, this.sign = r, this.isSmall = !1;\n      }\n      function a(t) {\n        this.value = t, this.sign = t < 0, this.isSmall = !0;\n      }\n      function s(t) {\n        return -n < t && t < n;\n      }\n      function h(t) {\n        return t < 1e7 ? [t] : t < 1e14 ? [t % 1e7, Math.floor(t / 1e7)] : [t % 1e7, Math.floor(t / 1e7) % 1e7, Math.floor(t / 1e14)];\n      }\n      function c(t) {\n        l(t);\n        var r = t.length;\n        if (r < 4 && S(t, i) < 0) switch (r) {\n          case 0:\n            return 0;\n          case 1:\n            return t[0];\n          case 2:\n            return t[0] + t[1] * e;\n          default:\n            return t[0] + (t[1] + t[2] * e) * e;\n        }\n        return t;\n      }\n      function l(t) {\n        for (var r = t.length; 0 === t[--r];);\n        t.length = r + 1;\n      }\n      function p(t) {\n        for (var r = new Array(t), e = -1; ++e < t;) r[e] = 0;\n        return r;\n      }\n      function d(t) {\n        return t > 0 ? Math.floor(t) : Math.ceil(t);\n      }\n      function g(t, r) {\n        var n,\n          i,\n          o = t.length,\n          f = r.length,\n          u = new Array(o),\n          a = 0,\n          s = e;\n        for (i = 0; i < f; i++) u[i] = (n = t[i] + r[i] + a) - (a = n >= s ? 1 : 0) * s;\n        for (; i < o;) n = t[i] + a, u[i++] = n - (a = n === s ? 1 : 0) * s;\n        return a > 0 && u.push(a), u;\n      }\n      function y(t, r) {\n        return t.length >= r.length ? g(t, r) : g(r, t);\n      }\n      function v(t, r) {\n        var n,\n          i,\n          o = t.length,\n          f = new Array(o),\n          u = e;\n        for (i = 0; i < o; i++) n = t[i] - u + r, r = Math.floor(n / u), f[i] = n - r * u, r += 1;\n        for (; r > 0;) f[i++] = r % u, r = Math.floor(r / u);\n        return f;\n      }\n      function w(t, r) {\n        var e,\n          n,\n          i = t.length,\n          o = r.length,\n          f = new Array(i),\n          u = 0;\n        for (e = 0; e < o; e++) (n = t[e] - u - r[e]) < 0 ? (n += 1e7, u = 1) : u = 0, f[e] = n;\n        for (e = o; e < i; e++) {\n          if (!((n = t[e] - u) < 0)) {\n            f[e++] = n;\n            break;\n          }\n          f[e] = n += 1e7;\n        }\n        for (; e < i; e++) f[e] = t[e];\n        return l(f), f;\n      }\n      function b(t, r, e) {\n        var n,\n          i,\n          o = t.length,\n          f = new Array(o),\n          s = -r;\n        for (n = 0; n < o; n++) i = t[n] + s, s = Math.floor(i / 1e7), f[n] = (i %= 1e7) < 0 ? i + 1e7 : i;\n        return \"number\" == typeof (f = c(f)) ? (e && (f = -f), new a(f)) : new u(f, e);\n      }\n      function m(t, r) {\n        var e,\n          n,\n          i,\n          o,\n          f = t.length,\n          u = r.length,\n          a = p(f + u);\n        for (i = 0; i < f; ++i) {\n          o = t[i];\n          for (var s = 0; s < u; ++s) e = o * r[s] + a[i + s], n = Math.floor(e / 1e7), a[i + s] = e - 1e7 * n, a[i + s + 1] += n;\n        }\n        return l(a), a;\n      }\n      function E(t, r) {\n        var n,\n          i,\n          o = t.length,\n          f = new Array(o),\n          u = e,\n          a = 0;\n        for (i = 0; i < o; i++) n = t[i] * r + a, a = Math.floor(n / u), f[i] = n - a * u;\n        for (; a > 0;) f[i++] = a % u, a = Math.floor(a / u);\n        return f;\n      }\n      function B(t, r) {\n        for (var e = []; r-- > 0;) e.push(0);\n        return e.concat(t);\n      }\n      function A(t, r, n) {\n        return new u(t < e ? E(r, t) : m(r, h(t)), n);\n      }\n      function U(t) {\n        var r,\n          e,\n          n,\n          i,\n          o = t.length,\n          f = p(o + o);\n        for (n = 0; n < o; n++) {\n          e = 0 - (i = t[n]) * i;\n          for (var u = n; u < o; u++) r = i * t[u] * 2 + f[n + u] + e, e = Math.floor(r / 1e7), f[n + u] = r - 1e7 * e;\n          f[n + o] = e;\n        }\n        return l(f), f;\n      }\n      function I(t, r) {\n        var e,\n          n,\n          i,\n          o,\n          f = t.length,\n          u = p(f);\n        for (i = 0, e = f - 1; e >= 0; --e) i = (o = 1e7 * i + t[e]) - (n = d(o / r)) * r, u[e] = 0 | n;\n        return [u, 0 | i];\n      }\n      function _(t, r) {\n        var n,\n          i,\n          o = K(r),\n          s = t.value,\n          g = o.value;\n        if (0 === g) throw new Error(\"Cannot divide by zero\");\n        if (t.isSmall) return o.isSmall ? [new a(d(s / g)), new a(s % g)] : [f[0], t];\n        if (o.isSmall) {\n          if (1 === g) return [t, f[0]];\n          if (-1 == g) return [t.negate(), f[0]];\n          var y = Math.abs(g);\n          if (y < e) {\n            i = c((n = I(s, y))[0]);\n            var v = n[1];\n            return t.sign && (v = -v), \"number\" == typeof i ? (t.sign !== o.sign && (i = -i), [new a(i), new a(v)]) : [new u(i, t.sign !== o.sign), new a(v)];\n          }\n          g = h(y);\n        }\n        var b = S(s, g);\n        if (-1 === b) return [f[0], t];\n        if (0 === b) return [f[t.sign === o.sign ? 1 : -1], f[0]];\n        n = s.length + g.length <= 200 ? function (t, r) {\n          var n,\n            i,\n            o,\n            f,\n            u,\n            a,\n            s,\n            h = t.length,\n            l = r.length,\n            d = e,\n            g = p(r.length),\n            y = r[l - 1],\n            v = Math.ceil(d / (2 * y)),\n            w = E(t, v),\n            b = E(r, v);\n          for (w.length <= h && w.push(0), b.push(0), y = b[l - 1], i = h - l; i >= 0; i--) {\n            for (n = d - 1, w[i + l] !== y && (n = Math.floor((w[i + l] * d + w[i + l - 1]) / y)), o = 0, f = 0, a = b.length, u = 0; u < a; u++) o += n * b[u], s = Math.floor(o / d), f += w[i + u] - (o - s * d), o = s, f < 0 ? (w[i + u] = f + d, f = -1) : (w[i + u] = f, f = 0);\n            for (; 0 !== f;) {\n              for (n -= 1, o = 0, u = 0; u < a; u++) (o += w[i + u] - d + b[u]) < 0 ? (w[i + u] = o + d, o = 0) : (w[i + u] = o, o = 1);\n              f += o;\n            }\n            g[i] = n;\n          }\n          return w = I(w, v)[0], [c(g), c(w)];\n        }(s, g) : function (t, r) {\n          for (var e, n, i, o, f = t.length, u = r.length, a = [], s = []; f;) if (s.unshift(t[--f]), l(s), S(s, r) < 0) a.push(0);else {\n            i = 1e7 * s[(n = s.length) - 1] + s[n - 2], n > u && (i = 1e7 * (i + 1)), e = Math.ceil(i / (1e7 * r[u - 1] + r[u - 2]));\n            do {\n              if (S(o = E(r, e), s) <= 0) break;\n              e--;\n            } while (e);\n            a.push(e), s = w(s, o);\n          }\n          return a.reverse(), [c(a), c(s)];\n        }(s, g);\n        var m = t.sign !== o.sign,\n          B = n[1],\n          A = t.sign;\n        return \"number\" == typeof (i = n[0]) ? (m && (i = -i), i = new a(i)) : i = new u(i, m), \"number\" == typeof B ? (A && (B = -B), B = new a(B)) : B = new u(B, A), [i, B];\n      }\n      function S(t, r) {\n        if (t.length !== r.length) return t.length > r.length ? 1 : -1;\n        for (var e = t.length - 1; e >= 0; e--) if (t[e] !== r[e]) return t[e] > r[e] ? 1 : -1;\n        return 0;\n      }\n      function x(t) {\n        var r = t.abs();\n        return !r.isUnit() && (!!(r.equals(2) || r.equals(3) || r.equals(5)) || !(r.isEven() || r.isDivisibleBy(3) || r.isDivisibleBy(5)) && (!!r.lesser(49) || void 0));\n      }\n      function k(t, e) {\n        for (var n, i, o, u = t.prev(), a = u, s = 0; a.isEven();) a = a.divide(2), s++;\n        t: for (i = 0; i < e.length; i++) if (!t.lesser(e[i]) && !(o = r(e[i]).modPow(a, t)).equals(f[1]) && !o.equals(u)) {\n          for (n = s - 1; 0 != n; n--) {\n            if ((o = o.square().mod(t)).isUnit()) return !1;\n            if (o.equals(u)) continue t;\n          }\n          return !1;\n        }\n        return !0;\n      }\n      u.prototype = Object.create(f.prototype), a.prototype = Object.create(f.prototype), u.prototype.add = function (t) {\n        var r = K(t);\n        if (this.sign !== r.sign) return this.subtract(r.negate());\n        var e = this.value,\n          n = r.value;\n        return new u(r.isSmall ? v(e, Math.abs(n)) : y(e, n), this.sign);\n      }, u.prototype.plus = u.prototype.add, a.prototype.add = function (t) {\n        var r = K(t),\n          e = this.value;\n        if (e < 0 !== r.sign) return this.subtract(r.negate());\n        var n = r.value;\n        if (r.isSmall) {\n          if (s(e + n)) return new a(e + n);\n          n = h(Math.abs(n));\n        }\n        return new u(v(n, Math.abs(e)), e < 0);\n      }, a.prototype.plus = a.prototype.add, u.prototype.subtract = function (t) {\n        var r = K(t);\n        if (this.sign !== r.sign) return this.add(r.negate());\n        var e = this.value,\n          n = r.value;\n        return r.isSmall ? b(e, Math.abs(n), this.sign) : function (t, r, e) {\n          var n;\n          return S(t, r) >= 0 ? n = w(t, r) : (n = w(r, t), e = !e), \"number\" == typeof (n = c(n)) ? (e && (n = -n), new a(n)) : new u(n, e);\n        }(e, n, this.sign);\n      }, u.prototype.minus = u.prototype.subtract, a.prototype.subtract = function (t) {\n        var r = K(t),\n          e = this.value;\n        if (e < 0 !== r.sign) return this.add(r.negate());\n        var n = r.value;\n        return r.isSmall ? new a(e - n) : b(n, Math.abs(e), e >= 0);\n      }, a.prototype.minus = a.prototype.subtract, u.prototype.negate = function () {\n        return new u(this.value, !this.sign);\n      }, a.prototype.negate = function () {\n        var t = this.sign,\n          r = new a(-this.value);\n        return r.sign = !t, r;\n      }, u.prototype.abs = function () {\n        return new u(this.value, !1);\n      }, a.prototype.abs = function () {\n        return new a(Math.abs(this.value));\n      }, u.prototype.multiply = function (t) {\n        var r,\n          n,\n          i,\n          o = K(t),\n          a = this.value,\n          s = o.value,\n          c = this.sign !== o.sign;\n        if (o.isSmall) {\n          if (0 === s) return f[0];\n          if (1 === s) return this;\n          if (-1 === s) return this.negate();\n          if ((r = Math.abs(s)) < e) return new u(E(a, r), c);\n          s = h(r);\n        }\n        return -.012 * (n = a.length) - .012 * (i = s.length) + 15e-6 * n * i > 0 ? new u(function t(r, e) {\n          var n = Math.max(r.length, e.length);\n          if (n <= 30) return m(r, e);\n          n = Math.ceil(n / 2);\n          var i = r.slice(n),\n            o = r.slice(0, n),\n            f = e.slice(n),\n            u = e.slice(0, n),\n            a = t(o, u),\n            s = t(i, f),\n            h = t(y(o, i), y(u, f)),\n            c = y(y(a, B(w(w(h, a), s), n)), B(s, 2 * n));\n          return l(c), c;\n        }(a, s), c) : new u(m(a, s), c);\n      }, u.prototype.times = u.prototype.multiply, a.prototype._multiplyBySmall = function (t) {\n        return s(t.value * this.value) ? new a(t.value * this.value) : A(Math.abs(t.value), h(Math.abs(this.value)), this.sign !== t.sign);\n      }, u.prototype._multiplyBySmall = function (t) {\n        return 0 === t.value ? f[0] : 1 === t.value ? this : -1 === t.value ? this.negate() : A(Math.abs(t.value), this.value, this.sign !== t.sign);\n      }, a.prototype.times = a.prototype.multiply = function (t) {\n        return K(t)._multiplyBySmall(this);\n      }, u.prototype.square = function () {\n        return new u(U(this.value), !1);\n      }, a.prototype.square = function () {\n        var t = this.value * this.value;\n        return s(t) ? new a(t) : new u(U(h(Math.abs(this.value))), !1);\n      }, a.prototype.divmod = u.prototype.divmod = function (t) {\n        var r = _(this, t);\n        return {\n          quotient: r[0],\n          remainder: r[1]\n        };\n      }, a.prototype.over = a.prototype.divide = u.prototype.over = u.prototype.divide = function (t) {\n        return _(this, t)[0];\n      }, a.prototype.remainder = a.prototype.mod = u.prototype.remainder = u.prototype.mod = function (t) {\n        return _(this, t)[1];\n      }, u.prototype.pow = function (t) {\n        var r,\n          e,\n          n,\n          i = K(t),\n          o = this.value,\n          u = i.value;\n        if (0 === u) return f[1];\n        if (0 === o) return f[0];\n        if (1 === o) return f[1];\n        if (-1 === o) return i.isEven() ? f[1] : f[-1];\n        if (i.sign) return f[0];\n        if (!i.isSmall) throw new Error(\"The exponent \" + i.toString() + \" is too large.\");\n        if (this.isSmall && s(r = Math.pow(o, u))) return new a(d(r));\n        for (e = this, n = f[1]; !0 & u && (n = n.times(e), --u), 0 !== u;) u /= 2, e = e.square();\n        return n;\n      }, a.prototype.pow = u.prototype.pow, a.prototype.modPow = u.prototype.modPow = function (t, r) {\n        if (t = K(t), (r = K(r)).isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\n        for (var e = f[1], n = this.mod(r); t.isPositive();) {\n          if (n.isZero()) return f[0];\n          t.isOdd() && (e = e.multiply(n).mod(r)), t = t.divide(2), n = n.square().mod(r);\n        }\n        return e;\n      }, u.prototype.compareAbs = function (t) {\n        var r = K(t);\n        return r.isSmall ? 1 : S(this.value, r.value);\n      }, a.prototype.compareAbs = function (t) {\n        var r = K(t),\n          e = Math.abs(this.value),\n          n = r.value;\n        return r.isSmall ? e === (n = Math.abs(n)) ? 0 : e > n ? 1 : -1 : -1;\n      }, u.prototype.compareTo = u.prototype.compare = function (t) {\n        if (Infinity === t) return -1;\n        if (-Infinity === t) return 1;\n        var r = K(t);\n        return this.sign !== r.sign ? r.sign ? 1 : -1 : r.isSmall ? this.sign ? -1 : 1 : S(this.value, r.value) * (this.sign ? -1 : 1);\n      }, a.prototype.compareTo = a.prototype.compare = function (t) {\n        if (Infinity === t) return -1;\n        if (-Infinity === t) return 1;\n        var r = K(t),\n          e = this.value,\n          n = r.value;\n        return r.isSmall ? e == n ? 0 : e > n ? 1 : -1 : e < 0 !== r.sign ? e < 0 ? -1 : 1 : e < 0 ? 1 : -1;\n      }, a.prototype.eq = a.prototype.equals = u.prototype.eq = u.prototype.equals = function (t) {\n        return 0 === this.compare(t);\n      }, a.prototype.neq = a.prototype.notEquals = u.prototype.neq = u.prototype.notEquals = function (t) {\n        return 0 !== this.compare(t);\n      }, a.prototype.gt = a.prototype.greater = u.prototype.gt = u.prototype.greater = function (t) {\n        return this.compare(t) > 0;\n      }, a.prototype.lt = a.prototype.lesser = u.prototype.lt = u.prototype.lesser = function (t) {\n        return this.compare(t) < 0;\n      }, a.prototype.geq = a.prototype.greaterOrEquals = u.prototype.geq = u.prototype.greaterOrEquals = function (t) {\n        return this.compare(t) >= 0;\n      }, a.prototype.leq = a.prototype.lesserOrEquals = u.prototype.leq = u.prototype.lesserOrEquals = function (t) {\n        return this.compare(t) <= 0;\n      }, u.prototype.isEven = function () {\n        return 0 == (1 & this.value[0]);\n      }, a.prototype.isEven = function () {\n        return 0 == (1 & this.value);\n      }, u.prototype.isOdd = function () {\n        return 1 == (1 & this.value[0]);\n      }, a.prototype.isOdd = function () {\n        return 1 == (1 & this.value);\n      }, u.prototype.isPositive = function () {\n        return !this.sign;\n      }, a.prototype.isPositive = function () {\n        return this.value > 0;\n      }, u.prototype.isNegative = function () {\n        return this.sign;\n      }, a.prototype.isNegative = function () {\n        return this.value < 0;\n      }, u.prototype.isUnit = function () {\n        return !1;\n      }, a.prototype.isUnit = function () {\n        return 1 === Math.abs(this.value);\n      }, u.prototype.isZero = function () {\n        return !1;\n      }, a.prototype.isZero = function () {\n        return 0 === this.value;\n      }, a.prototype.isDivisibleBy = u.prototype.isDivisibleBy = function (t) {\n        var r = K(t),\n          e = r.value;\n        return 0 !== e && (1 === e || (2 === e ? this.isEven() : this.mod(r).equals(f[0])));\n      }, a.prototype.isPrime = u.prototype.isPrime = function (t) {\n        var e = x(this);\n        if (void 0 !== e) return e;\n        var n = this.abs(),\n          i = n.bitLength();\n        if (i <= 64) return k(n, [2, 325, 9375, 28178, 450775, 9780504, 1795265022]);\n        for (var o = Math.log(2) * i, f = Math.ceil(!0 === t ? 2 * Math.pow(o, 2) : o), u = [], a = 0; a < f; a++) u.push(r(a + 2));\n        return k(n, u);\n      }, a.prototype.isProbablePrime = u.prototype.isProbablePrime = function (t) {\n        var e = x(this);\n        if (void 0 !== e) return e;\n        for (var n = this.abs(), i = void 0 === t ? 5 : t, o = [], f = 0; f < i; f++) o.push(r.randBetween(2, n.minus(2)));\n        return k(n, o);\n      }, a.prototype.modInv = u.prototype.modInv = function (t) {\n        for (var e, n, i, o = r.zero, f = r.one, u = K(t), a = this.abs(); !a.equals(r.zero);) e = u.divide(a), n = o, i = u, o = f, u = a, f = n.subtract(e.multiply(f)), a = i.subtract(e.multiply(a));\n        if (!u.equals(1)) throw new Error(this.toString() + \" and \" + t.toString() + \" are not co-prime\");\n        return -1 === o.compare(0) && (o = o.add(t)), this.isNegative() ? o.negate() : o;\n      }, u.prototype.next = function () {\n        var t = this.value;\n        return this.sign ? b(t, 1, this.sign) : new u(v(t, 1), this.sign);\n      }, a.prototype.next = function () {\n        var t = this.value;\n        return t + 1 < n ? new a(t + 1) : new u(i, !1);\n      }, u.prototype.prev = function () {\n        var t = this.value;\n        return this.sign ? new u(v(t, 1), !0) : b(t, 1, this.sign);\n      }, a.prototype.prev = function () {\n        var t = this.value;\n        return t - 1 > -n ? new a(t - 1) : new u(i, !0);\n      };\n      for (var O = [1]; 2 * O[O.length - 1] <= e;) O.push(2 * O[O.length - 1]);\n      var C = O.length,\n        M = O[C - 1];\n      function T(t) {\n        return (\"number\" == typeof t || \"string\" == typeof t) && +Math.abs(t) <= e || t instanceof u && t.value.length <= 1;\n      }\n      function L(t, e, n) {\n        e = K(e);\n        for (var i = t.isNegative(), o = e.isNegative(), f = i ? t.not() : t, u = o ? e.not() : e, a = 0, s = 0, h = null, c = null, l = []; !f.isZero() || !u.isZero();) a = (h = _(f, M))[1].toJSNumber(), i && (a = M - 1 - a), s = (c = _(u, M))[1].toJSNumber(), o && (s = M - 1 - s), f = h[0], u = c[0], l.push(n(a, s));\n        for (var p = 0 !== n(i ? 1 : 0, o ? 1 : 0) ? r(-1) : r(0), d = l.length - 1; d >= 0; d -= 1) p = p.multiply(M).add(r(l[d]));\n        return p;\n      }\n      function P(t) {\n        var r = t.value,\n          n = \"number\" == typeof r ? r | 1 << 30 : r[0] + r[1] * e | 1073758208;\n        return n & -n;\n      }\n      function z(t, r) {\n        return t = K(t), r = K(r), t.greater(r) ? t : r;\n      }\n      function R(t, r) {\n        return t = K(t), r = K(r), t.lesser(r) ? t : r;\n      }\n      function N(t, r) {\n        if (t = K(t).abs(), r = K(r).abs(), t.equals(r)) return t;\n        if (t.isZero()) return r;\n        if (r.isZero()) return t;\n        for (var e, n, i = f[1]; t.isEven() && r.isEven();) e = Math.min(P(t), P(r)), t = t.divide(e), r = r.divide(e), i = i.multiply(e);\n        for (; t.isEven();) t = t.divide(P(t));\n        do {\n          for (; r.isEven();) r = r.divide(P(r));\n          t.greater(r) && (n = r, r = t, t = n), r = r.subtract(t);\n        } while (!r.isZero());\n        return i.isUnit() ? t : t.multiply(i);\n      }\n      a.prototype.shiftLeft = u.prototype.shiftLeft = function (t) {\n        if (!T(t)) throw new Error(String(t) + \" is too large for shifting.\");\n        if ((t = +t) < 0) return this.shiftRight(-t);\n        var r = this;\n        if (r.isZero()) return r;\n        for (; t >= C;) r = r.multiply(M), t -= C - 1;\n        return r.multiply(O[t]);\n      }, a.prototype.shiftRight = u.prototype.shiftRight = function (t) {\n        var r;\n        if (!T(t)) throw new Error(String(t) + \" is too large for shifting.\");\n        if ((t = +t) < 0) return this.shiftLeft(-t);\n        for (var e = this; t >= C;) {\n          if (e.isZero() || e.isNegative() && e.isUnit()) return e;\n          e = (r = _(e, M))[1].isNegative() ? r[0].prev() : r[0], t -= C - 1;\n        }\n        return (r = _(e, O[t]))[1].isNegative() ? r[0].prev() : r[0];\n      }, a.prototype.not = u.prototype.not = function () {\n        return this.negate().prev();\n      }, a.prototype.and = u.prototype.and = function (t) {\n        return L(this, t, function (t, r) {\n          return t & r;\n        });\n      }, a.prototype.or = u.prototype.or = function (t) {\n        return L(this, t, function (t, r) {\n          return t | r;\n        });\n      }, a.prototype.xor = u.prototype.xor = function (t) {\n        return L(this, t, function (t, r) {\n          return t ^ r;\n        });\n      }, a.prototype.bitLength = u.prototype.bitLength = function () {\n        var t = this;\n        return t.compareTo(r(0)) < 0 && (t = t.negate().subtract(r(1))), 0 === t.compareTo(r(0)) ? r(0) : r(function t(e, n) {\n          if (n.compareTo(e) <= 0) {\n            var i = t(e, n.square(n)),\n              o = i.p,\n              f = i.e,\n              u = o.multiply(n);\n            return u.compareTo(e) <= 0 ? {\n              p: u,\n              e: 2 * f + 1\n            } : {\n              p: o,\n              e: 2 * f\n            };\n          }\n          return {\n            p: r(1),\n            e: 0\n          };\n        }(t, r(2)).e).add(r(1));\n      };\n      var q = function (t, r) {\n        for (var e = t.length, n = Math.abs(r), i = 0; i < e; i++) if (\"-\" !== (h = t[i].toLowerCase()) && /[a-z0-9]/.test(h)) {\n          if (/[0-9]/.test(h) && +h >= n) {\n            if (\"1\" === h && 1 === n) continue;\n            throw new Error(h + \" is not a valid digit in base \" + r + \".\");\n          }\n          if (h.charCodeAt(0) - 87 >= n) throw new Error(h + \" is not a valid digit in base \" + r + \".\");\n        }\n        if (2 <= r && r <= 36 && e <= o / Math.log(r)) {\n          var f = parseInt(t, r);\n          if (isNaN(f)) throw new Error(h + \" is not a valid digit in base \" + r + \".\");\n          return new a(parseInt(t, r));\n        }\n        r = K(r);\n        var u = [],\n          s = \"-\" === t[0];\n        for (i = s ? 1 : 0; i < t.length; i++) {\n          var h,\n            c = (h = t[i].toLowerCase()).charCodeAt(0);\n          if (48 <= c && c <= 57) u.push(K(h));else if (97 <= c && c <= 122) u.push(K(h.charCodeAt(0) - 87));else {\n            if (\"<\" !== h) throw new Error(h + \" is not a valid character\");\n            var l = i;\n            do {\n              i++;\n            } while (\">\" !== t[i]);\n            u.push(K(t.slice(l + 1, i)));\n          }\n        }\n        return j(u, r, s);\n      };\n      function j(t, r, e) {\n        var n,\n          i = f[0],\n          o = f[1];\n        for (n = t.length - 1; n >= 0; n--) i = i.add(t[n].times(o)), o = o.times(r);\n        return e ? i.negate() : i;\n      }\n      function D(t) {\n        return t <= 35 ? \"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(t) : \"<\" + t + \">\";\n      }\n      function H(t, e) {\n        if ((e = r(e)).isZero()) {\n          if (t.isZero()) return {\n            value: [0],\n            isNegative: !1\n          };\n          throw new Error(\"Cannot convert nonzero numbers to base 0.\");\n        }\n        if (e.equals(-1)) {\n          if (t.isZero()) return {\n            value: [0],\n            isNegative: !1\n          };\n          if (t.isNegative()) return {\n            value: [].concat.apply([], Array.apply(null, Array(-t)).map(Array.prototype.valueOf, [1, 0])),\n            isNegative: !1\n          };\n          var n = Array.apply(null, Array(+t - 1)).map(Array.prototype.valueOf, [0, 1]);\n          return n.unshift([1]), {\n            value: [].concat.apply([], n),\n            isNegative: !1\n          };\n        }\n        var i = !1;\n        if (t.isNegative() && e.isPositive() && (i = !0, t = t.abs()), e.equals(1)) return t.isZero() ? {\n          value: [0],\n          isNegative: !1\n        } : {\n          value: Array.apply(null, Array(+t)).map(Number.prototype.valueOf, 1),\n          isNegative: i\n        };\n        for (var o, f = [], u = t; u.isNegative() || u.compareAbs(e) >= 0;) {\n          o = u.divmod(e), u = o.quotient;\n          var a = o.remainder;\n          a.isNegative() && (a = e.minus(a).abs(), u = u.next()), f.push(a.toJSNumber());\n        }\n        return f.push(u.toJSNumber()), {\n          value: f.reverse(),\n          isNegative: i\n        };\n      }\n      function F(t, r) {\n        var e = H(t, r);\n        return (e.isNegative ? \"-\" : \"\") + e.value.map(D).join(\"\");\n      }\n      function Z(t) {\n        if (s(+t)) {\n          var r = +t;\n          if (r === d(r)) return new a(r);\n          throw new Error(\"Invalid integer: \" + t);\n        }\n        var e = \"-\" === t[0];\n        e && (t = t.slice(1));\n        var n = t.split(/e/i);\n        if (n.length > 2) throw new Error(\"Invalid integer: \" + n.join(\"e\"));\n        if (2 === n.length) {\n          var i = n[1];\n          if (\"+\" === i[0] && (i = i.slice(1)), (i = +i) !== d(i) || !s(i)) throw new Error(\"Invalid integer: \" + i + \" is not a valid exponent.\");\n          var o = n[0],\n            f = o.indexOf(\".\");\n          if (f >= 0 && (i -= o.length - f - 1, o = o.slice(0, f) + o.slice(f + 1)), i < 0) throw new Error(\"Cannot include negative exponent part for integers\");\n          t = o += new Array(i + 1).join(\"0\");\n        }\n        if (!/^([0-9][0-9]*)$/.test(t)) throw new Error(\"Invalid integer: \" + t);\n        for (var h = [], c = t.length, p = c - 7; c > 0;) h.push(+t.slice(p, c)), (p -= 7) < 0 && (p = 0), c -= 7;\n        return l(h), new u(h, e);\n      }\n      function K(t) {\n        return \"number\" == typeof t ? function (t) {\n          if (s(t)) {\n            if (t !== d(t)) throw new Error(t + \" is not an integer.\");\n            return new a(t);\n          }\n          return Z(t.toString());\n        }(t) : \"string\" == typeof t ? Z(t) : t;\n      }\n      u.prototype.toArray = function (t) {\n        return H(this, t);\n      }, a.prototype.toArray = function (t) {\n        return H(this, t);\n      }, u.prototype.toString = function (t) {\n        if (void 0 === t && (t = 10), 10 !== t) return F(this, t);\n        for (var r, e = this.value, n = e.length, i = String(e[--n]); --n >= 0;) r = String(e[n]), i += \"0000000\".slice(r.length) + r;\n        return (this.sign ? \"-\" : \"\") + i;\n      }, a.prototype.toString = function (t) {\n        return void 0 === t && (t = 10), 10 != t ? F(this, t) : String(this.value);\n      }, u.prototype.toJSON = a.prototype.toJSON = function () {\n        return this.toString();\n      }, u.prototype.toJSNumber = u.prototype.valueOf = function () {\n        return parseInt(this.toString(), 10);\n      }, a.prototype.toJSNumber = a.prototype.valueOf = function () {\n        return this.value;\n      };\n      for (var X = 0; X < 1e3; X++) f[X] = new a(X), X > 0 && (f[-X] = new a(-X));\n      return f.one = f[1], f.zero = f[0], f.minusOne = f[-1], f.max = z, f.min = R, f.gcd = N, f.lcm = function (t, r) {\n        return t = K(t).abs(), r = K(r).abs(), t.divide(N(t, r)).multiply(r);\n      }, f.isInstance = function (t) {\n        return t instanceof u || t instanceof a;\n      }, f.randBetween = function (t, r) {\n        var n = R(t = K(t), r = K(r)),\n          i = z(t, r).subtract(n).add(1);\n        if (i.isSmall) return n.add(Math.floor(Math.random() * i));\n        for (var o = [], f = !0, s = i.value.length - 1; s >= 0; s--) {\n          var h = f ? i.value[s] : e,\n            l = d(Math.random() * h);\n          o.unshift(l), l < h && (f = !1);\n        }\n        return o = c(o), n.add(\"number\" == typeof o ? new a(o) : new u(o, !1));\n      }, f.fromArray = function (t, r, e) {\n        return j(t.map(K), K(r || 10), e);\n      }, f;\n    }();\n    t.hasOwnProperty(\"exports\") && (t.exports = r);\n  }),\n  d = function (t) {\n    var r;\n    if (t instanceof Uint8Array) r = t;else if (t instanceof Buffer) r = new Uint8Array(t);else {\n      if (\"string\" != typeof t) throw new Error(\"Input must be an string, Buffer or Uint8Array\");\n      r = new Uint8Array(Buffer.from(t, \"utf8\"));\n    }\n    return r;\n  },\n  g = function (t) {\n    return Array.prototype.map.call(t, function (t) {\n      return (t < 16 ? \"0\" : \"\") + t.toString(16);\n    }).join(\"\");\n  };\nfunction y(t, r, e) {\n  var n = t[r] + t[e],\n    i = t[r + 1] + t[e + 1];\n  n >= 4294967296 && i++, t[r] = n, t[r + 1] = i;\n}\nfunction v(t, r, e, n) {\n  var i = t[r] + e;\n  e < 0 && (i += 4294967296);\n  var o = t[r + 1] + n;\n  i >= 4294967296 && o++, t[r] = i, t[r + 1] = o;\n}\nfunction w(t, r) {\n  return t[r] ^ t[r + 1] << 8 ^ t[r + 2] << 16 ^ t[r + 3] << 24;\n}\nfunction b(t, r, e, n, i, o) {\n  var f = A[i],\n    u = A[i + 1],\n    a = A[o],\n    s = A[o + 1];\n  y(B, t, r), v(B, t, f, u);\n  var h = B[n] ^ B[t],\n    c = B[n + 1] ^ B[t + 1];\n  B[n] = c, B[n + 1] = h, y(B, e, n), B[r] = (h = B[r] ^ B[e]) >>> 24 ^ (c = B[r + 1] ^ B[e + 1]) << 8, B[r + 1] = c >>> 24 ^ h << 8, y(B, t, r), v(B, t, a, s), B[n] = (h = B[n] ^ B[t]) >>> 16 ^ (c = B[n + 1] ^ B[t + 1]) << 16, B[n + 1] = c >>> 16 ^ h << 16, y(B, e, n), B[r] = (c = B[r + 1] ^ B[e + 1]) >>> 31 ^ (h = B[r] ^ B[e]) << 1, B[r + 1] = h >>> 31 ^ c << 1;\n}\nvar m = new Uint32Array([4089235720, 1779033703, 2227873595, 3144134277, 4271175723, 1013904242, 1595750129, 2773480762, 2917565137, 1359893119, 725511199, 2600822924, 4215389547, 528734635, 327033209, 1541459225]),\n  E = new Uint8Array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3].map(function (t) {\n    return 2 * t;\n  })),\n  B = new Uint32Array(32),\n  A = new Uint32Array(32);\nfunction U(t, r) {\n  var e = 0;\n  for (e = 0; e < 16; e++) B[e] = t.h[e], B[e + 16] = m[e];\n  for (B[24] = B[24] ^ t.t, B[25] = B[25] ^ t.t / 4294967296, r && (B[28] = ~B[28], B[29] = ~B[29]), e = 0; e < 32; e++) A[e] = w(t.b, 4 * e);\n  for (e = 0; e < 12; e++) b(0, 8, 16, 24, E[16 * e + 0], E[16 * e + 1]), b(2, 10, 18, 26, E[16 * e + 2], E[16 * e + 3]), b(4, 12, 20, 28, E[16 * e + 4], E[16 * e + 5]), b(6, 14, 22, 30, E[16 * e + 6], E[16 * e + 7]), b(0, 10, 20, 30, E[16 * e + 8], E[16 * e + 9]), b(2, 12, 22, 24, E[16 * e + 10], E[16 * e + 11]), b(4, 14, 16, 26, E[16 * e + 12], E[16 * e + 13]), b(6, 8, 18, 28, E[16 * e + 14], E[16 * e + 15]);\n  for (e = 0; e < 16; e++) t.h[e] = t.h[e] ^ B[e] ^ B[e + 16];\n}\nfunction I(t, r) {\n  if (0 === t || t > 64) throw new Error(\"Illegal output length, expected 0 < length <= 64\");\n  if (r && r.length > 64) throw new Error(\"Illegal key, expected Uint8Array with 0 < length <= 64\");\n  for (var e = {\n      b: new Uint8Array(128),\n      h: new Uint32Array(16),\n      t: 0,\n      c: 0,\n      outlen: t\n    }, n = 0; n < 16; n++) e.h[n] = m[n];\n  return e.h[0] ^= 16842752 ^ (r ? r.length : 0) << 8 ^ t, r && (_(e, r), e.c = 128), e;\n}\nfunction _(t, r) {\n  for (var e = 0; e < r.length; e++) 128 === t.c && (t.t += t.c, U(t, !1), t.c = 0), t.b[t.c++] = r[e];\n}\nfunction S(t) {\n  for (t.t += t.c; t.c < 128;) t.b[t.c++] = 0;\n  U(t, !0);\n  for (var r = new Uint8Array(t.outlen), e = 0; e < t.outlen; e++) r[e] = t.h[e >> 2] >> 8 * (3 & e);\n  return r;\n}\nfunction x(t, r, e) {\n  e = e || 64, t = d(t);\n  var n = I(e, r);\n  return _(n, t), S(n);\n}\nvar k = {\n  blake2b: x,\n  blake2bHex: function (t, r, e) {\n    var n = x(t, r, e);\n    return g(n);\n  },\n  blake2bInit: I,\n  blake2bUpdate: _,\n  blake2bFinal: S\n};\nfunction O(t, r) {\n  return t[r] ^ t[r + 1] << 8 ^ t[r + 2] << 16 ^ t[r + 3] << 24;\n}\nfunction C(t, r, e, n, i, o) {\n  P[t] = P[t] + P[r] + i, P[n] = M(P[n] ^ P[t], 16), P[e] = P[e] + P[n], P[r] = M(P[r] ^ P[e], 12), P[t] = P[t] + P[r] + o, P[n] = M(P[n] ^ P[t], 8), P[e] = P[e] + P[n], P[r] = M(P[r] ^ P[e], 7);\n}\nfunction M(t, r) {\n  return t >>> r ^ t << 32 - r;\n}\nvar T = new Uint32Array([1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]),\n  L = new Uint8Array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0]),\n  P = new Uint32Array(16),\n  z = new Uint32Array(16);\nfunction R(t, r) {\n  var e = 0;\n  for (e = 0; e < 8; e++) P[e] = t.h[e], P[e + 8] = T[e];\n  for (P[12] ^= t.t, P[13] ^= t.t / 4294967296, r && (P[14] = ~P[14]), e = 0; e < 16; e++) z[e] = O(t.b, 4 * e);\n  for (e = 0; e < 10; e++) C(0, 4, 8, 12, z[L[16 * e + 0]], z[L[16 * e + 1]]), C(1, 5, 9, 13, z[L[16 * e + 2]], z[L[16 * e + 3]]), C(2, 6, 10, 14, z[L[16 * e + 4]], z[L[16 * e + 5]]), C(3, 7, 11, 15, z[L[16 * e + 6]], z[L[16 * e + 7]]), C(0, 5, 10, 15, z[L[16 * e + 8]], z[L[16 * e + 9]]), C(1, 6, 11, 12, z[L[16 * e + 10]], z[L[16 * e + 11]]), C(2, 7, 8, 13, z[L[16 * e + 12]], z[L[16 * e + 13]]), C(3, 4, 9, 14, z[L[16 * e + 14]], z[L[16 * e + 15]]);\n  for (e = 0; e < 8; e++) t.h[e] ^= P[e] ^ P[e + 8];\n}\nfunction N(t, r) {\n  if (!(t > 0 && t <= 32)) throw new Error(\"Incorrect output length, should be in [1, 32]\");\n  var e = r ? r.length : 0;\n  if (r && !(e > 0 && e <= 32)) throw new Error(\"Incorrect key length, should be in [1, 32]\");\n  var n = {\n    h: new Uint32Array(T),\n    b: new Uint32Array(64),\n    c: 0,\n    t: 0,\n    outlen: t\n  };\n  return n.h[0] ^= 16842752 ^ e << 8 ^ t, e > 0 && (q(n, r), n.c = 64), n;\n}\nfunction q(t, r) {\n  for (var e = 0; e < r.length; e++) 64 === t.c && (t.t += t.c, R(t, !1), t.c = 0), t.b[t.c++] = r[e];\n}\nfunction j(t) {\n  for (t.t += t.c; t.c < 64;) t.b[t.c++] = 0;\n  R(t, !0);\n  for (var r = new Uint8Array(t.outlen), e = 0; e < t.outlen; e++) r[e] = t.h[e >> 2] >> 8 * (3 & e) & 255;\n  return r;\n}\nfunction D(t, r, e) {\n  e = e || 32, t = d(t);\n  var n = N(e, r);\n  return q(n, t), j(n);\n}\nfor (var H = {\n    blake2s: D,\n    blake2sHex: function (t, r, e) {\n      var n = D(t, r, e);\n      return g(n);\n    },\n    blake2sInit: N,\n    blake2sUpdate: q,\n    blake2sFinal: j\n  }, F = {\n    blake2b: k.blake2b,\n    blake2bHex: k.blake2bHex,\n    blake2bInit: k.blake2bInit,\n    blake2bUpdate: k.blake2bUpdate,\n    blake2bFinal: k.blake2bFinal,\n    blake2s: H.blake2s,\n    blake2sHex: H.blake2sHex,\n    blake2sInit: H.blake2sInit,\n    blake2sUpdate: H.blake2sUpdate,\n    blake2sFinal: H.blake2sFinal\n  }, Z = [], K = [], X = \"undefined\" != typeof Uint8Array ? Uint8Array : Array, V = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\", Y = 0, W = V.length; Y < W; ++Y) Z[Y] = V[Y], K[V.charCodeAt(Y)] = Y;\nfunction J(t, r, e) {\n  for (var n, i = [], o = r; o < e; o += 3) i.push(Z[(n = (t[o] << 16 & 16711680) + (t[o + 1] << 8 & 65280) + (255 & t[o + 2])) >> 18 & 63] + Z[n >> 12 & 63] + Z[n >> 6 & 63] + Z[63 & n]);\n  return i.join(\"\");\n}\nK[\"-\".charCodeAt(0)] = 62, K[\"_\".charCodeAt(0)] = 63;\nvar G = function (t) {\n    var r,\n      e,\n      n = function (t) {\n        var r = t.length;\n        if (r % 4 > 0) throw new Error(\"Invalid string. Length must be a multiple of 4\");\n        var e = t.indexOf(\"=\");\n        return -1 === e && (e = r), [e, e === r ? 0 : 4 - e % 4];\n      }(t),\n      i = n[0],\n      o = n[1],\n      f = new X(function (t, r, e) {\n        return 3 * (r + e) / 4 - e;\n      }(0, i, o)),\n      u = 0,\n      a = o > 0 ? i - 4 : i;\n    for (e = 0; e < a; e += 4) r = K[t.charCodeAt(e)] << 18 | K[t.charCodeAt(e + 1)] << 12 | K[t.charCodeAt(e + 2)] << 6 | K[t.charCodeAt(e + 3)], f[u++] = r >> 16 & 255, f[u++] = r >> 8 & 255, f[u++] = 255 & r;\n    return 2 === o && (r = K[t.charCodeAt(e)] << 2 | K[t.charCodeAt(e + 1)] >> 4, f[u++] = 255 & r), 1 === o && (r = K[t.charCodeAt(e)] << 10 | K[t.charCodeAt(e + 1)] << 4 | K[t.charCodeAt(e + 2)] >> 2, f[u++] = r >> 8 & 255, f[u++] = 255 & r), f;\n  },\n  Q = function (t) {\n    for (var r, e = t.length, n = e % 3, i = [], o = 0, f = e - n; o < f; o += 16383) i.push(J(t, o, o + 16383 > f ? f : o + 16383));\n    return 1 === n ? i.push(Z[(r = t[e - 1]) >> 2] + Z[r << 4 & 63] + \"==\") : 2 === n && i.push(Z[(r = (t[e - 2] << 8) + t[e - 1]) >> 10] + Z[r >> 4 & 63] + Z[r << 2 & 63] + \"=\"), i.join(\"\");\n  },\n  $ = function (t, r, e, n, i) {\n    var o,\n      f,\n      u = 8 * i - n - 1,\n      a = (1 << u) - 1,\n      s = a >> 1,\n      h = -7,\n      c = e ? i - 1 : 0,\n      l = e ? -1 : 1,\n      p = t[r + c];\n    for (c += l, o = p & (1 << -h) - 1, p >>= -h, h += u; h > 0; o = 256 * o + t[r + c], c += l, h -= 8);\n    for (f = o & (1 << -h) - 1, o >>= -h, h += n; h > 0; f = 256 * f + t[r + c], c += l, h -= 8);\n    if (0 === o) o = 1 - s;else {\n      if (o === a) return f ? NaN : Infinity * (p ? -1 : 1);\n      f += Math.pow(2, n), o -= s;\n    }\n    return (p ? -1 : 1) * f * Math.pow(2, o - n);\n  },\n  tt = function (t, r, e, n, i, o) {\n    var f,\n      u,\n      a,\n      s = 8 * o - i - 1,\n      h = (1 << s) - 1,\n      c = h >> 1,\n      l = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0,\n      p = n ? 0 : o - 1,\n      d = n ? 1 : -1,\n      g = r < 0 || 0 === r && 1 / r < 0 ? 1 : 0;\n    for (r = Math.abs(r), isNaN(r) || Infinity === r ? (u = isNaN(r) ? 1 : 0, f = h) : (f = Math.floor(Math.log(r) / Math.LN2), r * (a = Math.pow(2, -f)) < 1 && (f--, a *= 2), (r += f + c >= 1 ? l / a : l * Math.pow(2, 1 - c)) * a >= 2 && (f++, a /= 2), f + c >= h ? (u = 0, f = h) : f + c >= 1 ? (u = (r * a - 1) * Math.pow(2, i), f += c) : (u = r * Math.pow(2, c - 1) * Math.pow(2, i), f = 0)); i >= 8; t[e + p] = 255 & u, p += d, u /= 256, i -= 8);\n    for (f = f << i | u, s += i; s > 0; t[e + p] = 255 & f, p += d, f /= 256, s -= 8);\n    t[e + p - d] |= 128 * g;\n  },\n  rt = l(function (t, r) {\n    var e = \"function\" == typeof Symbol && \"function\" == typeof Symbol.for ? Symbol.for(\"nodejs.util.inspect.custom\") : null;\n    function n(t) {\n      if (t > 2147483647) throw new RangeError('The value \"' + t + '\" is invalid for option \"size\"');\n      var r = new Uint8Array(t);\n      return Object.setPrototypeOf(r, i.prototype), r;\n    }\n    function i(t, r, e) {\n      if (\"number\" == typeof t) {\n        if (\"string\" == typeof r) throw new TypeError('The \"string\" argument must be of type string. Received type number');\n        return u(t);\n      }\n      return o(t, r, e);\n    }\n    function o(t, r, e) {\n      if (\"string\" == typeof t) return function (t, r) {\n        if (\"string\" == typeof r && \"\" !== r || (r = \"utf8\"), !i.isEncoding(r)) throw new TypeError(\"Unknown encoding: \" + r);\n        var e = 0 | c(t, r),\n          o = n(e),\n          f = o.write(t, r);\n        return f !== e && (o = o.slice(0, f)), o;\n      }(t, r);\n      if (ArrayBuffer.isView(t)) return a(t);\n      if (null == t) throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof t);\n      if (R(t, ArrayBuffer) || t && R(t.buffer, ArrayBuffer)) return s(t, r, e);\n      if (\"undefined\" != typeof SharedArrayBuffer && (R(t, SharedArrayBuffer) || t && R(t.buffer, SharedArrayBuffer))) return s(t, r, e);\n      if (\"number\" == typeof t) throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n      var o = t.valueOf && t.valueOf();\n      if (null != o && o !== t) return i.from(o, r, e);\n      var f = function (t) {\n        if (i.isBuffer(t)) {\n          var r = 0 | h(t.length),\n            e = n(r);\n          return 0 === e.length || t.copy(e, 0, 0, r), e;\n        }\n        return void 0 !== t.length ? \"number\" != typeof t.length || N(t.length) ? n(0) : a(t) : \"Buffer\" === t.type && Array.isArray(t.data) ? a(t.data) : void 0;\n      }(t);\n      if (f) return f;\n      if (\"undefined\" != typeof Symbol && null != Symbol.toPrimitive && \"function\" == typeof t[Symbol.toPrimitive]) return i.from(t[Symbol.toPrimitive](\"string\"), r, e);\n      throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof t);\n    }\n    function f(t) {\n      if (\"number\" != typeof t) throw new TypeError('\"size\" argument must be of type number');\n      if (t < 0) throw new RangeError('The value \"' + t + '\" is invalid for option \"size\"');\n    }\n    function u(t) {\n      return f(t), n(t < 0 ? 0 : 0 | h(t));\n    }\n    function a(t) {\n      for (var r = t.length < 0 ? 0 : 0 | h(t.length), e = n(r), i = 0; i < r; i += 1) e[i] = 255 & t[i];\n      return e;\n    }\n    function s(t, r, e) {\n      if (r < 0 || t.byteLength < r) throw new RangeError('\"offset\" is outside of buffer bounds');\n      if (t.byteLength < r + (e || 0)) throw new RangeError('\"length\" is outside of buffer bounds');\n      var n;\n      return n = void 0 === r && void 0 === e ? new Uint8Array(t) : void 0 === e ? new Uint8Array(t, r) : new Uint8Array(t, r, e), Object.setPrototypeOf(n, i.prototype), n;\n    }\n    function h(t) {\n      if (t >= 2147483647) throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\" + 2147483647..toString(16) + \" bytes\");\n      return 0 | t;\n    }\n    function c(t, r) {\n      if (i.isBuffer(t)) return t.length;\n      if (ArrayBuffer.isView(t) || R(t, ArrayBuffer)) return t.byteLength;\n      if (\"string\" != typeof t) throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof t);\n      var e = t.length,\n        n = arguments.length > 2 && !0 === arguments[2];\n      if (!n && 0 === e) return 0;\n      for (var o = !1;;) switch (r) {\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n          return e;\n        case \"utf8\":\n        case \"utf-8\":\n          return L(t).length;\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n          return 2 * e;\n        case \"hex\":\n          return e >>> 1;\n        case \"base64\":\n          return P(t).length;\n        default:\n          if (o) return n ? -1 : L(t).length;\n          r = (\"\" + r).toLowerCase(), o = !0;\n      }\n    }\n    function l(t, r, e) {\n      var n = !1;\n      if ((void 0 === r || r < 0) && (r = 0), r > this.length) return \"\";\n      if ((void 0 === e || e > this.length) && (e = this.length), e <= 0) return \"\";\n      if ((e >>>= 0) <= (r >>>= 0)) return \"\";\n      for (t || (t = \"utf8\");;) switch (t) {\n        case \"hex\":\n          return _(this, r, e);\n        case \"utf8\":\n        case \"utf-8\":\n          return A(this, r, e);\n        case \"ascii\":\n          return U(this, r, e);\n        case \"latin1\":\n        case \"binary\":\n          return I(this, r, e);\n        case \"base64\":\n          return B(this, r, e);\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n          return S(this, r, e);\n        default:\n          if (n) throw new TypeError(\"Unknown encoding: \" + t);\n          t = (t + \"\").toLowerCase(), n = !0;\n      }\n    }\n    function p(t, r, e) {\n      var n = t[r];\n      t[r] = t[e], t[e] = n;\n    }\n    function d(t, r, e, n, o) {\n      if (0 === t.length) return -1;\n      if (\"string\" == typeof e ? (n = e, e = 0) : e > 2147483647 ? e = 2147483647 : e < -2147483648 && (e = -2147483648), N(e = +e) && (e = o ? 0 : t.length - 1), e < 0 && (e = t.length + e), e >= t.length) {\n        if (o) return -1;\n        e = t.length - 1;\n      } else if (e < 0) {\n        if (!o) return -1;\n        e = 0;\n      }\n      if (\"string\" == typeof r && (r = i.from(r, n)), i.isBuffer(r)) return 0 === r.length ? -1 : g(t, r, e, n, o);\n      if (\"number\" == typeof r) return r &= 255, \"function\" == typeof Uint8Array.prototype.indexOf ? o ? Uint8Array.prototype.indexOf.call(t, r, e) : Uint8Array.prototype.lastIndexOf.call(t, r, e) : g(t, [r], e, n, o);\n      throw new TypeError(\"val must be string, number or Buffer\");\n    }\n    function g(t, r, e, n, i) {\n      var o,\n        f = 1,\n        u = t.length,\n        a = r.length;\n      if (void 0 !== n && (\"ucs2\" === (n = String(n).toLowerCase()) || \"ucs-2\" === n || \"utf16le\" === n || \"utf-16le\" === n)) {\n        if (t.length < 2 || r.length < 2) return -1;\n        f = 2, u /= 2, a /= 2, e /= 2;\n      }\n      function s(t, r) {\n        return 1 === f ? t[r] : t.readUInt16BE(r * f);\n      }\n      if (i) {\n        var h = -1;\n        for (o = e; o < u; o++) if (s(t, o) === s(r, -1 === h ? 0 : o - h)) {\n          if (-1 === h && (h = o), o - h + 1 === a) return h * f;\n        } else -1 !== h && (o -= o - h), h = -1;\n      } else for (e + a > u && (e = u - a), o = e; o >= 0; o--) {\n        for (var c = !0, l = 0; l < a; l++) if (s(t, o + l) !== s(r, l)) {\n          c = !1;\n          break;\n        }\n        if (c) return o;\n      }\n      return -1;\n    }\n    function y(t, r, e, n) {\n      e = Number(e) || 0;\n      var i = t.length - e;\n      n ? (n = Number(n)) > i && (n = i) : n = i;\n      var o = r.length;\n      n > o / 2 && (n = o / 2);\n      for (var f = 0; f < n; ++f) {\n        var u = parseInt(r.substr(2 * f, 2), 16);\n        if (N(u)) return f;\n        t[e + f] = u;\n      }\n      return f;\n    }\n    function v(t, r, e, n) {\n      return z(L(r, t.length - e), t, e, n);\n    }\n    function w(t, r, e, n) {\n      return z(function (t) {\n        for (var r = [], e = 0; e < t.length; ++e) r.push(255 & t.charCodeAt(e));\n        return r;\n      }(r), t, e, n);\n    }\n    function b(t, r, e, n) {\n      return w(t, r, e, n);\n    }\n    function m(t, r, e, n) {\n      return z(P(r), t, e, n);\n    }\n    function E(t, r, e, n) {\n      return z(function (t, r) {\n        for (var e, n, i = [], o = 0; o < t.length && !((r -= 2) < 0); ++o) n = (e = t.charCodeAt(o)) >> 8, i.push(e % 256), i.push(n);\n        return i;\n      }(r, t.length - e), t, e, n);\n    }\n    function B(t, r, e) {\n      return Q(0 === r && e === t.length ? t : t.slice(r, e));\n    }\n    function A(t, r, e) {\n      e = Math.min(t.length, e);\n      for (var n = [], i = r; i < e;) {\n        var o,\n          f,\n          u,\n          a,\n          s = t[i],\n          h = null,\n          c = s > 239 ? 4 : s > 223 ? 3 : s > 191 ? 2 : 1;\n        if (i + c <= e) switch (c) {\n          case 1:\n            s < 128 && (h = s);\n            break;\n          case 2:\n            128 == (192 & (o = t[i + 1])) && (a = (31 & s) << 6 | 63 & o) > 127 && (h = a);\n            break;\n          case 3:\n            f = t[i + 2], 128 == (192 & (o = t[i + 1])) && 128 == (192 & f) && (a = (15 & s) << 12 | (63 & o) << 6 | 63 & f) > 2047 && (a < 55296 || a > 57343) && (h = a);\n            break;\n          case 4:\n            f = t[i + 2], u = t[i + 3], 128 == (192 & (o = t[i + 1])) && 128 == (192 & f) && 128 == (192 & u) && (a = (15 & s) << 18 | (63 & o) << 12 | (63 & f) << 6 | 63 & u) > 65535 && a < 1114112 && (h = a);\n        }\n        null === h ? (h = 65533, c = 1) : h > 65535 && (n.push((h -= 65536) >>> 10 & 1023 | 55296), h = 56320 | 1023 & h), n.push(h), i += c;\n      }\n      return function (t) {\n        var r = t.length;\n        if (r <= 4096) return String.fromCharCode.apply(String, t);\n        for (var e = \"\", n = 0; n < r;) e += String.fromCharCode.apply(String, t.slice(n, n += 4096));\n        return e;\n      }(n);\n    }\n    function U(t, r, e) {\n      var n = \"\";\n      e = Math.min(t.length, e);\n      for (var i = r; i < e; ++i) n += String.fromCharCode(127 & t[i]);\n      return n;\n    }\n    function I(t, r, e) {\n      var n = \"\";\n      e = Math.min(t.length, e);\n      for (var i = r; i < e; ++i) n += String.fromCharCode(t[i]);\n      return n;\n    }\n    function _(t, r, e) {\n      var n = t.length;\n      (!r || r < 0) && (r = 0), (!e || e < 0 || e > n) && (e = n);\n      for (var i = \"\", o = r; o < e; ++o) i += q[t[o]];\n      return i;\n    }\n    function S(t, r, e) {\n      for (var n = t.slice(r, e), i = \"\", o = 0; o < n.length; o += 2) i += String.fromCharCode(n[o] + 256 * n[o + 1]);\n      return i;\n    }\n    function x(t, r, e) {\n      if (t % 1 != 0 || t < 0) throw new RangeError(\"offset is not uint\");\n      if (t + r > e) throw new RangeError(\"Trying to access beyond buffer length\");\n    }\n    function k(t, r, e, n, o, f) {\n      if (!i.isBuffer(t)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n      if (r > o || r < f) throw new RangeError('\"value\" argument is out of bounds');\n      if (e + n > t.length) throw new RangeError(\"Index out of range\");\n    }\n    function O(t, r, e, n, i, o) {\n      if (e + n > t.length) throw new RangeError(\"Index out of range\");\n      if (e < 0) throw new RangeError(\"Index out of range\");\n    }\n    function C(t, r, e, n, i) {\n      return r = +r, e >>>= 0, i || O(t, 0, e, 4), tt(t, r, e, n, 23, 4), e + 4;\n    }\n    function M(t, r, e, n, i) {\n      return r = +r, e >>>= 0, i || O(t, 0, e, 8), tt(t, r, e, n, 52, 8), e + 8;\n    }\n    r.Buffer = i, r.SlowBuffer = function (t) {\n      return +t != t && (t = 0), i.alloc(+t);\n    }, r.INSPECT_MAX_BYTES = 50, r.kMaxLength = 2147483647, (i.TYPED_ARRAY_SUPPORT = function () {\n      try {\n        var t = new Uint8Array(1),\n          r = {\n            foo: function () {\n              return 42;\n            }\n          };\n        return Object.setPrototypeOf(r, Uint8Array.prototype), Object.setPrototypeOf(t, r), 42 === t.foo();\n      } catch (t) {\n        return !1;\n      }\n    }()) || \"undefined\" == typeof console || \"function\" != typeof console.error || console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\"), Object.defineProperty(i.prototype, \"parent\", {\n      enumerable: !0,\n      get: function () {\n        if (i.isBuffer(this)) return this.buffer;\n      }\n    }), Object.defineProperty(i.prototype, \"offset\", {\n      enumerable: !0,\n      get: function () {\n        if (i.isBuffer(this)) return this.byteOffset;\n      }\n    }), \"undefined\" != typeof Symbol && null != Symbol.species && i[Symbol.species] === i && Object.defineProperty(i, Symbol.species, {\n      value: null,\n      configurable: !0,\n      enumerable: !1,\n      writable: !1\n    }), i.poolSize = 8192, i.from = function (t, r, e) {\n      return o(t, r, e);\n    }, Object.setPrototypeOf(i.prototype, Uint8Array.prototype), Object.setPrototypeOf(i, Uint8Array), i.alloc = function (t, r, e) {\n      return function (t, r, e) {\n        return f(t), t <= 0 ? n(t) : void 0 !== r ? \"string\" == typeof e ? n(t).fill(r, e) : n(t).fill(r) : n(t);\n      }(t, r, e);\n    }, i.allocUnsafe = function (t) {\n      return u(t);\n    }, i.allocUnsafeSlow = function (t) {\n      return u(t);\n    }, i.isBuffer = function (t) {\n      return null != t && !0 === t._isBuffer && t !== i.prototype;\n    }, i.compare = function (t, r) {\n      if (R(t, Uint8Array) && (t = i.from(t, t.offset, t.byteLength)), R(r, Uint8Array) && (r = i.from(r, r.offset, r.byteLength)), !i.isBuffer(t) || !i.isBuffer(r)) throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n      if (t === r) return 0;\n      for (var e = t.length, n = r.length, o = 0, f = Math.min(e, n); o < f; ++o) if (t[o] !== r[o]) {\n        e = t[o], n = r[o];\n        break;\n      }\n      return e < n ? -1 : n < e ? 1 : 0;\n    }, i.isEncoding = function (t) {\n      switch (String(t).toLowerCase()) {\n        case \"hex\":\n        case \"utf8\":\n        case \"utf-8\":\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n        case \"base64\":\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n          return !0;\n        default:\n          return !1;\n      }\n    }, i.concat = function (t, r) {\n      if (!Array.isArray(t)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n      if (0 === t.length) return i.alloc(0);\n      var e;\n      if (void 0 === r) for (r = 0, e = 0; e < t.length; ++e) r += t[e].length;\n      var n = i.allocUnsafe(r),\n        o = 0;\n      for (e = 0; e < t.length; ++e) {\n        var f = t[e];\n        if (R(f, Uint8Array) && (f = i.from(f)), !i.isBuffer(f)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n        f.copy(n, o), o += f.length;\n      }\n      return n;\n    }, i.byteLength = c, i.prototype._isBuffer = !0, i.prototype.swap16 = function () {\n      var t = this.length;\n      if (t % 2 != 0) throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n      for (var r = 0; r < t; r += 2) p(this, r, r + 1);\n      return this;\n    }, i.prototype.swap32 = function () {\n      var t = this.length;\n      if (t % 4 != 0) throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n      for (var r = 0; r < t; r += 4) p(this, r, r + 3), p(this, r + 1, r + 2);\n      return this;\n    }, i.prototype.swap64 = function () {\n      var t = this.length;\n      if (t % 8 != 0) throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n      for (var r = 0; r < t; r += 8) p(this, r, r + 7), p(this, r + 1, r + 6), p(this, r + 2, r + 5), p(this, r + 3, r + 4);\n      return this;\n    }, i.prototype.toLocaleString = i.prototype.toString = function () {\n      var t = this.length;\n      return 0 === t ? \"\" : 0 === arguments.length ? A(this, 0, t) : l.apply(this, arguments);\n    }, i.prototype.equals = function (t) {\n      if (!i.isBuffer(t)) throw new TypeError(\"Argument must be a Buffer\");\n      return this === t || 0 === i.compare(this, t);\n    }, i.prototype.inspect = function () {\n      var t = \"\",\n        e = r.INSPECT_MAX_BYTES;\n      return t = this.toString(\"hex\", 0, e).replace(/(.{2})/g, \"$1 \").trim(), this.length > e && (t += \" ... \"), \"<Buffer \" + t + \">\";\n    }, e && (i.prototype[e] = i.prototype.inspect), i.prototype.compare = function (t, r, e, n, o) {\n      if (R(t, Uint8Array) && (t = i.from(t, t.offset, t.byteLength)), !i.isBuffer(t)) throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. Received type ' + typeof t);\n      if (void 0 === r && (r = 0), void 0 === e && (e = t ? t.length : 0), void 0 === n && (n = 0), void 0 === o && (o = this.length), r < 0 || e > t.length || n < 0 || o > this.length) throw new RangeError(\"out of range index\");\n      if (n >= o && r >= e) return 0;\n      if (n >= o) return -1;\n      if (r >= e) return 1;\n      if (this === t) return 0;\n      for (var f = (o >>>= 0) - (n >>>= 0), u = (e >>>= 0) - (r >>>= 0), a = Math.min(f, u), s = this.slice(n, o), h = t.slice(r, e), c = 0; c < a; ++c) if (s[c] !== h[c]) {\n        f = s[c], u = h[c];\n        break;\n      }\n      return f < u ? -1 : u < f ? 1 : 0;\n    }, i.prototype.includes = function (t, r, e) {\n      return -1 !== this.indexOf(t, r, e);\n    }, i.prototype.indexOf = function (t, r, e) {\n      return d(this, t, r, e, !0);\n    }, i.prototype.lastIndexOf = function (t, r, e) {\n      return d(this, t, r, e, !1);\n    }, i.prototype.write = function (t, r, e, n) {\n      if (void 0 === r) n = \"utf8\", e = this.length, r = 0;else if (void 0 === e && \"string\" == typeof r) n = r, e = this.length, r = 0;else {\n        if (!isFinite(r)) throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");\n        r >>>= 0, isFinite(e) ? (e >>>= 0, void 0 === n && (n = \"utf8\")) : (n = e, e = void 0);\n      }\n      var i = this.length - r;\n      if ((void 0 === e || e > i) && (e = i), t.length > 0 && (e < 0 || r < 0) || r > this.length) throw new RangeError(\"Attempt to write outside buffer bounds\");\n      n || (n = \"utf8\");\n      for (var o = !1;;) switch (n) {\n        case \"hex\":\n          return y(this, t, r, e);\n        case \"utf8\":\n        case \"utf-8\":\n          return v(this, t, r, e);\n        case \"ascii\":\n          return w(this, t, r, e);\n        case \"latin1\":\n        case \"binary\":\n          return b(this, t, r, e);\n        case \"base64\":\n          return m(this, t, r, e);\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n          return E(this, t, r, e);\n        default:\n          if (o) throw new TypeError(\"Unknown encoding: \" + n);\n          n = (\"\" + n).toLowerCase(), o = !0;\n      }\n    }, i.prototype.toJSON = function () {\n      return {\n        type: \"Buffer\",\n        data: Array.prototype.slice.call(this._arr || this, 0)\n      };\n    }, i.prototype.slice = function (t, r) {\n      var e = this.length;\n      (t = ~~t) < 0 ? (t += e) < 0 && (t = 0) : t > e && (t = e), (r = void 0 === r ? e : ~~r) < 0 ? (r += e) < 0 && (r = 0) : r > e && (r = e), r < t && (r = t);\n      var n = this.subarray(t, r);\n      return Object.setPrototypeOf(n, i.prototype), n;\n    }, i.prototype.readUIntLE = function (t, r, e) {\n      t >>>= 0, r >>>= 0, e || x(t, r, this.length);\n      for (var n = this[t], i = 1, o = 0; ++o < r && (i *= 256);) n += this[t + o] * i;\n      return n;\n    }, i.prototype.readUIntBE = function (t, r, e) {\n      t >>>= 0, r >>>= 0, e || x(t, r, this.length);\n      for (var n = this[t + --r], i = 1; r > 0 && (i *= 256);) n += this[t + --r] * i;\n      return n;\n    }, i.prototype.readUInt8 = function (t, r) {\n      return t >>>= 0, r || x(t, 1, this.length), this[t];\n    }, i.prototype.readUInt16LE = function (t, r) {\n      return t >>>= 0, r || x(t, 2, this.length), this[t] | this[t + 1] << 8;\n    }, i.prototype.readUInt16BE = function (t, r) {\n      return t >>>= 0, r || x(t, 2, this.length), this[t] << 8 | this[t + 1];\n    }, i.prototype.readUInt32LE = function (t, r) {\n      return t >>>= 0, r || x(t, 4, this.length), (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + 16777216 * this[t + 3];\n    }, i.prototype.readUInt32BE = function (t, r) {\n      return t >>>= 0, r || x(t, 4, this.length), 16777216 * this[t] + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]);\n    }, i.prototype.readIntLE = function (t, r, e) {\n      t >>>= 0, r >>>= 0, e || x(t, r, this.length);\n      for (var n = this[t], i = 1, o = 0; ++o < r && (i *= 256);) n += this[t + o] * i;\n      return n >= (i *= 128) && (n -= Math.pow(2, 8 * r)), n;\n    }, i.prototype.readIntBE = function (t, r, e) {\n      t >>>= 0, r >>>= 0, e || x(t, r, this.length);\n      for (var n = r, i = 1, o = this[t + --n]; n > 0 && (i *= 256);) o += this[t + --n] * i;\n      return o >= (i *= 128) && (o -= Math.pow(2, 8 * r)), o;\n    }, i.prototype.readInt8 = function (t, r) {\n      return t >>>= 0, r || x(t, 1, this.length), 128 & this[t] ? -1 * (255 - this[t] + 1) : this[t];\n    }, i.prototype.readInt16LE = function (t, r) {\n      t >>>= 0, r || x(t, 2, this.length);\n      var e = this[t] | this[t + 1] << 8;\n      return 32768 & e ? 4294901760 | e : e;\n    }, i.prototype.readInt16BE = function (t, r) {\n      t >>>= 0, r || x(t, 2, this.length);\n      var e = this[t + 1] | this[t] << 8;\n      return 32768 & e ? 4294901760 | e : e;\n    }, i.prototype.readInt32LE = function (t, r) {\n      return t >>>= 0, r || x(t, 4, this.length), this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24;\n    }, i.prototype.readInt32BE = function (t, r) {\n      return t >>>= 0, r || x(t, 4, this.length), this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3];\n    }, i.prototype.readFloatLE = function (t, r) {\n      return t >>>= 0, r || x(t, 4, this.length), $(this, t, !0, 23, 4);\n    }, i.prototype.readFloatBE = function (t, r) {\n      return t >>>= 0, r || x(t, 4, this.length), $(this, t, !1, 23, 4);\n    }, i.prototype.readDoubleLE = function (t, r) {\n      return t >>>= 0, r || x(t, 8, this.length), $(this, t, !0, 52, 8);\n    }, i.prototype.readDoubleBE = function (t, r) {\n      return t >>>= 0, r || x(t, 8, this.length), $(this, t, !1, 52, 8);\n    }, i.prototype.writeUIntLE = function (t, r, e, n) {\n      t = +t, r >>>= 0, e >>>= 0, n || k(this, t, r, e, Math.pow(2, 8 * e) - 1, 0);\n      var i = 1,\n        o = 0;\n      for (this[r] = 255 & t; ++o < e && (i *= 256);) this[r + o] = t / i & 255;\n      return r + e;\n    }, i.prototype.writeUIntBE = function (t, r, e, n) {\n      t = +t, r >>>= 0, e >>>= 0, n || k(this, t, r, e, Math.pow(2, 8 * e) - 1, 0);\n      var i = e - 1,\n        o = 1;\n      for (this[r + i] = 255 & t; --i >= 0 && (o *= 256);) this[r + i] = t / o & 255;\n      return r + e;\n    }, i.prototype.writeUInt8 = function (t, r, e) {\n      return t = +t, r >>>= 0, e || k(this, t, r, 1, 255, 0), this[r] = 255 & t, r + 1;\n    }, i.prototype.writeUInt16LE = function (t, r, e) {\n      return t = +t, r >>>= 0, e || k(this, t, r, 2, 65535, 0), this[r] = 255 & t, this[r + 1] = t >>> 8, r + 2;\n    }, i.prototype.writeUInt16BE = function (t, r, e) {\n      return t = +t, r >>>= 0, e || k(this, t, r, 2, 65535, 0), this[r] = t >>> 8, this[r + 1] = 255 & t, r + 2;\n    }, i.prototype.writeUInt32LE = function (t, r, e) {\n      return t = +t, r >>>= 0, e || k(this, t, r, 4, 4294967295, 0), this[r + 3] = t >>> 24, this[r + 2] = t >>> 16, this[r + 1] = t >>> 8, this[r] = 255 & t, r + 4;\n    }, i.prototype.writeUInt32BE = function (t, r, e) {\n      return t = +t, r >>>= 0, e || k(this, t, r, 4, 4294967295, 0), this[r] = t >>> 24, this[r + 1] = t >>> 16, this[r + 2] = t >>> 8, this[r + 3] = 255 & t, r + 4;\n    }, i.prototype.writeIntLE = function (t, r, e, n) {\n      if (t = +t, r >>>= 0, !n) {\n        var i = Math.pow(2, 8 * e - 1);\n        k(this, t, r, e, i - 1, -i);\n      }\n      var o = 0,\n        f = 1,\n        u = 0;\n      for (this[r] = 255 & t; ++o < e && (f *= 256);) t < 0 && 0 === u && 0 !== this[r + o - 1] && (u = 1), this[r + o] = (t / f >> 0) - u & 255;\n      return r + e;\n    }, i.prototype.writeIntBE = function (t, r, e, n) {\n      if (t = +t, r >>>= 0, !n) {\n        var i = Math.pow(2, 8 * e - 1);\n        k(this, t, r, e, i - 1, -i);\n      }\n      var o = e - 1,\n        f = 1,\n        u = 0;\n      for (this[r + o] = 255 & t; --o >= 0 && (f *= 256);) t < 0 && 0 === u && 0 !== this[r + o + 1] && (u = 1), this[r + o] = (t / f >> 0) - u & 255;\n      return r + e;\n    }, i.prototype.writeInt8 = function (t, r, e) {\n      return t = +t, r >>>= 0, e || k(this, t, r, 1, 127, -128), t < 0 && (t = 255 + t + 1), this[r] = 255 & t, r + 1;\n    }, i.prototype.writeInt16LE = function (t, r, e) {\n      return t = +t, r >>>= 0, e || k(this, t, r, 2, 32767, -32768), this[r] = 255 & t, this[r + 1] = t >>> 8, r + 2;\n    }, i.prototype.writeInt16BE = function (t, r, e) {\n      return t = +t, r >>>= 0, e || k(this, t, r, 2, 32767, -32768), this[r] = t >>> 8, this[r + 1] = 255 & t, r + 2;\n    }, i.prototype.writeInt32LE = function (t, r, e) {\n      return t = +t, r >>>= 0, e || k(this, t, r, 4, 2147483647, -2147483648), this[r] = 255 & t, this[r + 1] = t >>> 8, this[r + 2] = t >>> 16, this[r + 3] = t >>> 24, r + 4;\n    }, i.prototype.writeInt32BE = function (t, r, e) {\n      return t = +t, r >>>= 0, e || k(this, t, r, 4, 2147483647, -2147483648), t < 0 && (t = 4294967295 + t + 1), this[r] = t >>> 24, this[r + 1] = t >>> 16, this[r + 2] = t >>> 8, this[r + 3] = 255 & t, r + 4;\n    }, i.prototype.writeFloatLE = function (t, r, e) {\n      return C(this, t, r, !0, e);\n    }, i.prototype.writeFloatBE = function (t, r, e) {\n      return C(this, t, r, !1, e);\n    }, i.prototype.writeDoubleLE = function (t, r, e) {\n      return M(this, t, r, !0, e);\n    }, i.prototype.writeDoubleBE = function (t, r, e) {\n      return M(this, t, r, !1, e);\n    }, i.prototype.copy = function (t, r, e, n) {\n      if (!i.isBuffer(t)) throw new TypeError(\"argument should be a Buffer\");\n      if (e || (e = 0), n || 0 === n || (n = this.length), r >= t.length && (r = t.length), r || (r = 0), n > 0 && n < e && (n = e), n === e) return 0;\n      if (0 === t.length || 0 === this.length) return 0;\n      if (r < 0) throw new RangeError(\"targetStart out of bounds\");\n      if (e < 0 || e >= this.length) throw new RangeError(\"Index out of range\");\n      if (n < 0) throw new RangeError(\"sourceEnd out of bounds\");\n      n > this.length && (n = this.length), t.length - r < n - e && (n = t.length - r + e);\n      var o = n - e;\n      if (this === t && \"function\" == typeof Uint8Array.prototype.copyWithin) this.copyWithin(r, e, n);else if (this === t && e < r && r < n) for (var f = o - 1; f >= 0; --f) t[f + r] = this[f + e];else Uint8Array.prototype.set.call(t, this.subarray(e, n), r);\n      return o;\n    }, i.prototype.fill = function (t, r, e, n) {\n      if (\"string\" == typeof t) {\n        if (\"string\" == typeof r ? (n = r, r = 0, e = this.length) : \"string\" == typeof e && (n = e, e = this.length), void 0 !== n && \"string\" != typeof n) throw new TypeError(\"encoding must be a string\");\n        if (\"string\" == typeof n && !i.isEncoding(n)) throw new TypeError(\"Unknown encoding: \" + n);\n        if (1 === t.length) {\n          var o = t.charCodeAt(0);\n          (\"utf8\" === n && o < 128 || \"latin1\" === n) && (t = o);\n        }\n      } else \"number\" == typeof t ? t &= 255 : \"boolean\" == typeof t && (t = Number(t));\n      if (r < 0 || this.length < r || this.length < e) throw new RangeError(\"Out of range index\");\n      if (e <= r) return this;\n      var f;\n      if (r >>>= 0, e = void 0 === e ? this.length : e >>> 0, t || (t = 0), \"number\" == typeof t) for (f = r; f < e; ++f) this[f] = t;else {\n        var u = i.isBuffer(t) ? t : i.from(t, n),\n          a = u.length;\n        if (0 === a) throw new TypeError('The value \"' + t + '\" is invalid for argument \"value\"');\n        for (f = 0; f < e - r; ++f) this[f + r] = u[f % a];\n      }\n      return this;\n    };\n    var T = /[^+/0-9A-Za-z-_]/g;\n    function L(t, r) {\n      var e;\n      r = r || Infinity;\n      for (var n = t.length, i = null, o = [], f = 0; f < n; ++f) {\n        if ((e = t.charCodeAt(f)) > 55295 && e < 57344) {\n          if (!i) {\n            if (e > 56319) {\n              (r -= 3) > -1 && o.push(239, 191, 189);\n              continue;\n            }\n            if (f + 1 === n) {\n              (r -= 3) > -1 && o.push(239, 191, 189);\n              continue;\n            }\n            i = e;\n            continue;\n          }\n          if (e < 56320) {\n            (r -= 3) > -1 && o.push(239, 191, 189), i = e;\n            continue;\n          }\n          e = 65536 + (i - 55296 << 10 | e - 56320);\n        } else i && (r -= 3) > -1 && o.push(239, 191, 189);\n        if (i = null, e < 128) {\n          if ((r -= 1) < 0) break;\n          o.push(e);\n        } else if (e < 2048) {\n          if ((r -= 2) < 0) break;\n          o.push(e >> 6 | 192, 63 & e | 128);\n        } else if (e < 65536) {\n          if ((r -= 3) < 0) break;\n          o.push(e >> 12 | 224, e >> 6 & 63 | 128, 63 & e | 128);\n        } else {\n          if (!(e < 1114112)) throw new Error(\"Invalid code point\");\n          if ((r -= 4) < 0) break;\n          o.push(e >> 18 | 240, e >> 12 & 63 | 128, e >> 6 & 63 | 128, 63 & e | 128);\n        }\n      }\n      return o;\n    }\n    function P(t) {\n      return G(function (t) {\n        if ((t = (t = t.split(\"=\")[0]).trim().replace(T, \"\")).length < 2) return \"\";\n        for (; t.length % 4 != 0;) t += \"=\";\n        return t;\n      }(t));\n    }\n    function z(t, r, e, n) {\n      for (var i = 0; i < n && !(i + e >= r.length || i >= t.length); ++i) r[i + e] = t[i];\n      return i;\n    }\n    function R(t, r) {\n      return t instanceof r || null != t && null != t.constructor && null != t.constructor.name && t.constructor.name === r.name;\n    }\n    function N(t) {\n      return t != t;\n    }\n    var q = function () {\n      for (var t = new Array(256), r = 0; r < 16; ++r) for (var e = 16 * r, n = 0; n < 16; ++n) t[e + n] = \"0123456789abcdef\"[r] + \"0123456789abcdef\"[n];\n      return t;\n    }();\n  }),\n  et = l(function (t, r) {\n    var e = rt.Buffer;\n    function n(t, r) {\n      for (var e in t) r[e] = t[e];\n    }\n    function i(t, r, n) {\n      return e(t, r, n);\n    }\n    e.from && e.alloc && e.allocUnsafe && e.allocUnsafeSlow ? t.exports = rt : (n(rt, r), r.Buffer = i), i.prototype = Object.create(e.prototype), n(e, i), i.from = function (t, r, n) {\n      if (\"number\" == typeof t) throw new TypeError(\"Argument must not be a number\");\n      return e(t, r, n);\n    }, i.alloc = function (t, r, n) {\n      if (\"number\" != typeof t) throw new TypeError(\"Argument must be a number\");\n      var i = e(t);\n      return void 0 !== r ? \"string\" == typeof n ? i.fill(r, n) : i.fill(r) : i.fill(0), i;\n    }, i.allocUnsafe = function (t) {\n      if (\"number\" != typeof t) throw new TypeError(\"Argument must be a number\");\n      return e(t);\n    }, i.allocUnsafeSlow = function (t) {\n      if (\"number\" != typeof t) throw new TypeError(\"Argument must be a number\");\n      return rt.SlowBuffer(t);\n    };\n  }),\n  nt = et.Buffer,\n  it = function (t) {\n    if (t.length >= 255) throw new TypeError(\"Alphabet too long\");\n    for (var r = new Uint8Array(256), e = 0; e < r.length; e++) r[e] = 255;\n    for (var n = 0; n < t.length; n++) {\n      var i = t.charAt(n),\n        o = i.charCodeAt(0);\n      if (255 !== r[o]) throw new TypeError(i + \" is ambiguous\");\n      r[o] = n;\n    }\n    var f = t.length,\n      u = t.charAt(0),\n      a = Math.log(f) / Math.log(256),\n      s = Math.log(256) / Math.log(f);\n    function h(t) {\n      if (\"string\" != typeof t) throw new TypeError(\"Expected String\");\n      if (0 === t.length) return nt.alloc(0);\n      var e = 0;\n      if (\" \" !== t[e]) {\n        for (var n = 0, i = 0; t[e] === u;) n++, e++;\n        for (var o = (t.length - e) * a + 1 >>> 0, s = new Uint8Array(o); t[e];) {\n          var h = r[t.charCodeAt(e)];\n          if (255 === h) return;\n          for (var c = 0, l = o - 1; (0 !== h || c < i) && -1 !== l; l--, c++) s[l] = (h += f * s[l] >>> 0) % 256 >>> 0, h = h / 256 >>> 0;\n          if (0 !== h) throw new Error(\"Non-zero carry\");\n          i = c, e++;\n        }\n        if (\" \" !== t[e]) {\n          for (var p = o - i; p !== o && 0 === s[p];) p++;\n          var d = nt.allocUnsafe(n + (o - p));\n          d.fill(0, 0, n);\n          for (var g = n; p !== o;) d[g++] = s[p++];\n          return d;\n        }\n      }\n    }\n    return {\n      encode: function (r) {\n        if ((Array.isArray(r) || r instanceof Uint8Array) && (r = nt.from(r)), !nt.isBuffer(r)) throw new TypeError(\"Expected Buffer\");\n        if (0 === r.length) return \"\";\n        for (var e = 0, n = 0, i = 0, o = r.length; i !== o && 0 === r[i];) i++, e++;\n        for (var a = (o - i) * s + 1 >>> 0, h = new Uint8Array(a); i !== o;) {\n          for (var c = r[i], l = 0, p = a - 1; (0 !== c || l < n) && -1 !== p; p--, l++) h[p] = (c += 256 * h[p] >>> 0) % f >>> 0, c = c / f >>> 0;\n          if (0 !== c) throw new Error(\"Non-zero carry\");\n          n = l, i++;\n        }\n        for (var d = a - n; d !== a && 0 === h[d];) d++;\n        for (var g = u.repeat(e); d < a; ++d) g += t.charAt(h[d]);\n        return g;\n      },\n      decodeUnsafe: h,\n      decode: function (t) {\n        var r = h(t);\n        if (r) return r;\n        throw new Error(\"Non-base\" + f + \" character\");\n      }\n    };\n  },\n  ot = it(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"),\n  ft = l(function (t, r) {\n    var e = \"function\" == typeof Symbol && \"function\" == typeof Symbol.for ? Symbol.for(\"nodejs.util.inspect.custom\") : null;\n    function n(t) {\n      if (t > 2147483647) throw new RangeError('The value \"' + t + '\" is invalid for option \"size\"');\n      var r = new Uint8Array(t);\n      return Object.setPrototypeOf(r, i.prototype), r;\n    }\n    function i(t, r, e) {\n      if (\"number\" == typeof t) {\n        if (\"string\" == typeof r) throw new TypeError('The \"string\" argument must be of type string. Received type number');\n        return u(t);\n      }\n      return o(t, r, e);\n    }\n    function o(t, r, e) {\n      if (\"string\" == typeof t) return function (t, r) {\n        if (\"string\" == typeof r && \"\" !== r || (r = \"utf8\"), !i.isEncoding(r)) throw new TypeError(\"Unknown encoding: \" + r);\n        var e = 0 | c(t, r),\n          o = n(e),\n          f = o.write(t, r);\n        return f !== e && (o = o.slice(0, f)), o;\n      }(t, r);\n      if (ArrayBuffer.isView(t)) return a(t);\n      if (null == t) throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof t);\n      if (R(t, ArrayBuffer) || t && R(t.buffer, ArrayBuffer)) return s(t, r, e);\n      if (\"undefined\" != typeof SharedArrayBuffer && (R(t, SharedArrayBuffer) || t && R(t.buffer, SharedArrayBuffer))) return s(t, r, e);\n      if (\"number\" == typeof t) throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n      var o = t.valueOf && t.valueOf();\n      if (null != o && o !== t) return i.from(o, r, e);\n      var f = function (t) {\n        if (i.isBuffer(t)) {\n          var r = 0 | h(t.length),\n            e = n(r);\n          return 0 === e.length || t.copy(e, 0, 0, r), e;\n        }\n        return void 0 !== t.length ? \"number\" != typeof t.length || N(t.length) ? n(0) : a(t) : \"Buffer\" === t.type && Array.isArray(t.data) ? a(t.data) : void 0;\n      }(t);\n      if (f) return f;\n      if (\"undefined\" != typeof Symbol && null != Symbol.toPrimitive && \"function\" == typeof t[Symbol.toPrimitive]) return i.from(t[Symbol.toPrimitive](\"string\"), r, e);\n      throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof t);\n    }\n    function f(t) {\n      if (\"number\" != typeof t) throw new TypeError('\"size\" argument must be of type number');\n      if (t < 0) throw new RangeError('The value \"' + t + '\" is invalid for option \"size\"');\n    }\n    function u(t) {\n      return f(t), n(t < 0 ? 0 : 0 | h(t));\n    }\n    function a(t) {\n      for (var r = t.length < 0 ? 0 : 0 | h(t.length), e = n(r), i = 0; i < r; i += 1) e[i] = 255 & t[i];\n      return e;\n    }\n    function s(t, r, e) {\n      if (r < 0 || t.byteLength < r) throw new RangeError('\"offset\" is outside of buffer bounds');\n      if (t.byteLength < r + (e || 0)) throw new RangeError('\"length\" is outside of buffer bounds');\n      var n;\n      return n = void 0 === r && void 0 === e ? new Uint8Array(t) : void 0 === e ? new Uint8Array(t, r) : new Uint8Array(t, r, e), Object.setPrototypeOf(n, i.prototype), n;\n    }\n    function h(t) {\n      if (t >= 2147483647) throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\" + 2147483647..toString(16) + \" bytes\");\n      return 0 | t;\n    }\n    function c(t, r) {\n      if (i.isBuffer(t)) return t.length;\n      if (ArrayBuffer.isView(t) || R(t, ArrayBuffer)) return t.byteLength;\n      if (\"string\" != typeof t) throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof t);\n      var e = t.length,\n        n = arguments.length > 2 && !0 === arguments[2];\n      if (!n && 0 === e) return 0;\n      for (var o = !1;;) switch (r) {\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n          return e;\n        case \"utf8\":\n        case \"utf-8\":\n          return L(t).length;\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n          return 2 * e;\n        case \"hex\":\n          return e >>> 1;\n        case \"base64\":\n          return P(t).length;\n        default:\n          if (o) return n ? -1 : L(t).length;\n          r = (\"\" + r).toLowerCase(), o = !0;\n      }\n    }\n    function l(t, r, e) {\n      var n = !1;\n      if ((void 0 === r || r < 0) && (r = 0), r > this.length) return \"\";\n      if ((void 0 === e || e > this.length) && (e = this.length), e <= 0) return \"\";\n      if ((e >>>= 0) <= (r >>>= 0)) return \"\";\n      for (t || (t = \"utf8\");;) switch (t) {\n        case \"hex\":\n          return _(this, r, e);\n        case \"utf8\":\n        case \"utf-8\":\n          return A(this, r, e);\n        case \"ascii\":\n          return U(this, r, e);\n        case \"latin1\":\n        case \"binary\":\n          return I(this, r, e);\n        case \"base64\":\n          return B(this, r, e);\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n          return S(this, r, e);\n        default:\n          if (n) throw new TypeError(\"Unknown encoding: \" + t);\n          t = (t + \"\").toLowerCase(), n = !0;\n      }\n    }\n    function p(t, r, e) {\n      var n = t[r];\n      t[r] = t[e], t[e] = n;\n    }\n    function d(t, r, e, n, o) {\n      if (0 === t.length) return -1;\n      if (\"string\" == typeof e ? (n = e, e = 0) : e > 2147483647 ? e = 2147483647 : e < -2147483648 && (e = -2147483648), N(e = +e) && (e = o ? 0 : t.length - 1), e < 0 && (e = t.length + e), e >= t.length) {\n        if (o) return -1;\n        e = t.length - 1;\n      } else if (e < 0) {\n        if (!o) return -1;\n        e = 0;\n      }\n      if (\"string\" == typeof r && (r = i.from(r, n)), i.isBuffer(r)) return 0 === r.length ? -1 : g(t, r, e, n, o);\n      if (\"number\" == typeof r) return r &= 255, \"function\" == typeof Uint8Array.prototype.indexOf ? o ? Uint8Array.prototype.indexOf.call(t, r, e) : Uint8Array.prototype.lastIndexOf.call(t, r, e) : g(t, [r], e, n, o);\n      throw new TypeError(\"val must be string, number or Buffer\");\n    }\n    function g(t, r, e, n, i) {\n      var o,\n        f = 1,\n        u = t.length,\n        a = r.length;\n      if (void 0 !== n && (\"ucs2\" === (n = String(n).toLowerCase()) || \"ucs-2\" === n || \"utf16le\" === n || \"utf-16le\" === n)) {\n        if (t.length < 2 || r.length < 2) return -1;\n        f = 2, u /= 2, a /= 2, e /= 2;\n      }\n      function s(t, r) {\n        return 1 === f ? t[r] : t.readUInt16BE(r * f);\n      }\n      if (i) {\n        var h = -1;\n        for (o = e; o < u; o++) if (s(t, o) === s(r, -1 === h ? 0 : o - h)) {\n          if (-1 === h && (h = o), o - h + 1 === a) return h * f;\n        } else -1 !== h && (o -= o - h), h = -1;\n      } else for (e + a > u && (e = u - a), o = e; o >= 0; o--) {\n        for (var c = !0, l = 0; l < a; l++) if (s(t, o + l) !== s(r, l)) {\n          c = !1;\n          break;\n        }\n        if (c) return o;\n      }\n      return -1;\n    }\n    function y(t, r, e, n) {\n      e = Number(e) || 0;\n      var i = t.length - e;\n      n ? (n = Number(n)) > i && (n = i) : n = i;\n      var o = r.length;\n      n > o / 2 && (n = o / 2);\n      for (var f = 0; f < n; ++f) {\n        var u = parseInt(r.substr(2 * f, 2), 16);\n        if (N(u)) return f;\n        t[e + f] = u;\n      }\n      return f;\n    }\n    function v(t, r, e, n) {\n      return z(L(r, t.length - e), t, e, n);\n    }\n    function w(t, r, e, n) {\n      return z(function (t) {\n        for (var r = [], e = 0; e < t.length; ++e) r.push(255 & t.charCodeAt(e));\n        return r;\n      }(r), t, e, n);\n    }\n    function b(t, r, e, n) {\n      return w(t, r, e, n);\n    }\n    function m(t, r, e, n) {\n      return z(P(r), t, e, n);\n    }\n    function E(t, r, e, n) {\n      return z(function (t, r) {\n        for (var e, n, i = [], o = 0; o < t.length && !((r -= 2) < 0); ++o) n = (e = t.charCodeAt(o)) >> 8, i.push(e % 256), i.push(n);\n        return i;\n      }(r, t.length - e), t, e, n);\n    }\n    function B(t, r, e) {\n      return Q(0 === r && e === t.length ? t : t.slice(r, e));\n    }\n    function A(t, r, e) {\n      e = Math.min(t.length, e);\n      for (var n = [], i = r; i < e;) {\n        var o,\n          f,\n          u,\n          a,\n          s = t[i],\n          h = null,\n          c = s > 239 ? 4 : s > 223 ? 3 : s > 191 ? 2 : 1;\n        if (i + c <= e) switch (c) {\n          case 1:\n            s < 128 && (h = s);\n            break;\n          case 2:\n            128 == (192 & (o = t[i + 1])) && (a = (31 & s) << 6 | 63 & o) > 127 && (h = a);\n            break;\n          case 3:\n            f = t[i + 2], 128 == (192 & (o = t[i + 1])) && 128 == (192 & f) && (a = (15 & s) << 12 | (63 & o) << 6 | 63 & f) > 2047 && (a < 55296 || a > 57343) && (h = a);\n            break;\n          case 4:\n            f = t[i + 2], u = t[i + 3], 128 == (192 & (o = t[i + 1])) && 128 == (192 & f) && 128 == (192 & u) && (a = (15 & s) << 18 | (63 & o) << 12 | (63 & f) << 6 | 63 & u) > 65535 && a < 1114112 && (h = a);\n        }\n        null === h ? (h = 65533, c = 1) : h > 65535 && (n.push((h -= 65536) >>> 10 & 1023 | 55296), h = 56320 | 1023 & h), n.push(h), i += c;\n      }\n      return function (t) {\n        var r = t.length;\n        if (r <= 4096) return String.fromCharCode.apply(String, t);\n        for (var e = \"\", n = 0; n < r;) e += String.fromCharCode.apply(String, t.slice(n, n += 4096));\n        return e;\n      }(n);\n    }\n    function U(t, r, e) {\n      var n = \"\";\n      e = Math.min(t.length, e);\n      for (var i = r; i < e; ++i) n += String.fromCharCode(127 & t[i]);\n      return n;\n    }\n    function I(t, r, e) {\n      var n = \"\";\n      e = Math.min(t.length, e);\n      for (var i = r; i < e; ++i) n += String.fromCharCode(t[i]);\n      return n;\n    }\n    function _(t, r, e) {\n      var n = t.length;\n      (!r || r < 0) && (r = 0), (!e || e < 0 || e > n) && (e = n);\n      for (var i = \"\", o = r; o < e; ++o) i += q[t[o]];\n      return i;\n    }\n    function S(t, r, e) {\n      for (var n = t.slice(r, e), i = \"\", o = 0; o < n.length; o += 2) i += String.fromCharCode(n[o] + 256 * n[o + 1]);\n      return i;\n    }\n    function x(t, r, e) {\n      if (t % 1 != 0 || t < 0) throw new RangeError(\"offset is not uint\");\n      if (t + r > e) throw new RangeError(\"Trying to access beyond buffer length\");\n    }\n    function k(t, r, e, n, o, f) {\n      if (!i.isBuffer(t)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n      if (r > o || r < f) throw new RangeError('\"value\" argument is out of bounds');\n      if (e + n > t.length) throw new RangeError(\"Index out of range\");\n    }\n    function O(t, r, e, n, i, o) {\n      if (e + n > t.length) throw new RangeError(\"Index out of range\");\n      if (e < 0) throw new RangeError(\"Index out of range\");\n    }\n    function C(t, r, e, n, i) {\n      return r = +r, e >>>= 0, i || O(t, 0, e, 4), tt(t, r, e, n, 23, 4), e + 4;\n    }\n    function M(t, r, e, n, i) {\n      return r = +r, e >>>= 0, i || O(t, 0, e, 8), tt(t, r, e, n, 52, 8), e + 8;\n    }\n    r.Buffer = i, r.SlowBuffer = function (t) {\n      return +t != t && (t = 0), i.alloc(+t);\n    }, r.INSPECT_MAX_BYTES = 50, r.kMaxLength = 2147483647, (i.TYPED_ARRAY_SUPPORT = function () {\n      try {\n        var t = new Uint8Array(1),\n          r = {\n            foo: function () {\n              return 42;\n            }\n          };\n        return Object.setPrototypeOf(r, Uint8Array.prototype), Object.setPrototypeOf(t, r), 42 === t.foo();\n      } catch (t) {\n        return !1;\n      }\n    }()) || \"undefined\" == typeof console || \"function\" != typeof console.error || console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\"), Object.defineProperty(i.prototype, \"parent\", {\n      enumerable: !0,\n      get: function () {\n        if (i.isBuffer(this)) return this.buffer;\n      }\n    }), Object.defineProperty(i.prototype, \"offset\", {\n      enumerable: !0,\n      get: function () {\n        if (i.isBuffer(this)) return this.byteOffset;\n      }\n    }), i.poolSize = 8192, i.from = function (t, r, e) {\n      return o(t, r, e);\n    }, Object.setPrototypeOf(i.prototype, Uint8Array.prototype), Object.setPrototypeOf(i, Uint8Array), i.alloc = function (t, r, e) {\n      return function (t, r, e) {\n        return f(t), t <= 0 ? n(t) : void 0 !== r ? \"string\" == typeof e ? n(t).fill(r, e) : n(t).fill(r) : n(t);\n      }(t, r, e);\n    }, i.allocUnsafe = function (t) {\n      return u(t);\n    }, i.allocUnsafeSlow = function (t) {\n      return u(t);\n    }, i.isBuffer = function (t) {\n      return null != t && !0 === t._isBuffer && t !== i.prototype;\n    }, i.compare = function (t, r) {\n      if (R(t, Uint8Array) && (t = i.from(t, t.offset, t.byteLength)), R(r, Uint8Array) && (r = i.from(r, r.offset, r.byteLength)), !i.isBuffer(t) || !i.isBuffer(r)) throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n      if (t === r) return 0;\n      for (var e = t.length, n = r.length, o = 0, f = Math.min(e, n); o < f; ++o) if (t[o] !== r[o]) {\n        e = t[o], n = r[o];\n        break;\n      }\n      return e < n ? -1 : n < e ? 1 : 0;\n    }, i.isEncoding = function (t) {\n      switch (String(t).toLowerCase()) {\n        case \"hex\":\n        case \"utf8\":\n        case \"utf-8\":\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n        case \"base64\":\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n          return !0;\n        default:\n          return !1;\n      }\n    }, i.concat = function (t, r) {\n      if (!Array.isArray(t)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n      if (0 === t.length) return i.alloc(0);\n      var e;\n      if (void 0 === r) for (r = 0, e = 0; e < t.length; ++e) r += t[e].length;\n      var n = i.allocUnsafe(r),\n        o = 0;\n      for (e = 0; e < t.length; ++e) {\n        var f = t[e];\n        if (R(f, Uint8Array) && (f = i.from(f)), !i.isBuffer(f)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n        f.copy(n, o), o += f.length;\n      }\n      return n;\n    }, i.byteLength = c, i.prototype._isBuffer = !0, i.prototype.swap16 = function () {\n      var t = this.length;\n      if (t % 2 != 0) throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n      for (var r = 0; r < t; r += 2) p(this, r, r + 1);\n      return this;\n    }, i.prototype.swap32 = function () {\n      var t = this.length;\n      if (t % 4 != 0) throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n      for (var r = 0; r < t; r += 4) p(this, r, r + 3), p(this, r + 1, r + 2);\n      return this;\n    }, i.prototype.swap64 = function () {\n      var t = this.length;\n      if (t % 8 != 0) throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n      for (var r = 0; r < t; r += 8) p(this, r, r + 7), p(this, r + 1, r + 6), p(this, r + 2, r + 5), p(this, r + 3, r + 4);\n      return this;\n    }, i.prototype.toLocaleString = i.prototype.toString = function () {\n      var t = this.length;\n      return 0 === t ? \"\" : 0 === arguments.length ? A(this, 0, t) : l.apply(this, arguments);\n    }, i.prototype.equals = function (t) {\n      if (!i.isBuffer(t)) throw new TypeError(\"Argument must be a Buffer\");\n      return this === t || 0 === i.compare(this, t);\n    }, i.prototype.inspect = function () {\n      var t = \"\",\n        e = r.INSPECT_MAX_BYTES;\n      return t = this.toString(\"hex\", 0, e).replace(/(.{2})/g, \"$1 \").trim(), this.length > e && (t += \" ... \"), \"<Buffer \" + t + \">\";\n    }, e && (i.prototype[e] = i.prototype.inspect), i.prototype.compare = function (t, r, e, n, o) {\n      if (R(t, Uint8Array) && (t = i.from(t, t.offset, t.byteLength)), !i.isBuffer(t)) throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. Received type ' + typeof t);\n      if (void 0 === r && (r = 0), void 0 === e && (e = t ? t.length : 0), void 0 === n && (n = 0), void 0 === o && (o = this.length), r < 0 || e > t.length || n < 0 || o > this.length) throw new RangeError(\"out of range index\");\n      if (n >= o && r >= e) return 0;\n      if (n >= o) return -1;\n      if (r >= e) return 1;\n      if (this === t) return 0;\n      for (var f = (o >>>= 0) - (n >>>= 0), u = (e >>>= 0) - (r >>>= 0), a = Math.min(f, u), s = this.slice(n, o), h = t.slice(r, e), c = 0; c < a; ++c) if (s[c] !== h[c]) {\n        f = s[c], u = h[c];\n        break;\n      }\n      return f < u ? -1 : u < f ? 1 : 0;\n    }, i.prototype.includes = function (t, r, e) {\n      return -1 !== this.indexOf(t, r, e);\n    }, i.prototype.indexOf = function (t, r, e) {\n      return d(this, t, r, e, !0);\n    }, i.prototype.lastIndexOf = function (t, r, e) {\n      return d(this, t, r, e, !1);\n    }, i.prototype.write = function (t, r, e, n) {\n      if (void 0 === r) n = \"utf8\", e = this.length, r = 0;else if (void 0 === e && \"string\" == typeof r) n = r, e = this.length, r = 0;else {\n        if (!isFinite(r)) throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");\n        r >>>= 0, isFinite(e) ? (e >>>= 0, void 0 === n && (n = \"utf8\")) : (n = e, e = void 0);\n      }\n      var i = this.length - r;\n      if ((void 0 === e || e > i) && (e = i), t.length > 0 && (e < 0 || r < 0) || r > this.length) throw new RangeError(\"Attempt to write outside buffer bounds\");\n      n || (n = \"utf8\");\n      for (var o = !1;;) switch (n) {\n        case \"hex\":\n          return y(this, t, r, e);\n        case \"utf8\":\n        case \"utf-8\":\n          return v(this, t, r, e);\n        case \"ascii\":\n          return w(this, t, r, e);\n        case \"latin1\":\n        case \"binary\":\n          return b(this, t, r, e);\n        case \"base64\":\n          return m(this, t, r, e);\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n          return E(this, t, r, e);\n        default:\n          if (o) throw new TypeError(\"Unknown encoding: \" + n);\n          n = (\"\" + n).toLowerCase(), o = !0;\n      }\n    }, i.prototype.toJSON = function () {\n      return {\n        type: \"Buffer\",\n        data: Array.prototype.slice.call(this._arr || this, 0)\n      };\n    }, i.prototype.slice = function (t, r) {\n      var e = this.length;\n      (t = ~~t) < 0 ? (t += e) < 0 && (t = 0) : t > e && (t = e), (r = void 0 === r ? e : ~~r) < 0 ? (r += e) < 0 && (r = 0) : r > e && (r = e), r < t && (r = t);\n      var n = this.subarray(t, r);\n      return Object.setPrototypeOf(n, i.prototype), n;\n    }, i.prototype.readUIntLE = function (t, r, e) {\n      t >>>= 0, r >>>= 0, e || x(t, r, this.length);\n      for (var n = this[t], i = 1, o = 0; ++o < r && (i *= 256);) n += this[t + o] * i;\n      return n;\n    }, i.prototype.readUIntBE = function (t, r, e) {\n      t >>>= 0, r >>>= 0, e || x(t, r, this.length);\n      for (var n = this[t + --r], i = 1; r > 0 && (i *= 256);) n += this[t + --r] * i;\n      return n;\n    }, i.prototype.readUInt8 = function (t, r) {\n      return t >>>= 0, r || x(t, 1, this.length), this[t];\n    }, i.prototype.readUInt16LE = function (t, r) {\n      return t >>>= 0, r || x(t, 2, this.length), this[t] | this[t + 1] << 8;\n    }, i.prototype.readUInt16BE = function (t, r) {\n      return t >>>= 0, r || x(t, 2, this.length), this[t] << 8 | this[t + 1];\n    }, i.prototype.readUInt32LE = function (t, r) {\n      return t >>>= 0, r || x(t, 4, this.length), (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + 16777216 * this[t + 3];\n    }, i.prototype.readUInt32BE = function (t, r) {\n      return t >>>= 0, r || x(t, 4, this.length), 16777216 * this[t] + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]);\n    }, i.prototype.readIntLE = function (t, r, e) {\n      t >>>= 0, r >>>= 0, e || x(t, r, this.length);\n      for (var n = this[t], i = 1, o = 0; ++o < r && (i *= 256);) n += this[t + o] * i;\n      return n >= (i *= 128) && (n -= Math.pow(2, 8 * r)), n;\n    }, i.prototype.readIntBE = function (t, r, e) {\n      t >>>= 0, r >>>= 0, e || x(t, r, this.length);\n      for (var n = r, i = 1, o = this[t + --n]; n > 0 && (i *= 256);) o += this[t + --n] * i;\n      return o >= (i *= 128) && (o -= Math.pow(2, 8 * r)), o;\n    }, i.prototype.readInt8 = function (t, r) {\n      return t >>>= 0, r || x(t, 1, this.length), 128 & this[t] ? -1 * (255 - this[t] + 1) : this[t];\n    }, i.prototype.readInt16LE = function (t, r) {\n      t >>>= 0, r || x(t, 2, this.length);\n      var e = this[t] | this[t + 1] << 8;\n      return 32768 & e ? 4294901760 | e : e;\n    }, i.prototype.readInt16BE = function (t, r) {\n      t >>>= 0, r || x(t, 2, this.length);\n      var e = this[t + 1] | this[t] << 8;\n      return 32768 & e ? 4294901760 | e : e;\n    }, i.prototype.readInt32LE = function (t, r) {\n      return t >>>= 0, r || x(t, 4, this.length), this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24;\n    }, i.prototype.readInt32BE = function (t, r) {\n      return t >>>= 0, r || x(t, 4, this.length), this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3];\n    }, i.prototype.readFloatLE = function (t, r) {\n      return t >>>= 0, r || x(t, 4, this.length), $(this, t, !0, 23, 4);\n    }, i.prototype.readFloatBE = function (t, r) {\n      return t >>>= 0, r || x(t, 4, this.length), $(this, t, !1, 23, 4);\n    }, i.prototype.readDoubleLE = function (t, r) {\n      return t >>>= 0, r || x(t, 8, this.length), $(this, t, !0, 52, 8);\n    }, i.prototype.readDoubleBE = function (t, r) {\n      return t >>>= 0, r || x(t, 8, this.length), $(this, t, !1, 52, 8);\n    }, i.prototype.writeUIntLE = function (t, r, e, n) {\n      t = +t, r >>>= 0, e >>>= 0, n || k(this, t, r, e, Math.pow(2, 8 * e) - 1, 0);\n      var i = 1,\n        o = 0;\n      for (this[r] = 255 & t; ++o < e && (i *= 256);) this[r + o] = t / i & 255;\n      return r + e;\n    }, i.prototype.writeUIntBE = function (t, r, e, n) {\n      t = +t, r >>>= 0, e >>>= 0, n || k(this, t, r, e, Math.pow(2, 8 * e) - 1, 0);\n      var i = e - 1,\n        o = 1;\n      for (this[r + i] = 255 & t; --i >= 0 && (o *= 256);) this[r + i] = t / o & 255;\n      return r + e;\n    }, i.prototype.writeUInt8 = function (t, r, e) {\n      return t = +t, r >>>= 0, e || k(this, t, r, 1, 255, 0), this[r] = 255 & t, r + 1;\n    }, i.prototype.writeUInt16LE = function (t, r, e) {\n      return t = +t, r >>>= 0, e || k(this, t, r, 2, 65535, 0), this[r] = 255 & t, this[r + 1] = t >>> 8, r + 2;\n    }, i.prototype.writeUInt16BE = function (t, r, e) {\n      return t = +t, r >>>= 0, e || k(this, t, r, 2, 65535, 0), this[r] = t >>> 8, this[r + 1] = 255 & t, r + 2;\n    }, i.prototype.writeUInt32LE = function (t, r, e) {\n      return t = +t, r >>>= 0, e || k(this, t, r, 4, 4294967295, 0), this[r + 3] = t >>> 24, this[r + 2] = t >>> 16, this[r + 1] = t >>> 8, this[r] = 255 & t, r + 4;\n    }, i.prototype.writeUInt32BE = function (t, r, e) {\n      return t = +t, r >>>= 0, e || k(this, t, r, 4, 4294967295, 0), this[r] = t >>> 24, this[r + 1] = t >>> 16, this[r + 2] = t >>> 8, this[r + 3] = 255 & t, r + 4;\n    }, i.prototype.writeIntLE = function (t, r, e, n) {\n      if (t = +t, r >>>= 0, !n) {\n        var i = Math.pow(2, 8 * e - 1);\n        k(this, t, r, e, i - 1, -i);\n      }\n      var o = 0,\n        f = 1,\n        u = 0;\n      for (this[r] = 255 & t; ++o < e && (f *= 256);) t < 0 && 0 === u && 0 !== this[r + o - 1] && (u = 1), this[r + o] = (t / f >> 0) - u & 255;\n      return r + e;\n    }, i.prototype.writeIntBE = function (t, r, e, n) {\n      if (t = +t, r >>>= 0, !n) {\n        var i = Math.pow(2, 8 * e - 1);\n        k(this, t, r, e, i - 1, -i);\n      }\n      var o = e - 1,\n        f = 1,\n        u = 0;\n      for (this[r + o] = 255 & t; --o >= 0 && (f *= 256);) t < 0 && 0 === u && 0 !== this[r + o + 1] && (u = 1), this[r + o] = (t / f >> 0) - u & 255;\n      return r + e;\n    }, i.prototype.writeInt8 = function (t, r, e) {\n      return t = +t, r >>>= 0, e || k(this, t, r, 1, 127, -128), t < 0 && (t = 255 + t + 1), this[r] = 255 & t, r + 1;\n    }, i.prototype.writeInt16LE = function (t, r, e) {\n      return t = +t, r >>>= 0, e || k(this, t, r, 2, 32767, -32768), this[r] = 255 & t, this[r + 1] = t >>> 8, r + 2;\n    }, i.prototype.writeInt16BE = function (t, r, e) {\n      return t = +t, r >>>= 0, e || k(this, t, r, 2, 32767, -32768), this[r] = t >>> 8, this[r + 1] = 255 & t, r + 2;\n    }, i.prototype.writeInt32LE = function (t, r, e) {\n      return t = +t, r >>>= 0, e || k(this, t, r, 4, 2147483647, -2147483648), this[r] = 255 & t, this[r + 1] = t >>> 8, this[r + 2] = t >>> 16, this[r + 3] = t >>> 24, r + 4;\n    }, i.prototype.writeInt32BE = function (t, r, e) {\n      return t = +t, r >>>= 0, e || k(this, t, r, 4, 2147483647, -2147483648), t < 0 && (t = 4294967295 + t + 1), this[r] = t >>> 24, this[r + 1] = t >>> 16, this[r + 2] = t >>> 8, this[r + 3] = 255 & t, r + 4;\n    }, i.prototype.writeFloatLE = function (t, r, e) {\n      return C(this, t, r, !0, e);\n    }, i.prototype.writeFloatBE = function (t, r, e) {\n      return C(this, t, r, !1, e);\n    }, i.prototype.writeDoubleLE = function (t, r, e) {\n      return M(this, t, r, !0, e);\n    }, i.prototype.writeDoubleBE = function (t, r, e) {\n      return M(this, t, r, !1, e);\n    }, i.prototype.copy = function (t, r, e, n) {\n      if (!i.isBuffer(t)) throw new TypeError(\"argument should be a Buffer\");\n      if (e || (e = 0), n || 0 === n || (n = this.length), r >= t.length && (r = t.length), r || (r = 0), n > 0 && n < e && (n = e), n === e) return 0;\n      if (0 === t.length || 0 === this.length) return 0;\n      if (r < 0) throw new RangeError(\"targetStart out of bounds\");\n      if (e < 0 || e >= this.length) throw new RangeError(\"Index out of range\");\n      if (n < 0) throw new RangeError(\"sourceEnd out of bounds\");\n      n > this.length && (n = this.length), t.length - r < n - e && (n = t.length - r + e);\n      var o = n - e;\n      if (this === t && \"function\" == typeof Uint8Array.prototype.copyWithin) this.copyWithin(r, e, n);else if (this === t && e < r && r < n) for (var f = o - 1; f >= 0; --f) t[f + r] = this[f + e];else Uint8Array.prototype.set.call(t, this.subarray(e, n), r);\n      return o;\n    }, i.prototype.fill = function (t, r, e, n) {\n      if (\"string\" == typeof t) {\n        if (\"string\" == typeof r ? (n = r, r = 0, e = this.length) : \"string\" == typeof e && (n = e, e = this.length), void 0 !== n && \"string\" != typeof n) throw new TypeError(\"encoding must be a string\");\n        if (\"string\" == typeof n && !i.isEncoding(n)) throw new TypeError(\"Unknown encoding: \" + n);\n        if (1 === t.length) {\n          var o = t.charCodeAt(0);\n          (\"utf8\" === n && o < 128 || \"latin1\" === n) && (t = o);\n        }\n      } else \"number\" == typeof t ? t &= 255 : \"boolean\" == typeof t && (t = Number(t));\n      if (r < 0 || this.length < r || this.length < e) throw new RangeError(\"Out of range index\");\n      if (e <= r) return this;\n      var f;\n      if (r >>>= 0, e = void 0 === e ? this.length : e >>> 0, t || (t = 0), \"number\" == typeof t) for (f = r; f < e; ++f) this[f] = t;else {\n        var u = i.isBuffer(t) ? t : i.from(t, n),\n          a = u.length;\n        if (0 === a) throw new TypeError('The value \"' + t + '\" is invalid for argument \"value\"');\n        for (f = 0; f < e - r; ++f) this[f + r] = u[f % a];\n      }\n      return this;\n    };\n    var T = /[^+/0-9A-Za-z-_]/g;\n    function L(t, r) {\n      var e;\n      r = r || Infinity;\n      for (var n = t.length, i = null, o = [], f = 0; f < n; ++f) {\n        if ((e = t.charCodeAt(f)) > 55295 && e < 57344) {\n          if (!i) {\n            if (e > 56319) {\n              (r -= 3) > -1 && o.push(239, 191, 189);\n              continue;\n            }\n            if (f + 1 === n) {\n              (r -= 3) > -1 && o.push(239, 191, 189);\n              continue;\n            }\n            i = e;\n            continue;\n          }\n          if (e < 56320) {\n            (r -= 3) > -1 && o.push(239, 191, 189), i = e;\n            continue;\n          }\n          e = 65536 + (i - 55296 << 10 | e - 56320);\n        } else i && (r -= 3) > -1 && o.push(239, 191, 189);\n        if (i = null, e < 128) {\n          if ((r -= 1) < 0) break;\n          o.push(e);\n        } else if (e < 2048) {\n          if ((r -= 2) < 0) break;\n          o.push(e >> 6 | 192, 63 & e | 128);\n        } else if (e < 65536) {\n          if ((r -= 3) < 0) break;\n          o.push(e >> 12 | 224, e >> 6 & 63 | 128, 63 & e | 128);\n        } else {\n          if (!(e < 1114112)) throw new Error(\"Invalid code point\");\n          if ((r -= 4) < 0) break;\n          o.push(e >> 18 | 240, e >> 12 & 63 | 128, e >> 6 & 63 | 128, 63 & e | 128);\n        }\n      }\n      return o;\n    }\n    function P(t) {\n      return G(function (t) {\n        if ((t = (t = t.split(\"=\")[0]).trim().replace(T, \"\")).length < 2) return \"\";\n        for (; t.length % 4 != 0;) t += \"=\";\n        return t;\n      }(t));\n    }\n    function z(t, r, e, n) {\n      for (var i = 0; i < n && !(i + e >= r.length || i >= t.length); ++i) r[i + e] = t[i];\n      return i;\n    }\n    function R(t, r) {\n      return t instanceof r || null != t && null != t.constructor && null != t.constructor.name && t.constructor.name === r.name;\n    }\n    function N(t) {\n      return t != t;\n    }\n    var q = function () {\n      for (var t = new Array(256), r = 0; r < 16; ++r) for (var e = 16 * r, n = 0; n < 16; ++n) t[e + n] = \"0123456789abcdef\"[r] + \"0123456789abcdef\"[n];\n      return t;\n    }();\n  }),\n  ut = function (t, r) {\n    return function (e, n) {\n      var i = 2 * n,\n        o = 2 * r;\n      e[i] = t[o], e[i + 1] = t[o + 1];\n    };\n  },\n  at = l(function (t, r) {\n    Object.defineProperty(r, \"__esModule\", {\n      value: !0\n    }), r.default = void 0;\n    var e,\n      n = (e = ut) && e.__esModule ? e : {\n        default: e\n      };\n    r.default = function (t) {\n      for (var r = t.A, e = t.C, i = 0; i < 25; i += 5) {\n        for (var o = 0; o < 5; o++) (0, n.default)(r, i + o)(e, o);\n        for (var f = 0; f < 5; f++) {\n          var u = 2 * (i + f),\n            a = (f + 1) % 5 * 2,\n            s = (f + 2) % 5 * 2;\n          r[u] ^= ~e[a] & e[s], r[u + 1] ^= ~e[a + 1] & e[s + 1];\n        }\n      }\n    };\n  }),\n  st = l(function (t, r) {\n    Object.defineProperty(r, \"__esModule\", {\n      value: !0\n    }), r.default = void 0;\n    var e = new Uint32Array([0, 1, 0, 32898, 2147483648, 32906, 2147483648, 2147516416, 0, 32907, 0, 2147483649, 2147483648, 2147516545, 2147483648, 32777, 0, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 2147483648, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 0, 32778, 2147483648, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 0, 2147483649, 2147483648, 2147516424]);\n    r.default = e;\n  }),\n  ht = l(function (t, r) {\n    Object.defineProperty(r, \"__esModule\", {\n      value: !0\n    }), r.default = void 0;\n    var e,\n      n = (e = st) && e.__esModule ? e : {\n        default: e\n      };\n    r.default = function (t) {\n      var r = t.A,\n        e = 2 * t.roundIndex;\n      r[0] ^= n.default[e], r[1] ^= n.default[e + 1];\n    };\n  }),\n  ct = l(function (t, r) {\n    Object.defineProperty(r, \"__esModule\", {\n      value: !0\n    }), r.default = void 0, r.default = [10, 7, 11, 17, 18, 3, 5, 16, 8, 21, 24, 4, 15, 23, 19, 13, 12, 2, 20, 14, 22, 9, 6, 1];\n  }),\n  lt = l(function (t, r) {\n    Object.defineProperty(r, \"__esModule\", {\n      value: !0\n    }), r.default = void 0, r.default = [1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 2, 14, 27, 41, 56, 8, 25, 43, 62, 18, 39, 61, 20, 44];\n  }),\n  pt = l(function (t, r) {\n    Object.defineProperty(r, \"__esModule\", {\n      value: !0\n    }), r.default = void 0;\n    var e = o(ct),\n      n = o(lt),\n      i = o(ut);\n    function o(t) {\n      return t && t.__esModule ? t : {\n        default: t\n      };\n    }\n    r.default = function (t) {\n      var r = t.A,\n        o = t.C,\n        f = t.W;\n      (0, i.default)(r, 1)(f, 0);\n      for (var u = 0, a = 0, s = 0, h = 32, c = 0; c < 24; c++) {\n        var l = e.default[c],\n          p = n.default[c];\n        (0, i.default)(r, l)(o, 0), f[s = p < 32 ? 0 : 1] = (u = f[0]) << p | (a = f[1]) >>> (h = 32 - p), f[(s + 1) % 2] = a << p | u >>> h, (0, i.default)(f, 0)(r, l), (0, i.default)(o, 0)(f, 0);\n      }\n    };\n  }),\n  dt = l(function (t, r) {\n    Object.defineProperty(r, \"__esModule\", {\n      value: !0\n    }), r.default = void 0;\n    var e,\n      n = (e = ut) && e.__esModule ? e : {\n        default: e\n      };\n    r.default = function (t) {\n      for (var r = t.A, e = t.C, i = t.D, o = t.W, f = 0, u = 0, a = 0; a < 5; a++) {\n        var s = 2 * a,\n          h = 2 * (a + 5),\n          c = 2 * (a + 10),\n          l = 2 * (a + 15),\n          p = 2 * (a + 20);\n        e[s] = r[s] ^ r[h] ^ r[c] ^ r[l] ^ r[p], e[s + 1] = r[s + 1] ^ r[h + 1] ^ r[c + 1] ^ r[l + 1] ^ r[p + 1];\n      }\n      for (var d = 0; d < 5; d++) {\n        (0, n.default)(e, (d + 1) % 5)(o, 0), o[0] = (f = o[0]) << 1 | (u = o[1]) >>> 31, o[1] = u << 1 | f >>> 31, i[2 * d] = e[(d + 4) % 5 * 2] ^ o[0], i[2 * d + 1] = e[(d + 4) % 5 * 2 + 1] ^ o[1];\n        for (var g = 0; g < 25; g += 5) r[2 * (g + d)] ^= i[2 * d], r[2 * (g + d) + 1] ^= i[2 * d + 1];\n      }\n    };\n  }),\n  gt = l(function (t, r) {\n    Object.defineProperty(r, \"__esModule\", {\n      value: !0\n    }), r.default = void 0;\n    var e = f(at),\n      n = f(ht),\n      i = f(pt),\n      o = f(dt);\n    function f(t) {\n      return t && t.__esModule ? t : {\n        default: t\n      };\n    }\n    r.default = function () {\n      var t = new Uint32Array(10),\n        r = new Uint32Array(10),\n        f = new Uint32Array(2);\n      return function (u) {\n        for (var a = 0; a < 24; a++) (0, o.default)({\n          A: u,\n          C: t,\n          D: r,\n          W: f\n        }), (0, i.default)({\n          A: u,\n          C: t,\n          W: f\n        }), (0, e.default)({\n          A: u,\n          C: t\n        }), (0, n.default)({\n          A: u,\n          roundIndex: a\n        });\n        t.fill(0), r.fill(0), f.fill(0);\n      };\n    };\n  }),\n  yt = l(function (t, r) {\n    Object.defineProperty(r, \"__esModule\", {\n      value: !0\n    }), r.default = void 0;\n    var e,\n      n = (e = gt) && e.__esModule ? e : {\n        default: e\n      },\n      i = function (t, r) {\n        for (var e = 0; e < t.length; e += 8) {\n          var n = e / 4;\n          r[n] ^= t[e + 7] << 24 | t[e + 6] << 16 | t[e + 5] << 8 | t[e + 4], r[n + 1] ^= t[e + 3] << 24 | t[e + 2] << 16 | t[e + 1] << 8 | t[e];\n        }\n        return r;\n      },\n      o = function (t, r) {\n        for (var e = 0; e < r.length; e += 8) {\n          var n = e / 4;\n          r[e] = t[n + 1], r[e + 1] = t[n + 1] >>> 8, r[e + 2] = t[n + 1] >>> 16, r[e + 3] = t[n + 1] >>> 24, r[e + 4] = t[n], r[e + 5] = t[n] >>> 8, r[e + 6] = t[n] >>> 16, r[e + 7] = t[n] >>> 24;\n        }\n        return r;\n      };\n    r.default = function (t) {\n      var r = this,\n        e = t.capacity,\n        f = t.padding,\n        u = (0, n.default)(),\n        a = e / 8,\n        s = 200 - e / 4,\n        h = 0,\n        c = new Uint32Array(50),\n        l = ft.Buffer.allocUnsafe(s);\n      return this.absorb = function (t) {\n        for (var e = 0; e < t.length; e++) l[h] = t[e], (h += 1) >= s && (i(l, c), u(c), h = 0);\n        return r;\n      }, this.squeeze = function () {\n        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n          r = {\n            buffer: t.buffer || ft.Buffer.allocUnsafe(a),\n            padding: t.padding || f,\n            queue: ft.Buffer.allocUnsafe(l.length),\n            state: new Uint32Array(c.length)\n          };\n        l.copy(r.queue);\n        for (var e = 0; e < c.length; e++) r.state[e] = c[e];\n        r.queue.fill(0, h), r.queue[h] |= r.padding, r.queue[s - 1] |= 128, i(r.queue, r.state);\n        for (var n = 0; n < r.buffer.length; n += s) u(r.state), o(r.state, r.buffer.slice(n, n + s));\n        return r.buffer;\n      }, this.reset = function () {\n        return l.fill(0), c.fill(0), h = 0, r;\n      }, this;\n    };\n  }),\n  vt = l(function (t, r) {\n    Object.defineProperty(r, \"__esModule\", {\n      value: !0\n    }), r.default = r.SHAKE = r.SHA3Hash = r.SHA3 = r.Keccak = void 0;\n    var e,\n      n = (e = yt) && e.__esModule ? e : {\n        default: e\n      },\n      i = function (t) {\n        var r = t.allowedSizes,\n          e = t.padding;\n        return function t() {\n          var i = this,\n            o = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 512;\n          if (!this || this.constructor !== t) return new t(o);\n          if (r && !r.includes(o)) throw new Error(\"Unsupported hash length\");\n          var f = new n.default({\n            capacity: o\n          });\n          return this.update = function (t) {\n            var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"utf8\";\n            if (ft.Buffer.isBuffer(t)) return f.absorb(t), i;\n            if (\"string\" == typeof t) return i.update(ft.Buffer.from(t, r));\n            throw new TypeError(\"Not a string or buffer\");\n          }, this.digest = function () {\n            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : \"binary\",\n              r = \"string\" == typeof t ? {\n                format: t\n              } : t,\n              n = f.squeeze({\n                buffer: r.buffer,\n                padding: r.padding || e\n              });\n            return r.format && \"binary\" !== r.format ? n.toString(r.format) : n;\n          }, this.reset = function () {\n            return f.reset(), i;\n          }, this;\n        };\n      },\n      o = i({\n        allowedSizes: [224, 256, 384, 512],\n        padding: 1\n      });\n    r.Keccak = o;\n    var f = i({\n      allowedSizes: [224, 256, 384, 512],\n      padding: 6\n    });\n    r.SHA3 = f;\n    var u = i({\n      allowedSizes: [128, 256],\n      padding: 31\n    });\n    r.SHAKE = u;\n    var a = o;\n    r.SHA3Hash = a, f.SHA3Hash = a, r.default = f;\n  });\nconst wt = new Array(16),\n  bt = Pt([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]),\n  mt = Pt([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]),\n  Et = Pt([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]),\n  Bt = Pt([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]),\n  At = Lt([0, 1518500249, 1859775393, 2400959708, 2840853838]),\n  Ut = Lt([1352829926, 1548603684, 1836072691, 2053994217, 0]);\nfunction It(t, r) {\n  return t << r | t >>> 32 - r;\n}\nfunction _t(t, r, e, n, i, o, f, u) {\n  return It(t + (r ^ e ^ n) + o + f | 0, u) + i | 0;\n}\nfunction St(t, r, e, n, i, o, f, u) {\n  return It(t + (r & e | ~r & n) + o + f | 0, u) + i | 0;\n}\nfunction xt(t, r, e, n, i, o, f, u) {\n  return It(t + ((r | ~e) ^ n) + o + f | 0, u) + i | 0;\n}\nfunction kt(t, r, e, n, i, o, f, u) {\n  return It(t + (r & n | e & ~n) + o + f | 0, u) + i | 0;\n}\nfunction Ot(t, r, e, n, i, o, f, u) {\n  return It(t + (r ^ (e | ~n)) + o + f | 0, u) + i | 0;\n}\nfunction Ct(t, r) {\n  return t[r >>>= 0] | t[r + 1] << 8 | t[r + 2] << 16 | t[r + 3] << 24;\n}\nfunction Mt(t, r, e) {\n  return t[3 + (e >>>= 0)] = (r = +r) >>> 24, t[e + 2] = r >>> 16, t[e + 1] = r >>> 8, t[e] = 255 & r, e + 4;\n}\nfunction Tt(t, r, e) {\n  return t[e >>>= 0] = 255 & (r = +r), t[e + 1] = r >>> 8, t[e + 2] = r >>> 16, t[e + 3] = r >>> 24, e + 4;\n}\nfunction Lt(t) {\n  return \"undefined\" != typeof Uint32Array ? new Uint32Array(t) : t;\n}\nfunction Pt(t) {\n  return \"undefined\" != typeof Uint8Array ? new Uint8Array(t) : t;\n}\nfunction zt(t) {\n  return \"undefined\" != typeof Uint8Array ? new Uint8Array(t) : new Array(t);\n}\nclass Rt {\n  constructor() {\n    this._block = zt(64), this._blockSize = 64, this._blockOffset = 0, this._length = [0, 0, 0, 0], this._finalized = !1, this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520;\n  }\n  update(t) {\n    if (this._finalized) throw new Error(\"Digest already called\");\n    const r = this._block;\n    let e = 0;\n    for (; this._blockOffset + t.length - e >= this._blockSize;) {\n      for (let n = this._blockOffset; n < this._blockSize;) r[n++] = t[e++];\n      this._update(), this._blockOffset = 0;\n    }\n    for (; e < t.length;) r[this._blockOffset++] = t[e++];\n    for (let r = 0, e = 8 * t.length; e > 0; ++r) this._length[r] += e, e = this._length[r] / 4294967296 | 0, e > 0 && (this._length[r] -= 4294967296 * e);\n    return this;\n  }\n  _update() {\n    const t = wt;\n    for (let r = 0; r < 16; ++r) t[r] = Ct(this._block, 4 * r);\n    let r = 0 | this._a,\n      e = 0 | this._b,\n      n = 0 | this._c,\n      i = 0 | this._d,\n      o = 0 | this._e,\n      f = 0 | this._a,\n      u = 0 | this._b,\n      a = 0 | this._c,\n      s = 0 | this._d,\n      h = 0 | this._e;\n    for (let c = 0; c < 80; c += 1) {\n      let l, p;\n      c < 16 ? (l = _t(r, e, n, i, o, t[bt[c]], At[0], Et[c]), p = Ot(f, u, a, s, h, t[mt[c]], Ut[0], Bt[c])) : c < 32 ? (l = St(r, e, n, i, o, t[bt[c]], At[1], Et[c]), p = kt(f, u, a, s, h, t[mt[c]], Ut[1], Bt[c])) : c < 48 ? (l = xt(r, e, n, i, o, t[bt[c]], At[2], Et[c]), p = xt(f, u, a, s, h, t[mt[c]], Ut[2], Bt[c])) : c < 64 ? (l = kt(r, e, n, i, o, t[bt[c]], At[3], Et[c]), p = St(f, u, a, s, h, t[mt[c]], Ut[3], Bt[c])) : (l = Ot(r, e, n, i, o, t[bt[c]], At[4], Et[c]), p = _t(f, u, a, s, h, t[mt[c]], Ut[4], Bt[c])), r = o, o = i, i = It(n, 10), n = e, e = l, f = h, h = s, s = It(a, 10), a = u, u = p;\n    }\n    const c = this._b + n + s | 0;\n    this._b = this._c + i + h | 0, this._c = this._d + o + f | 0, this._d = this._e + r + u | 0, this._e = this._a + e + a | 0, this._a = c;\n  }\n  digest() {\n    if (this._finalized) throw new Error(\"Digest already called\");\n    this._finalized = !0, this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), Mt(this._block, this._length[0], 56), Mt(this._block, this._length[1], 60), this._update();\n    const t = zt(20);\n    Tt(t, this._a, 0), Tt(t, this._b, 4), Tt(t, this._c, 8), Tt(t, this._d, 12), Tt(t, this._e, 16), this._block.fill(0), this._blockOffset = 0;\n    for (let t = 0; t < 4; ++t) this._length[t] = 0;\n    return t;\n  }\n}\nvar Nt,\n  qt = (Nt = {\n    __proto__: null,\n    RIPEMD160: Rt,\n    default: Rt\n  }) && Nt.default || Nt,\n  jt = l(function (t, r) {\n    function e(t) {\n      return t && \"object\" == typeof t && \"default\" in t ? t.default : t;\n    }\n    var n = vt,\n      i = e(it),\n      o = et,\n      f = e(p),\n      u = e(ot),\n      a = qt,\n      s = k,\n      h = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",\n      c = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"],\n      l = function (t) {\n        for (var r = new ArrayBuffer(5 * t.length / 8), e = new Uint8Array(r), n = 0; n < t.length / 8; n++) {\n          for (var i = [0, 0, 0, 0, 0, 0, 0, 0], o = 0; o < 8; ++o) i[o] = h.indexOf(t[8 * n + o]);\n          e[5 * n + 0] = i[0] << 3 | i[1] >> 2, e[5 * n + 1] = (3 & i[1]) << 6 | i[2] << 1 | i[3] >> 4, e[5 * n + 2] = (15 & i[3]) << 4 | i[4] >> 1, e[5 * n + 3] = (1 & i[4]) << 7 | i[5] << 2 | i[6] >> 3, e[5 * n + 4] = (7 & i[6]) << 5 | i[7];\n        }\n        return Buffer.from(e);\n      };\n    function d(t, r) {\n      this._block = o.Buffer.alloc(t), this._finalSize = r, this._blockSize = t, this._len = 0;\n    }\n    d.prototype.update = function (t, r) {\n      \"string\" == typeof t && (t = o.Buffer.from(t, r = r || \"utf8\"));\n      for (var e = this._block, n = this._blockSize, i = t.length, f = this._len, u = 0; u < i;) {\n        for (var a = f % n, s = Math.min(i - u, n - a), h = 0; h < s; h++) e[a + h] = t[u + h];\n        u += s, (f += s) % n == 0 && this._update(e);\n      }\n      return this._len += i, this;\n    }, d.prototype.digest = function (t) {\n      var r = this._len % this._blockSize;\n      this._block[r] = 128, this._block.fill(0, r + 1), r >= this._finalSize && (this._update(this._block), this._block.fill(0));\n      var e = 8 * this._len;\n      if (e <= 4294967295) this._block.writeUInt32BE(e, this._blockSize - 4);else {\n        var n = (4294967295 & e) >>> 0;\n        this._block.writeUInt32BE((e - n) / 4294967296, this._blockSize - 8), this._block.writeUInt32BE(n, this._blockSize - 4);\n      }\n      this._update(this._block);\n      var i = this._hash();\n      return t ? i.toString(t) : i;\n    }, d.prototype._update = function () {\n      throw new Error(\"_update must be implemented by subclass\");\n    };\n    var g,\n      y,\n      v = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298],\n      w = new Array(64);\n    function b() {\n      this.init(), this._w = w, d.call(this, 64, 56);\n    }\n    function m(t, r, e) {\n      return e ^ t & (r ^ e);\n    }\n    function E(t, r, e) {\n      return t & r | e & (t | r);\n    }\n    function B(t) {\n      return (t >>> 2 | t << 30) ^ (t >>> 13 | t << 19) ^ (t >>> 22 | t << 10);\n    }\n    function A(t) {\n      return (t >>> 6 | t << 26) ^ (t >>> 11 | t << 21) ^ (t >>> 25 | t << 7);\n    }\n    function U(t) {\n      return (t >>> 7 | t << 25) ^ (t >>> 18 | t << 14) ^ t >>> 3;\n    }\n    function I(t) {\n      return void 0 !== t.length;\n    }\n    g = b, (y = d) && (g.super_ = y, g.prototype = Object.create(y.prototype, {\n      constructor: {\n        value: g,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    })), b.prototype.init = function () {\n      return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this;\n    }, b.prototype._update = function (t) {\n      for (var r, e = this._w, n = 0 | this._a, i = 0 | this._b, o = 0 | this._c, f = 0 | this._d, u = 0 | this._e, a = 0 | this._f, s = 0 | this._g, h = 0 | this._h, c = 0; c < 16; ++c) e[c] = t.readInt32BE(4 * c);\n      for (; c < 64; ++c) e[c] = 0 | (((r = e[c - 2]) >>> 17 | r << 15) ^ (r >>> 19 | r << 13) ^ r >>> 10) + e[c - 7] + U(e[c - 15]) + e[c - 16];\n      for (var l = 0; l < 64; ++l) {\n        var p = h + A(u) + m(u, a, s) + v[l] + e[l] | 0,\n          d = B(n) + E(n, i, o) | 0;\n        h = s, s = a, a = u, u = f + p | 0, f = o, o = i, i = n, n = p + d | 0;\n      }\n      this._a = n + this._a | 0, this._b = i + this._b | 0, this._c = o + this._c | 0, this._d = f + this._d | 0, this._e = u + this._e | 0, this._f = a + this._f | 0, this._g = s + this._g | 0, this._h = h + this._h | 0;\n    }, b.prototype._hash = function () {\n      var t = o.Buffer.allocUnsafe(32);\n      return t.writeInt32BE(this._a, 0), t.writeInt32BE(this._b, 4), t.writeInt32BE(this._c, 8), t.writeInt32BE(this._d, 12), t.writeInt32BE(this._e, 16), t.writeInt32BE(this._f, 20), t.writeInt32BE(this._g, 24), t.writeInt32BE(this._h, 28), t;\n    };\n    var _ = new (function () {\n        function t(t) {\n          this.sha256 = t.sha256, this.alphabet = t.alphabet, this.codec = i(this.alphabet), this.base = this.alphabet.length;\n        }\n        var r = t.prototype;\n        return r.encodeChecked = function (t) {\n          var r = this.sha256(this.sha256(t)).slice(0, 4);\n          return this.encodeRaw(Buffer.from(function () {\n            for (var t = [], r = arguments.length, e = new Array(r), n = 0; n < r; n++) e[n] = arguments[n];\n            return e.forEach(function (r) {\n              if (I(r)) for (var e = 0; e < r.length; e++) t.push(r[e]);else t.push(r);\n            }), t;\n          }(t, r)));\n        }, r.encodeRaw = function (t) {\n          return this.codec.encode(t);\n        }, r.decodeChecked = function (t) {\n          var r = this.decodeRaw(t);\n          if (r.length < 5) throw new Error(\"invalid_input_size: decoded data must have length >= 5\");\n          if (!this.verifyCheckSum(r)) throw new Error(\"checksum_invalid\");\n          return r.slice(0, -4);\n        }, r.decodeRaw = function (t) {\n          return this.codec.decode(t);\n        }, r.verifyCheckSum = function (t) {\n          return function (t, r) {\n            if (t.length !== r.length) return !1;\n            for (var e = 0; e < t.length; e++) if (t[e] !== r[e]) return !1;\n            return !0;\n          }(this.sha256(this.sha256(t.slice(0, -4))).slice(0, 4), t.slice(-4));\n        }, t;\n      }())({\n        sha256: function (t) {\n          return new b().update(Buffer.from(t)).digest();\n        },\n        alphabet: \"rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz\"\n      }),\n      S = function (t) {\n        return \"0x\" === t.slice(0, 2) ? t.slice(2) : t;\n      },\n      x = function (t, r) {\n        if (void 0 === r && (r = null), \"string\" != typeof t) throw new Error(\"stripHexPrefix param must be type 'string', is currently type \" + typeof t + \".\");\n        for (var e, i = S(t).toLowerCase(), o = (e = (null != r ? r.toString() + \"0x\" : \"\") + i, new n.Keccak(256).update(e).digest()).toString(\"hex\"), f = \"0x\", u = 0; u < i.length; u++) f += parseInt(o[u], 16) >= 8 ? i[u].toUpperCase() : i[u];\n        return f;\n      },\n      O = function (t, r) {\n        if (!t) throw r;\n      },\n      C = function (t, r) {\n        if (!Buffer.isBuffer(t)) throw r;\n      },\n      M = f.one,\n      T = f.zero,\n      L = f(3);\n    function P(t, r) {\n      return t.and(M.shiftLeft(r)).notEquals(T);\n    }\n    function z(t) {\n      return f.fromArray(Array.prototype.slice.call(t, 0), 256);\n    }\n    function R(t, r) {\n      var e = t.toArray(256).value,\n        n = r ? Math.max(r - e.length, 0) : 0;\n      return Buffer.from([].concat(Array(n).fill(0), e));\n    }\n    function N(t, r, e, n) {\n      O(void 0 !== n, \"Missing Z coordinate\"), this.curve = t, this.x = r, this.y = e, this.z = n, this._zInv = null, this.compressed = !0;\n    }\n    Object.defineProperty(N.prototype, \"zInv\", {\n      get: function () {\n        return null === this._zInv && (this._zInv = this.z.modInv(this.curve.p)), this._zInv;\n      }\n    }), Object.defineProperty(N.prototype, \"affineX\", {\n      get: function () {\n        return this.x.multiply(this.zInv).mod(this.curve.p);\n      }\n    }), Object.defineProperty(N.prototype, \"affineY\", {\n      get: function () {\n        return this.y.multiply(this.zInv).mod(this.curve.p);\n      }\n    }), N.fromAffine = function (t, r, e) {\n      return new N(t, r, e, M);\n    }, N.prototype.equals = function (t) {\n      return t === this || (this.curve.isInfinity(this) ? this.curve.isInfinity(t) : this.curve.isInfinity(t) ? this.curve.isInfinity(this) : 0 === t.y.multiply(this.z).subtract(this.y.multiply(t.z)).mod(this.curve.p).compare(T) && 0 === t.x.multiply(this.z).subtract(this.x.multiply(t.z)).mod(this.curve.p).compare(T));\n    }, N.prototype.negate = function () {\n      var t = this.curve.p.subtract(this.y);\n      return new N(this.curve, this.x, t, this.z);\n    }, N.prototype.add = function (t) {\n      if (this.curve.isInfinity(this)) return t;\n      if (this.curve.isInfinity(t)) return this;\n      var r = this.x,\n        e = this.y,\n        n = t.x,\n        i = t.y.multiply(this.z).subtract(e.multiply(t.z)).mod(this.curve.p),\n        o = n.multiply(this.z).subtract(r.multiply(t.z)).mod(this.curve.p);\n      if (0 === o.compare(T)) return 0 === i.compare(T) ? this.twice() : this.curve.infinity;\n      var f = o.square(),\n        u = f.multiply(o),\n        a = r.multiply(f),\n        s = i.square().multiply(this.z),\n        h = s.subtract(a.shiftLeft(1)).multiply(t.z).subtract(u).multiply(o).mod(this.curve.p),\n        c = a.multiply(L).multiply(i).subtract(e.multiply(u)).subtract(s.multiply(i)).multiply(t.z).add(i.multiply(u)).mod(this.curve.p),\n        l = u.multiply(this.z).multiply(t.z).mod(this.curve.p);\n      return new N(this.curve, h, c, l);\n    }, N.prototype.twice = function () {\n      if (this.curve.isInfinity(this)) return this;\n      if (0 === this.y.compare(T)) return this.curve.infinity;\n      var t = this.x,\n        r = this.y,\n        e = r.multiply(this.z).mod(this.curve.p),\n        n = e.multiply(r).mod(this.curve.p),\n        i = this.curve.a,\n        o = t.square().multiply(L);\n      0 !== i.compare(T) && (o = o.add(this.z.square().multiply(i)));\n      var f = (o = o.mod(this.curve.p)).square().subtract(t.shiftLeft(3).multiply(n)).shiftLeft(1).multiply(e).mod(this.curve.p),\n        u = o.multiply(L).multiply(t).subtract(n.shiftLeft(1)).shiftLeft(2).multiply(n).subtract(o.pow(3)).mod(this.curve.p),\n        a = e.pow(3).shiftLeft(3).mod(this.curve.p);\n      return new N(this.curve, f, u, a);\n    }, N.prototype.multiply = function (t) {\n      if (this.curve.isInfinity(this)) return this;\n      if (0 === t.compare(T)) return this.curve.infinity;\n      for (var r = t, e = r.multiply(L), n = this.negate(), i = this, o = e.bitLength() - 2; o > 0; --o) {\n        var f = P(e, o),\n          u = P(r, o);\n        i = i.twice(), f !== u && (i = i.add(f ? this : n));\n      }\n      return i;\n    }, N.prototype.multiplyTwo = function (t, r, e) {\n      for (var n = Math.max(t.bitLength(), e.bitLength()) - 1, i = this.curve.infinity, o = this.add(r); n >= 0;) {\n        var f = P(t, n),\n          u = P(e, n);\n        i = i.twice(), f ? i = i.add(u ? o : this) : u && (i = i.add(r)), --n;\n      }\n      return i;\n    }, N.prototype.getEncoded = function (t) {\n      if (null == t && (t = this.compressed), this.curve.isInfinity(this)) return new Buffer(\"00\", \"hex\");\n      var r,\n        e = this.affineX,\n        n = this.affineY,\n        i = this.curve.pLength;\n      return t ? (r = new Buffer(1 + i)).writeUInt8(n.isEven() ? 2 : 3, 0) : ((r = new Buffer(1 + i + i)).writeUInt8(4, 0), R(n, i).copy(r, 1 + i)), R(e, i).copy(r, 1), r;\n    }, N.decodeFrom = function (t, r) {\n      var e,\n        n = r.readUInt8(0),\n        i = 4 !== n,\n        o = Math.floor((t.p.bitLength() + 7) / 8),\n        f = z(r.slice(1, 1 + o));\n      if (i) O(r.length === o + 1, \"Invalid sequence length\"), O(2 === n || 3 === n, \"Invalid sequence tag\"), e = t.pointFromX(3 === n, f);else {\n        O(r.length === 1 + o + o, \"Invalid sequence length\");\n        var u = z(r.slice(1 + o));\n        e = N.fromAffine(t, f, u);\n      }\n      return e.compressed = i, e;\n    }, N.prototype.toString = function () {\n      return this.curve.isInfinity(this) ? \"(INFINITY)\" : \"(\" + this.affineX.toString() + \",\" + this.affineY.toString() + \")\";\n    };\n    var q = f.zero,\n      j = f.one;\n    function D(t, r, e, n, i, o, f) {\n      this.p = t, this.a = r, this.b = e, this.G = N.fromAffine(this, n, i), this.n = o, this.h = f, this.infinity = new N(this, null, null, q), this.pOverFour = t.add(j).shiftRight(2), this.pLength = Math.floor((this.p.bitLength() + 7) / 8);\n    }\n    D.prototype.pointFromX = function (t, r) {\n      var e = r.pow(3).add(this.a.multiply(r)).add(this.b).mod(this.p).modPow(this.pOverFour, this.p),\n        n = e;\n      return e.isEven() ^ !t && (n = this.p.subtract(n)), N.fromAffine(this, r, n);\n    }, D.prototype.isInfinity = function (t) {\n      return t === this.infinity || 0 === t.z.compare(q) && 0 !== t.y.compare(q);\n    }, D.prototype.isOnCurve = function (t) {\n      if (this.isInfinity(t)) return !0;\n      var r = t.affineX,\n        e = t.affineY,\n        n = this.a,\n        i = this.b,\n        o = this.p;\n      if (r.compare(q) < 0 || r.compareTo(o) >= 0) return !1;\n      if (e.compare(q) < 0 || e.compareTo(o) >= 0) return !1;\n      var f = e.square().mod(o),\n        u = r.pow(3).add(n.multiply(r)).add(i).mod(o);\n      return f.equals(u);\n    }, D.prototype.validate = function (t) {\n      O(!this.isInfinity(t), \"Point is at infinity\"), O(this.isOnCurve(t), \"Point is not on the curve\");\n      var r = t.multiply(this.n);\n      return O(this.isInfinity(r), \"Point is not a scalar multiple of G\"), !0;\n    };\n    var H = {\n      p: \"fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\",\n      a: \"00\",\n      b: \"07\",\n      n: \"fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\",\n      h: \"01\",\n      Gx: \"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\",\n      Gy: \"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8\"\n    };\n    function F(t, r) {\n      return new n.SHA3(256).update(t).digest(r);\n    }\n    function Z(t) {\n      return Buffer.from(new a.RIPEMD160().update(t).digest());\n    }\n    function K(t) {\n      var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;\n      if (C(t, \"expecting keyBuffer<Buffer>\"), \"sha256x2\" === r) {\n        var e = F(F(t)).slice(0, 4);\n        return u.encode(Buffer.concat([t, e]));\n      }\n      var n = [t];\n      r && n.push(Buffer.from(r));\n      var i = Z(Buffer.concat(n)).slice(0, 4);\n      return u.encode(Buffer.concat([t, i]));\n    }\n    function X(t) {\n      var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;\n      O(t, \"private key expected\");\n      var e,\n        n = new Buffer(u.decode(t)),\n        i = n.slice(-4),\n        o = n.slice(0, -4);\n      if (\"sha256x2\" === r) e = F(F(o)).slice(0, 4);else {\n        var f = [o];\n        r && f.push(Buffer.from(r)), e = Z(Buffer.concat(f)).slice(0, 4);\n      }\n      if (i.toString(\"hex\") !== e.toString(\"hex\")) throw new Error(\"Invalid checksum, \" + \"\".concat(i.toString(\"hex\"), \" != \").concat(e.toString(\"hex\")));\n      return o;\n    }\n    var V = function (t) {\n      var r = H;\n      if (!r) return null;\n      var e = f(r.p, 16),\n        n = f(r.a, 16),\n        i = f(r.b, 16),\n        o = f(r.n, 16),\n        u = f(r.h, 16);\n      return new D(e, n, i, f(r.Gx, 16), f(r.Gy, 16), o, u);\n    }();\n    function Y(t) {\n      var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"EOS\";\n      if (\"string\" == typeof t) return Y.fromString(t, r);\n      if (Buffer.isBuffer(t)) return Y.fromBuffer(t);\n      if (\"object\" == typeof t && t.Q) return Y(t.Q);\n      function e() {\n        var r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : t.compressed;\n        return t.getEncoded(r);\n      }\n      function n() {\n        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : \"EOS\";\n        return t + K(e());\n      }\n      function i() {\n        return e().toString(\"hex\");\n      }\n      return {\n        Q: t,\n        toString: n,\n        toBuffer: e,\n        toHex: i\n      };\n    }\n    Y.isValid = function (t) {\n      var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"EOS\";\n      try {\n        return Y(t, r), !0;\n      } catch (t) {\n        return !1;\n      }\n    }, Y.fromBuffer = function (t) {\n      return Y(N.decodeFrom(V, t));\n    }, Y.fromString = function (t) {\n      var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"EOS\";\n      try {\n        return Y.fromStringOrThrow(t, r);\n      } catch (t) {\n        return null;\n      }\n    }, Y.fromStringOrThrow = function (t) {\n      var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"EOS\",\n        e = t.match(/^PUB_([A-Za-z0-9]+)_([A-Za-z0-9]+)$/);\n      if (null === e) {\n        var n = new RegExp(\"^\" + r);\n        return n.test(t) && (t = t.substring(r.length)), Y.fromBuffer(X(t));\n      }\n      var i = e[1],\n        o = e[2];\n      return Y.fromBuffer(X(o, i));\n    }, Y.fromHex = function (t) {\n      return Y.fromBuffer(new Buffer(t, \"hex\"));\n    }, Y.fromStringHex = function (t) {\n      return Y.fromString(new Buffer(t, \"hex\"));\n    };\n    var W = i(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\"),\n      J = W.encode,\n      G = W.decode,\n      Q = function (t) {\n        return void 0 === t;\n      },\n      $ = {\n        ed25519PublicKey: 48,\n        ed25519SecretSeed: 144,\n        preAuthTx: 152,\n        sha256Hash: 184\n      },\n      tt = function (t) {\n        var r = Buffer.alloc(2);\n        return r.writeUInt16LE(function (t, r) {\n          Buffer.isBuffer(t) || (t = new Buffer());\n          for (var e = 0, n = 0; n < t.length; n++) {\n            var i = e >>> 8 & 255;\n            i ^= 255 & t[n], e = e << 8 & 65535, e ^= i ^= i >>> 4, e ^= i = i << 5 & 65535, e ^= i = i << 7 & 65535;\n          }\n          return e;\n        }(t), 0), r;\n      };\n    function rt(t) {\n      return (rt = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {\n        return t.__proto__ || Object.getPrototypeOf(t);\n      })(t);\n    }\n    function nt(t, r) {\n      return (nt = Object.setPrototypeOf || function (t, r) {\n        return t.__proto__ = r, t;\n      })(t, r);\n    }\n    function ft() {\n      if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n      if (Reflect.construct.sham) return !1;\n      if (\"function\" == typeof Proxy) return !0;\n      try {\n        return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;\n      } catch (t) {\n        return !1;\n      }\n    }\n    function ut(t, r, e) {\n      return (ut = ft() ? Reflect.construct : function (t, r, e) {\n        var n = [null];\n        n.push.apply(n, r);\n        var i = new (Function.bind.apply(t, n))();\n        return e && nt(i, e.prototype), i;\n      }).apply(null, arguments);\n    }\n    function at(t) {\n      var r = \"function\" == typeof Map ? new Map() : void 0;\n      return (at = function (t) {\n        if (null === t || -1 === Function.toString.call(t).indexOf(\"[native code]\")) return t;\n        if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\");\n        if (void 0 !== r) {\n          if (r.has(t)) return r.get(t);\n          r.set(t, e);\n        }\n        function e() {\n          return ut(t, arguments, rt(this).constructor);\n        }\n        return e.prototype = Object.create(t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), nt(e, t);\n      })(t);\n    }\n    var st = [0, 1, 2, 42, 43, 68, 69],\n      ht = function (t) {\n        for (var r = new Uint8Array(t.length), e = 0; e < t.length; e++) r[e] = t.charCodeAt(e);\n        return r;\n      }(\"SS58PRE\"),\n      ct = function (t) {\n        var r, e;\n        function n() {\n          return t.apply(this, arguments) || this;\n        }\n        return e = t, (r = n).prototype = Object.create(e.prototype), r.prototype.constructor = r, r.__proto__ = e, n.prototype.toJSON = function () {\n          return {\n            _type: \"AccountIndex\",\n            data: this + 0\n          };\n        }, n;\n      }(at(Number));\n    function lt(t, r) {\n      t.length || (t = [t]), r.length || (r = [r]);\n      var e = new Uint8Array(t.length + r.length);\n      return e.set(t), e.set(r, t.length), e;\n    }\n    function pt(t) {\n      var r = new Error();\n      this.name = r.name = \"ValidationError\", this.message = r.message = t, this.stack = r.stack;\n    }\n    function dt(t, r) {\n      if (null == r && (r = \"Assertion failed.\"), !t) throw new pt(r);\n    }\n    pt.prototype = Object.create(Error.prototype);\n    var gt = function () {\n        function t(t, r) {\n          this.hi = 0 | t, this.lo = 0 | r;\n        }\n        return t.prototype.ushrn32 = function (t) {\n          var r = this.lo;\n          return 0 == (t &= 63) || (t < 32 ? (r >>>= t, r |= this.hi << 32 - t) : r = this.hi >>> t - 32), r;\n        }, t;\n      }(),\n      yt = Buffer.allocUnsafe(105),\n      wt = \"qpzry9x8gf2tvdw0s3jn54khce6mua7l\",\n      bt = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, 10, 17, 21, 20, 26, 30, 7, 5, -1, -1, -1, -1, -1, -1, -1, 29, -1, 24, 13, 25, 9, 8, 23, -1, 18, 22, 31, 27, 19, -1, 1, 0, 3, 16, 11, 28, 12, 14, 6, 4, 2, -1, -1, -1, -1, -1, -1, 29, -1, 24, 13, 25, 9, 8, 23, -1, 18, 22, 31, 27, 19, -1, 1, 0, 3, 16, 11, 28, 12, 14, 6, 4, 2, -1, -1, -1, -1, -1],\n      mt = new gt(7, 4294967295),\n      Et = [new gt(152, 4072443489), new gt(121, 3077413346), new gt(243, 1046459332), new gt(174, 783016616), new gt(30, 1329849456)];\n    function Bt(t, r) {\n      var e = t,\n        n = e.hi >>> 3;\n      e.hi &= mt.hi, e.lo &= mt.lo, e.hi <<= 5, e.hi |= e.lo >>> 27, e.lo <<= 5;\n      for (var i = 0; i < Et.length; i++) n >>> i & 1 && (e.hi ^= Et[i].hi, e.lo ^= Et[i].lo);\n      return e.lo ^= r, e;\n    }\n    function At(t, r, e, n, i, o, f) {\n      dt(Buffer.isBuffer(t)), dt(r >>> 0 === r), dt(Buffer.isBuffer(e)), dt(n >>> 0 === n), dt((255 & i) === i), dt((255 & o) === o), dt(\"boolean\" == typeof f);\n      for (var u = (1 << o) - 1, a = 0, s = 0; r < t.length; r++) {\n        var h = t[r];\n        if (h >>> i != 0) throw new Error(\"Invalid bits.\");\n        for (a = a << i | h, s += i; s >= o;) e[n++] = a >>> (s -= o) & u;\n      }\n      if (f) s && (e[n++] = a << o - s & u);else if (s >= i || a << o - s & u) throw new Error(\"Invalid bits.\");\n      return dt(n <= e.length), e.slice(0, n);\n    }\n    var Ut = function (t) {\n        function r(r) {\n          var e = r.slice(0, -4),\n            n = r.slice(-4),\n            i = t(e);\n          if (!(n[0] ^ i[0] | n[1] ^ i[1] | n[2] ^ i[2] | n[3] ^ i[3])) return e;\n        }\n        return {\n          bs58Encode: function (r) {\n            var e = t(r);\n            return u.encode(Buffer.concat([r, e], r.length + 4));\n          },\n          bs58Decode: function (t) {\n            var e = r(u.decode(t));\n            if (!e) throw new Error(\"Invalid checksum\");\n            return e;\n          },\n          decodeUnsafe: function (t) {\n            var e = u.decodeUnsafe(t);\n            if (e) return r(e);\n          }\n        };\n      }(function (t) {\n        var r = new b().update(t).digest();\n        return new b().update(r).digest();\n      }),\n      It = Ut.bs58Decode,\n      _t = Ut.bs58Encode;\n    r.b32decode = l, r.b32encode = function (t) {\n      var r = [],\n        e = Math.floor(t.length / 5),\n        n = t.length % 5;\n      if (0 != n) {\n        for (var i = 0; i < 5 - n; i++) t += \"\\0\";\n        e += 1;\n      }\n      for (var o = 0; o < e; o++) r.push(h.charAt(t.charCodeAt(5 * o) >> 3)), r.push(h.charAt((7 & t.charCodeAt(5 * o)) << 2 | t.charCodeAt(5 * o + 1) >> 6)), r.push(h.charAt((63 & t.charCodeAt(5 * o + 1)) >> 1)), r.push(h.charAt((1 & t.charCodeAt(5 * o + 1)) << 4 | t.charCodeAt(5 * o + 2) >> 4)), r.push(h.charAt((15 & t.charCodeAt(5 * o + 2)) << 1 | t.charCodeAt(5 * o + 3) >> 7)), r.push(h.charAt((127 & t.charCodeAt(5 * o + 3)) >> 2)), r.push(h.charAt((3 & t.charCodeAt(5 * o + 3)) << 3 | t.charCodeAt(5 * o + 4) >> 5)), r.push(h.charAt(31 & t.charCodeAt(5 * o + 4)));\n      var f = 0;\n      1 == n ? f = 6 : 2 == n ? f = 4 : 3 == n ? f = 3 : 4 == n && (f = 1);\n      for (var u = 0; u < f; u++) r.pop();\n      for (var a = 0; a < f; a++) r.push(\"=\");\n      return r.join(\"\");\n    }, r.bs58Decode = It, r.bs58Encode = _t, r.calculateChecksum = tt, r.cashaddrDecode = function (t, r) {\n      void 0 === r && (r = \"bitcoincash\"), dt(\"string\" == typeof t), dt(\"string\" == typeof r);\n      var e = function (t, r) {\n          if (dt(\"string\" == typeof t), t.length < 8 || t.length > 196) throw new Error(\"Invalid cashaddr data length.\");\n          for (var e = !1, n = !1, i = !1, o = 0, f = 0; f < t.length; f++) {\n            var u = t.charCodeAt(f);\n            if (u >= 97 && u <= 122) e = !0;else if (u >= 65 && u <= 90) n = !0;else if (u >= 48 && u <= 57) i = !0;else {\n              if (58 !== u) throw new Error(\"Invalid cashaddr character.\");\n              if (i || 0 === f || f > 83) throw new Error(\"Invalid cashaddr prefix.\");\n              if (0 !== o) throw new Error(\"Invalid cashaddr separators.\");\n              o = f;\n            }\n          }\n          if (n && e) throw new Error(\"Invalid cashaddr casing.\");\n          var a,\n            s = new gt(0, 1);\n          0 === o ? a = r.toLowerCase() : (a = t.substring(0, o).toLowerCase(), o += 1);\n          for (var h = 0; h < a.length; h++) Bt(s, 31 & (32 | a.charCodeAt(h)));\n          Bt(s, 0);\n          var c = t.length - o;\n          if (c <= 8 || c > 112) throw new Error(\"Invalid cashaddr data length.\");\n          for (var l = Buffer.allocUnsafe(c), p = o; p < t.length; p++) {\n            var d = t.charCodeAt(p),\n              g = 65408 & d ? -1 : bt[d];\n            if (-1 === g) throw new Error(\"Invalid cashaddr character.\");\n            Bt(s, g), p + 8 < t.length && (l[p - o] = g);\n          }\n          if (0 !== s.hi || 1 !== s.lo || a !== r) throw new Error(\"Invalid cashaddr checksum.\");\n          return [a, l.slice(0, -8)];\n        }(t, r),\n        n = e[0],\n        i = e[1],\n        o = 5 * i.length & 7;\n      if (o >= 5) throw new Error(\"Invalid padding in data.\");\n      if (i[i.length - 1] & (1 << o) - 1) throw new Error(\"Non zero padding.\");\n      var f = At(i, 0, i, 0, 5, 8, !1),\n        u = f[0] >>> 3 & 31,\n        a = f.slice(1),\n        s = 20 + 4 * (3 & f[0]);\n      if (4 & f[0] && (s *= 2), s !== a.length) throw new Error(\"Invalid cashaddr data length.\");\n      return {\n        prefix: n,\n        type: u,\n        hash: a\n      };\n    }, r.cashaddrEncode = function (t, r, e) {\n      if (dt(\"string\" == typeof t), dt((15 & r) === r, \"Invalid cashaddr type.\"), dt(Buffer.isBuffer(e)), 0 === t.length || t.length > 83) throw new Error(\"Invalid cashaddr prefix.\");\n      var n = function (t) {\n          switch (dt(t >>> 0 === t), t) {\n            case 20:\n              return 0;\n            case 24:\n              return 1;\n            case 28:\n              return 2;\n            case 32:\n              return 3;\n            case 40:\n              return 4;\n            case 48:\n              return 5;\n            case 56:\n              return 6;\n            case 64:\n              return 7;\n            default:\n              throw new Error(\"Non standard length.\");\n          }\n        }(e.length),\n        i = Buffer.allocUnsafe(e.length + 1);\n      return i[0] = r << 3 | n, e.copy(i, 1), function (t, r) {\n        dt(\"string\" == typeof t), dt(Buffer.isBuffer(r));\n        for (var e = new gt(0, 1), n = \"\", i = !1, o = !1, f = 0; f < t.length; f++) {\n          var u = t.charCodeAt(f);\n          if (65280 & u || u >>> 5 == 0) throw new Error(\"Invalid cashaddr character.\");\n          if (u >= 97 && u <= 122) o = !0;else if (u >= 65 && u <= 90) i = !0, u = u - 65 + 97;else if (u >= 48 && u <= 57) throw new Error(\"Invalid cashaddr prefix.\");\n          Bt(e, 31 & u), n += String.fromCharCode(u);\n        }\n        if (o && i) throw new Error(\"Invalid cashaddr prefix.\");\n        Bt(e, 0), n += \":\";\n        for (var a = 0; a < r.length; a++) {\n          var s = r[a];\n          if (s >>> 5 != 0) throw new Error(\"Invalid cashaddr value.\");\n          Bt(e, s), n += wt[s];\n        }\n        for (var h = 0; h < 8; h++) Bt(e, 0);\n        e.lo ^= 1;\n        for (var c = 0; c < 8; c++) {\n          var l = 31 & e.ushrn32(5 * (7 - c));\n          n += wt[l];\n        }\n        return n;\n      }(t, At(i, 0, yt, 0, 8, 5, !0));\n    }, r.codec = _, r.decodeCheck = function (t, r) {\n      if (\"string\" != typeof r) throw new TypeError(\"encoded argument must be of type String\");\n      var e = G(r),\n        n = e[0],\n        i = e.slice(0, -2),\n        o = i.slice(1),\n        f = e.slice(-2);\n      if (r !== J(e)) throw new Error(\"invalid encoded string\");\n      var u = $[t];\n      if (Q(u)) throw new Error(t + ' is not a valid version byte name.  expected one of \"accountId\" or \"seed\"');\n      if (n !== u) throw new Error(\"invalid version byte. expected \" + u + \", got \" + n);\n      if (!function (t, r) {\n        if (t.length !== r.length) return !1;\n        if (0 === t.length) return !0;\n        for (var e = 0; e < t.length; e += 1) if (t[e] !== r[e]) return !1;\n        return !0;\n      }(tt(i), f)) throw new Error(\"invalid checksum\");\n      return Buffer.from(o);\n    }, r.encodeCheck = function (t, r) {\n      if (null === r || Q(r)) throw new Error(\"cannot encode null data\");\n      var e = $[t];\n      if (Q(e)) throw new Error(t + ' is not a valid version byte name.  expected one of \"ed25519PublicKey\", \"ed25519SecretSeed\", \"preAuthTx\", \"sha256Hash\"');\n      r = Buffer.from(r);\n      var n = Buffer.from([e]),\n        i = Buffer.concat([n, r]),\n        o = tt(i),\n        f = Buffer.concat([i, o]);\n      return J(f);\n    }, r.eosPublicKey = Y, r.hex2a = function (t) {\n      for (var r = t.toString(), e = \"\", n = 0; n < r.length; n += 2) e += String.fromCharCode(parseInt(r.substr(n, 2), 16));\n      return e;\n    }, r.isValid = function (t) {\n      var r = t.toString().toUpperCase().replace(/-/g, \"\");\n      if (!r || 40 !== r.length) return !1;\n      var e,\n        i = function (t) {\n          for (var r = \"\", e = 0; e < t.length; e++) {\n            var n = Math.round(t[e]).toString(16);\n            1 === n.length && (n = \"0\" + n), r += n;\n          }\n          return r;\n        }(l(r));\n      return e = Buffer.from(i.slice(0, 42), \"hex\"), new n.Keccak(256).update(e).digest(\"hex\").toString().substr(0, 8) === i.slice(42);\n    }, r.isValidChecksumAddress = function (t, r) {\n      return function (t) {\n        return /^0x[0-9a-fA-F]{40}$/.test(t);\n      }(t) && x(t, r) === t;\n    }, r.ss58Decode = function (t, r) {\n      var e;\n      void 0 === r && (r = 0);\n      try {\n        e = u.decode(t);\n      } catch (t) {\n        return null;\n      }\n      if (-1 === st.indexOf(e[0])) return null;\n      if (e.length < 3) return null;\n      var n,\n        i = e.length <= 3 ? 1 : e.length <= 5 ? 2 : e.length <= 9 ? 4 : e.length <= 17 ? 8 : 32,\n        o = e.length - 1 - i,\n        f = e.slice(1, 1 + i);\n      e.slice(1 + e.length), 32 === i && (n = f);\n      var a = i < 32 ? new ct(function (t) {\n        var r = 0,\n          e = 1;\n        return t.forEach(function (t) {\n          r += t * e, e *= 256;\n        }), r;\n      }(f)) : new Buffer.from(f);\n      if (e[0] % 1 && !n && !r) return null;\n      for (var h = s.blake2b(lt(ht, e[0] % 1 ? n || r(a) : e.slice(0, 1 + i))), c = 0; c < o; ++c) if (h[c] !== e[1 + i + c]) return null;\n      return a;\n    }, r.ss58Encode = function (t, r, e, n, i) {\n      var o;\n      if (void 0 === r && (r = 42), void 0 === e && (e = null), void 0 === n && (n = null), -1 === st.indexOf(r)) throw new Error(\"Unknown ss58 address type\", r);\n      if (\"number\" == typeof t || t instanceof ct) {\n        var f = t < 256 ? 1 : t < 65536 ? 2 : t < 1 ? 4 : 8;\n        if (-1 === [1, 2, 4, 8].indexOf(n = n || f)) throw new Error(\"Invalid length\");\n        if (n = Math.max(f, n), e && \"number\" != typeof e) throw new Error(\"Invalid checksum length\");\n        switch (n) {\n          case 1:\n            e = 1;\n            break;\n          case 2:\n            e = [1, 2].indexOf(e) + 1 || 1;\n            break;\n          case 4:\n            e = [1, 2, 3, 4].indexOf(e) + 1 || 1;\n            break;\n          case 8:\n            e = [1, 2, 3, 4, 5, 6, 7, 8].indexOf(e) + 1 || 1;\n        }\n        o = function (t, r) {\n          var e = !1;\n          t < 0 && (t = -t - 1, e = !0);\n          for (var n = new Uint8Array(r), i = 0; i < r; ++i) n[i] = t % 256, e && (n[i] = 255 & ~n[i]), t /= 256;\n          return n;\n        }(t, n);\n      } else {\n        if (!(t instanceof Uint8Array) || 32 !== t.length && 35 !== t.length) throw new Error(\"Unknown item to encode as ss58. Passing back.\", t);\n        e = 2, i = o = 35 === t.length ? t.slice(1, 33) : t;\n      }\n      var a = s.blake2b(lt(ht, 1 & r ? i : lt(r, o))),\n        h = lt(lt(r, o), a.slice(0, e));\n      return u.encode(Buffer.from(h));\n    }, r.stripHexPrefix = S, r.toChecksumAddress = x, r.ua2hex = function (t) {\n      for (var r = \"\", e = 0; e < t.length; e++) {\n        var n = t[e];\n        r += c[n >>> 4], r += c[15 & n];\n      }\n      return r;\n    };\n  });\nconst Dt = \"13456789abcdefghijkmnopqrstuwxyz\";\nfunction Ht(t) {\n  var r = Dt.indexOf(t);\n  if (-1 === r) throw new Error(\"Invalid character found: \" + t);\n  return r;\n}\nvar Ft = function (t) {\n    if (t.constructor !== Uint8Array) throw new Error(\"View must be a Uint8Array!\");\n    const r = t.length,\n      e = 8 * r % 5,\n      n = 0 === e ? 0 : 5 - e;\n    let i = 0,\n      o = \"\",\n      f = 0;\n    for (var u = 0; u < r; u++) for (i = i << 8 | t[u], f += 8; f >= 5;) o += Dt[i >>> f + n - 5 & 31], f -= 5;\n    return f > 0 && (o += Dt[i << 5 - (f + n) & 31]), o;\n  },\n  Zt = require(\"bn.js\"),\n  Kt = function () {\n    function t(t) {\n      void 0 === t && (t = Buffer.from([])), this.buffer = t, this.bytesRead = 0;\n    }\n    var r = t.prototype;\n    return r.read = function (t) {\n      var r = this.buffer.slice(0, t);\n      return this.buffer = this.buffer.slice(t), this.bytesRead += t, r;\n    }, r.write = function (t) {\n      this.buffer = Buffer.concat([this.buffer, Buffer.from(t)]);\n    }, t;\n  }(),\n  Xt = function () {\n    function t(t) {\n      if (!t || t.length < 1) throw new Error(\"Missing str in address\");\n      this.str = t;\n    }\n    var r = t.prototype;\n    return r.protocol = function () {\n      if (this.str.length < 1) throw Error(\"No address found.\");\n      return this.str[0];\n    }, r.payload = function () {\n      if (this.str.length < 1) throw Error(\"No address found.\");\n      return this.str.slice(1, this.str.length);\n    }, t;\n  }();\nfunction Vt(t) {\n  return F.blake2b(t, null, 4);\n}\nfunction Yt(t, r) {\n  if (!r || !r.str) throw Error(\"Invalid address\");\n  var e = \"\",\n    n = r.payload(),\n    i = r.protocol();\n  switch (i) {\n    case 0:\n      var o = function (t) {\n        return function (t) {\n          for (var r, e = new Zt(0), n = 0; r = t.read(1)[0], e.ior(new Zt(127 & r).shln(n)), r >> 7 != 0;) n += 7;\n          return e;\n        }(new Kt(t)).toString();\n      }(n);\n      e = t + String(i) + o;\n      break;\n    default:\n      var f = Buffer.from([i]),\n        u = Vt(Buffer.concat([f, n])),\n        a = Buffer.concat([n, Buffer.from(u)]),\n        s = jt.hex2a(a.toString(\"hex\")),\n        h = jt.b32encode(s).replace(/=/g, \"\").toLowerCase();\n      e = String(t) + String(i) + h;\n  }\n  return e;\n}\nfunction Wt(t, r) {\n  var e = Buffer.from([t]),\n    n = Buffer.concat([e, r]);\n  return new Xt(n);\n}\nfunction Jt(t, r) {\n  return function (e) {\n    var n;\n    switch (e.readUInt8(0)) {\n      case 118:\n        if (169 !== e.readUInt8(1) || 136 !== e.readUInt8(e.length - 2) || 172 !== e.readUInt8(e.length - 1)) throw Error(\"Unrecognised address format\");\n        return n = Buffer.concat([Buffer.from(t), e.slice(3, 3 + e.readUInt8(2))]), jt.bs58Encode(n);\n      case 169:\n        if (135 !== e.readUInt8(e.length - 1)) throw Error(\"Unrecognised address format\");\n        return n = Buffer.concat([Buffer.from(r), e.slice(2, 2 + e.readUInt8(1))]), jt.bs58Encode(n);\n      default:\n        throw Error(\"Unrecognised address format\");\n    }\n  };\n}\nfunction Gt(t, r) {\n  return function (e) {\n    var n = jt.bs58Decode(e),\n      i = function (t) {\n        return t.every(function (t, r) {\n          return r < n.length && t === n.readUInt8(r);\n        });\n      };\n    if (t.some(i)) return Buffer.concat([Buffer.from([118, 169, 20]), n.slice(t[0].length), Buffer.from([136, 172])]);\n    if (r.some(i)) return Buffer.concat([Buffer.from([169, 20]), n.slice(r[0].length), Buffer.from([135])]);\n    throw Error(\"Unrecognised address format\");\n  };\n}\nvar Qt = function (t, r, e, n) {\n  return {\n    coinType: r,\n    decoder: Gt(e, n),\n    encoder: Jt(e[0], n[0]),\n    name: t\n  };\n};\nfunction $t(t, r, e) {\n  var n = function (t) {\n      return function (r) {\n        var e = r.readUInt8(0);\n        if (e >= 81 && e <= 96) e -= 80;else if (0 !== e) throw Error(\"Unrecognised address format\");\n        var n = [e].concat(h(r.slice(2, r.readUInt8(1) + 2)));\n        return s(t, n);\n      };\n    }(t),\n    i = Jt(r, e);\n  return function (t) {\n    try {\n      return i(t);\n    } catch (r) {\n      return n(t);\n    }\n  };\n}\nfunction tr(t, r, e) {\n  var n = function (t) {\n      return function (r) {\n        var e = a(r),\n          n = e.words;\n        if (e.prefix !== t) throw Error(\"Unexpected human-readable part in bech32 encoded address\");\n        var i = c(n.slice(1)),\n          o = n[0];\n        return o > 0 && (o += 80), Buffer.concat([Buffer.from([o, i.length]), Buffer.from(i)]);\n      };\n    }(t),\n    i = Gt(r, e);\n  return function (r) {\n    return r.toLowerCase().startsWith(t + \"1\") ? n(r) : i(r);\n  };\n}\nvar rr = function (t, r, e, n, i) {\n  return {\n    coinType: r,\n    decoder: tr(e, n, i),\n    encoder: $t(e, n[0], i[0]),\n    name: t\n  };\n};\nfunction er(t) {\n  return function (r) {\n    return jt.toChecksumAddress(r.toString(\"hex\"), t || null);\n  };\n}\nfunction nr(t) {\n  return function (r) {\n    var e = jt.stripHexPrefix(r);\n    if (!jt.isValidChecksumAddress(r, t || null) && e !== e.toLowerCase() && e !== e.toUpperCase()) throw Error(\"Invalid address checksum\");\n    return Buffer.from(jt.stripHexPrefix(r), \"hex\");\n  };\n}\nvar ir = function (t, r, e) {\n  return {\n    coinType: r,\n    decoder: nr(e),\n    encoder: er(e),\n    name: t\n  };\n};\nfunction or(t) {\n  return function (r) {\n    return s(t, h(r));\n  };\n}\nfunction fr(t) {\n  return function (r) {\n    var e = a(r),\n      n = e.words;\n    if (e.prefix !== t) throw Error(\"Unrecognised address format\");\n    return Buffer.from(c(n));\n  };\n}\nvar ur = function (t, r, e) {\n  return {\n    coinType: r,\n    decoder: fr(e),\n    encoder: or(e),\n    name: t\n  };\n};\nfunction ar(t) {\n  return new Buffer(jt.ss58Decode(t));\n}\nfunction sr(t) {\n  var r = new (require(\"ripemd160\"))().update(t).digest();\n  return \"STM\" + ot.encode(Buffer.concat([t, r.slice(0, 4)]));\n}\nfunction hr(t) {\n  var r = require(\"ripemd160\");\n  if (\"STM\" !== t.slice(0, 3)) throw Error(\"Unrecognised address format\");\n  t = t.slice(3);\n  var e = ot.decode(t),\n    n = e.slice(-4),\n    i = e.slice(0, -4);\n  if (!new r().update(i).digest().slice(0, 4).equals(n)) throw Error(\"Invalid checksum\");\n  return Buffer.from(i);\n}\nfunction cr(r) {\n  return t(\"SHA512-256\").update(r).digest(\"hex\").substr(-8);\n}\nvar lr,\n  pr,\n  dr,\n  gr,\n  yr,\n  vr,\n  wr = function (t, r, e, n) {\n    return {\n      coinType: r,\n      decoder: n,\n      encoder: e,\n      name: t\n    };\n  },\n  br = [rr(\"BTC\", 0, \"bc\", [[0]], [[5]]), rr(\"LTC\", 2, \"ltc\", [[48]], [[50], [5]]), Qt(\"DOGE\", 3, [[30]], [[22]]), Qt(\"RDD\", 4, [[61]], [[5]]), Qt(\"DASH\", 5, [[76]], [[16]]), Qt(\"PPC\", 6, [[55]], [[117]]), wr(\"NMC\", 7, jt.bs58Encode, jt.bs58Decode), rr(\"MONA\", 22, \"mona\", [[50]], [[55], [5]]), wr(\"DCR\", 42, ot.encode, ot.decode), wr(\"XEM\", 43, function (t) {\n    return jt.b32encode(jt.hex2a(t.toString(\"hex\")));\n  }, function (t) {\n    if (!jt.isValid(t)) throw Error(\"Unrecognised address format\");\n    var r = t.toString().toUpperCase().replace(/-/g, \"\");\n    return jt.b32decode(r);\n  }), Qt(\"AIB\", 55, [[23]], [[5]]), rr(\"SYS\", 57, \"sys\", [[63]], [[5]]), ir(\"ETH\", 60), ir(\"ETC\", 61), wr(\"ICX\", 74, function (t) {\n    if (21 !== t.length) throw Error(\"Unrecognised address format\");\n    switch (t.readUInt8(0)) {\n      case 0:\n        return \"hx\" + t.slice(1).toString(\"hex\");\n      case 1:\n        return \"cx\" + t.slice(1).toString(\"hex\");\n      default:\n        throw Error(\"Unrecognised address format\");\n    }\n  }, function (t) {\n    var r = t.slice(0, 2),\n      e = t.slice(2);\n    switch (r) {\n      case \"hx\":\n        return Buffer.concat([Buffer.from([0]), Buffer.from(e, \"hex\")]);\n      case \"cx\":\n        return Buffer.concat([Buffer.from([1]), Buffer.from(e, \"hex\")]);\n      default:\n        throw Error(\"Unrecognised address format\");\n    }\n  }), wr(\"ARK\", 111, jt.bs58Encode, function (t) {\n    var r = jt.bs58Decode(t);\n    if (23 !== r[0]) throw Error(\"Unrecognised address format\");\n    return r;\n  }), ur(\"ATOM\", 118, \"cosmos\"), ur(\"ZIL\", 119, \"zil\"), ur(\"EGLD\", 120, \"erd\"), (lr = [[28, 184]], pr = [[28, 189]], {\n    coinType: 133,\n    decoder: function (t, r, e) {\n      var n = Gt(r, e),\n        i = fr(\"zs\");\n      return function (t) {\n        return t.toLowerCase().startsWith(\"zs\") ? i(t) : n(t);\n      };\n    }(0, lr, pr),\n    encoder: (dr = lr[0], gr = pr[0], yr = or(\"zs\"), vr = Jt(dr, gr), function (t) {\n      try {\n        return vr(t);\n      } catch (r) {\n        return yr(t);\n      }\n    }),\n    name: \"ZEC\"\n  }), wr(\"LSK\", 134, function (t) {\n    return p(t.toString(\"hex\"), 16).toString(10) + \"L\";\n  }, function (t) {\n    return function (t) {\n      if (t.length < 2 || t.length > 22) throw new Error(\"Address length does not match requirements. Expected between 2 and 22 characters.\");\n      if (\"L\" !== t[t.length - 1]) throw new Error('Address format does not match requirements. Expected \"L\" at the end.');\n      if (t.includes(\".\")) throw new Error(\"Address format does not match requirements. Address includes invalid character: `.`.\");\n    }(t), Buffer.from(p(t.slice(0, -1)).toString(16), \"hex\");\n  }), wr(\"STEEM\", 135, sr, hr), ir(\"RSK\", 137, 30), wr(\"XRP\", 144, function (t) {\n    return jt.codec.encodeChecked(t);\n  }, function (t) {\n    return jt.codec.decodeChecked(t);\n  }), wr(\"BCH\", 145, function (t) {\n    switch (t.readUInt8(0)) {\n      case 118:\n        if (169 !== t.readUInt8(1) || 136 !== t.readUInt8(t.length - 2) || 172 !== t.readUInt8(t.length - 1)) throw Error(\"Unrecognised address format\");\n        return jt.cashaddrEncode(\"bitcoincash\", 0, t.slice(3, 3 + t.readUInt8(2)));\n      case 169:\n        if (135 !== t.readUInt8(t.length - 1)) throw Error(\"Unrecognised address format\");\n        return jt.cashaddrEncode(\"bitcoincash\", 1, t.slice(2, 2 + t.readUInt8(1)));\n      default:\n        throw Error(\"Unrecognised address format\");\n    }\n  }, function (t) {\n    var r = Gt([[0]], [[5]]);\n    try {\n      return r(t);\n    } catch (r) {\n      return function (t) {\n        var r = jt.cashaddrDecode(t),\n          e = r.type,\n          n = r.hash;\n        if (0 === e) return Buffer.concat([Buffer.from([118, 169, 20]), Buffer.from(n), Buffer.from([136, 172])]);\n        if (1 === e) return Buffer.concat([Buffer.from([169, 20]), Buffer.from(n), Buffer.from([135])]);\n        throw Error(\"Unrecognised address format\");\n      }(t);\n    }\n  }), wr(\"XLM\", 148, function (t) {\n    return jt.encodeCheck(\"ed25519PublicKey\", t);\n  }, function (t) {\n    return jt.decodeCheck(\"ed25519PublicKey\", t);\n  }), wr(\"NANO\", 165, function (t) {\n    var r = Ft(Uint8Array.from(t)),\n      e = F.blake2b(t, null, 5).reverse();\n    return \"nano_\" + r + Ft(e);\n  }, function (t) {\n    var r = function (t) {\n      if (\"string\" != typeof t) throw new Error(\"Input must be a string!\");\n      var r = t.length;\n      const e = 5 * r % 8,\n        n = 0 === e ? 0 : 8 - e;\n      for (var i = 0, o = 0, f = 0, u = new Uint8Array(Math.ceil(5 * r / 8)), a = 0; a < r; a++) o = o << 5 | Ht(t[a]), (i += 5) >= 8 && (u[f++] = o >>> i + n - 8 & 255, i -= 8);\n      return i > 0 && (u[f++] = o << i + n - 8 & 255), 0 !== e && (u = u.slice(1)), u;\n    }(t.slice(5));\n    return Buffer.from(r).slice(0, -5);\n  }), wr(\"EOS\", 194, function (t) {\n    if (!jt.eosPublicKey.isValid(t)) throw Error(\"Unrecognised address format\");\n    return jt.eosPublicKey.fromHex(t).toString();\n  }, function (t) {\n    if (!jt.eosPublicKey.isValid(t)) throw Error(\"Unrecognised address format\");\n    return jt.eosPublicKey(t).toBuffer();\n  }), wr(\"TRX\", 195, jt.bs58Encode, jt.bs58Decode), wr(\"NEO\", 239, jt.bs58Encode, jt.bs58Decode), wr(\"ALGO\", 283, function (t) {\n    var r = cr(t);\n    return jt.b32encode(jt.hex2a(t.toString(\"hex\").concat(r))).replace(/=/g, \"\");\n  }, function (t) {\n    var r = jt.b32decode(t);\n    if (36 !== r.length) throw Error(\"Unrecognised address format\");\n    var e = r.slice(0, -4),\n      n = r.slice(-4),\n      i = cr(e);\n    if (n.toString(\"hex\") !== i) throw Error(\"Unrecognised address format\");\n    return e;\n  }), Qt(\"DIVI\", 301, [[30]], [[13]]), ur(\"IOTX\", 304, \"io\"), wr(\"DOT\", 354, function (t) {\n    return jt.ss58Encode(Uint8Array.from(t), 0);\n  }, ar), wr(\"KSM\", 434, function (t) {\n    return jt.ss58Encode(Uint8Array.from(t), 2);\n  }, ar), wr(\"FIL\", 461, function (t) {\n    return Yt(\"f\", Wt(t[0], t.slice(1))).toString();\n  }, function (t) {\n    return function (t) {\n      !function (t) {\n        if (!t) throw Error(\"No bytes to validate.\");\n        if (t.length < 3) throw Error(\"Address is too short to validate.\");\n        if (\"f\" !== t[0] && \"t\" !== t[0]) throw Error(\"Unknown address network.\");\n        switch (t[1]) {\n          case \"0\":\n            if (t.length > 22) throw Error(\"Invalid ID address length.\");\n            break;\n          case \"1\":\n            if (41 !== t.length) throw Error(\"Invalid secp256k1 address length.\");\n            break;\n          case \"2\":\n            if (41 !== t.length) throw Error(\"Invalid Actor address length.\");\n            break;\n          case \"3\":\n            if (86 !== t.length) throw Error(\"Invalid BLS address length.\");\n            break;\n          default:\n            throw new Error(\"Invalid address protocol.\");\n        }\n      }(t);\n      var r,\n        e = t[0],\n        n = parseInt(t[1], 10),\n        i = Buffer.from([n]),\n        o = t.slice(2);\n      if (0 === n) return Wt(n, Buffer.from((function (t, r) {\n        for (var e = new Zt(t);;) {\n          var n = e.maskn(7).toNumber();\n          if (e.ishrn(7), e.isZero()) {\n            r.write([n]);\n            break;\n          }\n          r.write([128 | n]);\n        }\n      }(o, r = new Kt()), r.buffer)));\n      var f,\n        u,\n        a = Buffer.from(jt.b32decode(o.toUpperCase())),\n        s = a.length,\n        h = a.slice(0, s - 4);\n      if (f = a.slice(s - 4, s), u = Vt(Buffer.concat([i, h])), Buffer.compare(Buffer.from(u), f)) throw Error(\"Checksums don't match\");\n      var c = Wt(n, h);\n      if (Yt(e, c) !== t) throw Error(\"Did not encode this address properly: \" + t);\n      return c;\n    }(t).str;\n  }), Qt(\"CCA\", 489, [[11]], [[5]]), wr(\"SOL\", 501, ot.encode, ot.decode), Qt(\"LRG\", 568, [[30]], [[13]]), rr(\"CCXX\", 571, \"ccx\", [[137]], [[75], [5]]), Qt(\"BPS\", 576, [[0]], [[5]]), ir(\"XDAI\", 700), ir(\"VET\", 703), ur(\"BNB\", 714, \"bnb\"), wr(\"HIVE\", 825, sr, hr), ur(\"ONE\", 1023, \"one\"), wr(\"ONT\", 1024, function (t) {\n    return jt.bs58Encode(Buffer.concat([Buffer.from([23]), t]));\n  }, function (t) {\n    var r = jt.bs58Decode(t);\n    switch (r.readUInt8(0)) {\n      case 23:\n        return r.slice(1);\n      default:\n        throw Error(\"Unrecognised address format\");\n    }\n  }), {\n    coinType: 1729,\n    decoder: function (t) {\n      var r = jt.bs58Decode(t).slice(3);\n      switch (t.substring(0, 3)) {\n        case \"tz1\":\n          return Buffer.concat([Buffer.from([0, 0]), r]);\n        case \"tz2\":\n          return Buffer.concat([Buffer.from([0, 1]), r]);\n        case \"tz3\":\n          return Buffer.concat([Buffer.from([0, 2]), r]);\n        case \"KT1\":\n          return Buffer.concat([Buffer.from([1]), r, Buffer.from([0])]);\n        default:\n          throw Error(\"Unrecognised address format\");\n      }\n    },\n    encoder: function (t) {\n      if (22 !== t.length && 21 !== t.length) throw Error(\"Unrecognised address format\");\n      var r;\n      switch (t.readUInt8(0)) {\n        case 0:\n          if (0 === t.readUInt8(1)) r = Buffer.from([6, 161, 159]);else if (1 === t.readUInt8(1)) r = Buffer.from([6, 161, 161]);else {\n            if (2 !== t.readUInt8(1)) throw Error(\"Unrecognised address format\");\n            r = Buffer.from([6, 161, 164]);\n          }\n          return jt.bs58Encode(Buffer.concat([r, t.slice(2)]));\n        case 1:\n          return r = Buffer.from([2, 90, 121]), jt.bs58Encode(Buffer.concat([r, t.slice(1, 21)]));\n        default:\n          throw Error(\"Unrecognised address format\");\n      }\n    },\n    name: \"XTZ\"\n  }, ur(\"ADA\", 1815, \"addr\"), wr(\"QTUM\", 2301, jt.bs58Encode, jt.bs58Decode), wr(\"ELA\", 2305, ot.encode, ot.decode), {\n    coinType: 3030,\n    decoder: function (t) {\n      var r = Buffer.alloc(20),\n        e = new DataView(r.buffer, 0, 20),\n        n = t.split(\".\");\n      if (3 !== n.length) throw Error(\"Unrecognised address format\");\n      var i = Number(n[0]),\n        o = BigInt(n[1]),\n        f = BigInt(n[2]);\n      return e.setUint32(0, i), e.setBigUint64(4, o), e.setBigUint64(12, f), r;\n    },\n    encoder: function (t) {\n      if (20 !== t.length) throw Error(\"Unrecognised address format\");\n      var r = new DataView(t.buffer, 0);\n      return [r.getUint32(0), r.getBigUint64(4), r.getBigUint64(12)].join(\".\");\n    },\n    name: \"HBAR\"\n  }, wr(\"HNS\", 5353, function (t) {\n    if (20 !== t.length) throw Error(\"P2WPKH must be 20 bytes\");\n    var r = [0].concat(h(t));\n    return s(\"hs\", r);\n  }, function (t) {\n    var r = a(t),\n      e = r.words;\n    if (\"hs\" !== r.prefix) throw Error(\"Unrecognised address format\");\n    var n = e[0],\n      i = c(e.slice(1));\n    if (0 !== n) throw Error(\"Bad program version\");\n    if (20 !== i.length) throw Error(\"Witness program hash is the wrong size\");\n    return Buffer.from(i);\n  }), ir(\"CELO\", 52752)],\n  mr = Object.assign.apply(Object, [{}].concat(br.map(function (t) {\n    var r;\n    return (r = {})[t.name] = t, r;\n  }))),\n  Er = Object.assign.apply(Object, [{}].concat(br.map(function (t) {\n    var r;\n    return (r = {})[t.coinType] = t, r;\n  })));\nexport { br as formats, Er as formatsByCoinType, mr as formatsByName };","map":{"version":3,"names":["r","e","n","length","i","charAt","TypeError","o","t","f","charCodeAt","Error","u","a","push","toLowerCase","toUpperCase","lastIndexOf","slice","s","h","c","l","p","d","prefix","words","result","path","exports","require","Math","log","K","q","value","sign","isSmall","floor","S","Array","ceil","g","y","v","w","b","m","E","B","concat","A","U","I","_","negate","abs","unshift","reverse","x","isUnit","equals","isEven","isDivisibleBy","lesser","k","prev","divide","modPow","square","mod","prototype","Object","create","add","subtract","plus","minus","multiply","max","times","_multiplyBySmall","divmod","quotient","remainder","over","pow","toString","isZero","isPositive","isOdd","compareAbs","compareTo","compare","Infinity","eq","neq","notEquals","gt","greater","lt","geq","greaterOrEquals","leq","lesserOrEquals","isNegative","isPrime","bitLength","isProbablePrime","randBetween","modInv","zero","one","next","O","C","M","T","L","not","toJSNumber","P","z","R","N","min","shiftLeft","String","shiftRight","and","or","xor","parseBase","test","parseInt","isNaN","j","D","H","apply","map","valueOf","Number","F","join","Z","split","indexOf","toArray","toJSON","X","minusOne","gcd","lcm","isInstance","random","fromArray","hasOwnProperty","bigInt","Uint8Array","Buffer","from","ret","call","Uint32Array","outlen","blake2b","blake2bHex","blake2bInit","blake2bUpdate","blake2bFinal","blake2s","blake2sHex","blake2sInit","blake2sUpdate","blake2sFinal","V","Y","W","J","G","Q","arr","$","NaN","tt","mLen","LN2","rt","Symbol","for","RangeError","setPrototypeOf","isEncoding","write","ArrayBuffer","isView","buffer","SharedArrayBuffer","isBuffer","copy","type","isArray","data","toPrimitive","byteLength","arguments","readUInt16BE","substr","fromCharCode","SlowBuffer","alloc","INSPECT_MAX_BYTES","kMaxLength","TYPED_ARRAY_SUPPORT","foo","console","error","defineProperty","enumerable","get","byteOffset","species","configurable","writable","poolSize","fill","allocUnsafe","allocUnsafeSlow","_isBuffer","offset","swap16","swap32","swap64","toLocaleString","inspect","replace","trim","includes","isFinite","_arr","subarray","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","copyWithin","set","constructor","name","et","nt","it","encode","repeat","decodeUnsafe","decode","ot","ft","ut","at","default","__esModule","st","ht","roundIndex","ct","pt","dt","yt","xorWords","readWords","capacity","padding","absorb","squeeze","queue","state","reset","vt","SHAKE","SHA3Hash","SHA3","Keccak","createHash","allowedSizes","update","digest","format","wt","bt","Pt","mt","Et","Bt","At","Lt","Ut","It","_t","St","xt","kt","Ot","Ct","Mt","Tt","zt","Rt","_block","_blockSize","_blockOffset","_length","_finalized","_a","_b","_c","_d","_e","_update","Nt","qt","__proto__","RIPEMD160","jt","_finalSize","_len","_hash","init","_w","super_","_f","_g","_h","sha256","alphabet","codec","base","encodeChecked","encodeRaw","forEach","decodeChecked","decodeRaw","verifyCheckSum","curve","_zInv","compressed","zInv","fromAffine","isInfinity","twice","infinity","multiplyTwo","getEncoded","affineX","affineY","pLength","decodeFrom","pointFromX","pOverFour","isOnCurve","validate","Gx","Gy","fromString","fromBuffer","toBuffer","toHex","isValid","fromStringOrThrow","match","RegExp","substring","fromHex","fromStringHex","ed25519PublicKey","ed25519SecretSeed","preAuthTx","sha256Hash","getPrototypeOf","Reflect","construct","sham","Proxy","Date","Function","bind","Map","has","_type","message","stack","hi","lo","ushrn32","bs58Encode","bs58Decode","b32decode","b32encode","pop","calculateChecksum","cashaddrDecode","hash","cashaddrEncode","decodeCheck","encodeCheck","eosPublicKey","hex2a","round","isValidChecksumAddress","ss58Decode","ss58Encode","stripHexPrefix","toChecksumAddress","ua2hex","Dt","Ht","Ft","Zt","Kt","bytesRead","read","Xt","str","protocol","payload","Vt","Yt","ior","shln","Wt","Jt","Gt","checkVersion","every","some","Qt","bitcoinBase58Chain","coinType","decoder","encoder","$t","tr","startsWith","rr","bitcoinChain","er","nr","ir","hexChecksumChain","fr","ur","bech32Chain","ar","sr","hr","cr","lr","pr","dr","gr","yr","vr","wr","getConfig","br","maskn","toNumber","ishrn","DataView","BigInt","setUint32","setBigUint64","getUint32","getBigUint64","mr","assign","Er","formats","formatsByCoinType","formatsByName"],"sources":["/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/bech32/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/big-integer/BigInteger.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/blakejs/util.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/blakejs/blake2b.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/blakejs/blake2s.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/base64-js/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/blakejs/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/ieee754/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/buffer/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/safe-buffer/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/base-x/src/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/bs58/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/sha3/node_modules/buffer/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/sha3/sponge/permute/copy/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/sha3/sponge/permute/chi/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/sha3/sponge/permute/iota/round-constants/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/sha3/sponge/permute/iota/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/sha3/sponge/permute/rho-pi/pi-shuffles/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/sha3/sponge/permute/rho-pi/rho-offsets/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/sha3/sponge/permute/rho-pi/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/sha3/sponge/permute/theta/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/sha3/sponge/permute/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/sha3/sponge/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/sha3/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/ripemd160-min/dist-esm/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/crypto-addr-codec/dist/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/node_modules/nano-base32/index.js","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/src/leb128/unsigned.ts","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/src/filecoin/address.ts","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/src/filecoin/index.ts","/Users/karimelbarbary/Desktop/test4/devote/node_modules/@ensdomains/address-encoder/src/index.ts"],"sourcesContent":["'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) throw new Error('Invalid prefix (' + prefix + ')')\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) throw new TypeError(str + ' too short')\n  if (str.length > LIMIT) throw new TypeError('Exceeds length limit')\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) throw new Error('Mixed-case string ' + str)\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) throw new Error('No separator character for ' + str)\n  if (split === 0) throw new Error('Missing prefix for ' + str)\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) throw new Error('Data too short')\n\n  var chk = prefixChk(prefix)\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) throw new Error('Unknown character ' + c)\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) throw new Error('Invalid checksum for ' + str)\n  return { prefix: prefix, words: words }\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) throw new Error('Excess padding')\n    if ((value << (outBits - bits)) & maxV) throw new Error('Non-zero padding')\n  }\n\n  return result\n}\n\nfunction toWords (bytes) {\n  return convert(bytes, 8, 5, true)\n}\n\nfunction fromWords (words) {\n  return convert(words, 5, 8, false)\n}\n\nmodule.exports = {\n  decode: decode,\n  encode: encode,\n  toWords: toWords,\n  fromWords: fromWords\n}\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        LOG_MAX_INT = Math.log(MAX_INT);\r\n\r\n    function Integer(v, radix) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 ? parseValue(v) : parseBase(v, radix);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        var value = n.value;\r\n        if (value === 0) return false;\r\n        if (value === 1) return true;\r\n        if (value === 2) return this.isEven();\r\n        return this.mod(n).equals(Integer[0]);\r\n    };\r\n    SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n    \r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next : for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.equals(Integer[1]) || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;    \r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    \r\n// Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if(bits <= 64)\r\n            return millerRabinTest(n, [2, 325, 9375, 28178, 450775, 9780504, 1795265022]);\r\n        var logN = Math.log(2) * bits;\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2)));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.equals(bigInt.zero)) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.equals(1)) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return ((typeof n === \"number\" || typeof n === \"string\") && +Math.abs(n) <= BASE) ||\r\n            (n instanceof BigInteger && n.value.length <= 1);\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (n) {\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        n = +n;\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (n) {\r\n        var remQuo;\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        n = +n;\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value, x = typeof v === \"number\" ? v | LOBMASK_I : v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = Math.min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(Math.random() * range));\r\n        var length = range.value.length - 1;\r\n        var result = [], restricted = true;\r\n        for (var i = length; i >= 0; i--) {\r\n            var top = restricted ? range.value[i] : BASE;\r\n            var digit = truncate(Math.random() * top);\r\n            result.unshift(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        result = arrayToSmall(result);\r\n        return low.add(typeof result === \"number\" ? new SmallInteger(result) : new BigInteger(result, false));\r\n    }\r\n    var parseBase = function (text, base) {\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        for (var i = 0; i < length; i++) {\r\n            var c = text[i].toLowerCase();\r\n            if (c === \"-\") continue;\r\n            if (/[a-z0-9]/.test(c)) {\r\n                if (/[0-9]/.test(c) && +c >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                } else if (c.charCodeAt(0) - 87 >= absBase) {\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        if (2 <= base && base <= 36) {\r\n            if (length <= LOG_MAX_INT / Math.log(base)) {\r\n                var result = parseInt(text, base);\r\n                if (isNaN(result)) {\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n                return new SmallInteger(parseInt(text, base));\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i].toLowerCase(),\r\n                charCode = c.charCodeAt(0);\r\n            if (48 <= charCode && charCode <= 57) digits.push(parseValue(c));\r\n            else if (97 <= charCode && charCode <= 122) digits.push(parseValue(c.charCodeAt(0) - 87));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\");\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit) {\r\n        if (digit <= 35) {\r\n            return \"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(digit);\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(+n - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.equals(1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(+n))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(stringify).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix);\r\n        return String(this.value);\r\n    };\r\n    BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = new SmallInteger(i);\r\n        if (i > 0) Integer[-i] = new SmallInteger(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define(\"big-integer\", [], function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","var ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\n\n// For convenience, let people hash a string, not just a Uint8Array\nfunction normalizeInput (input) {\n  var ret\n  if (input instanceof Uint8Array) {\n    ret = input\n  } else if (input instanceof Buffer) {\n    ret = new Uint8Array(input)\n  } else if (typeof (input) === 'string') {\n    ret = new Uint8Array(Buffer.from(input, 'utf8'))\n  } else {\n    throw new Error(ERROR_MSG_INPUT)\n  }\n  return ret\n}\n\n// Converts a Uint8Array to a hexadecimal string\n// For example, toHex([255, 0, 255]) returns \"ff00ff\"\nfunction toHex (bytes) {\n  return Array.prototype.map.call(bytes, function (n) {\n    return (n < 16 ? '0' : '') + n.toString(16)\n  }).join('')\n}\n\n// Converts any value in [0...2^32-1] to an 8-character hex string\nfunction uint32ToHex (val) {\n  return (0x100000000 + val).toString(16).substring(1)\n}\n\n// For debugging: prints out hash state in the same format as the RFC\n// sample computation exactly, so that you can diff\nfunction debugPrint (label, arr, size) {\n  var msg = '\\n' + label + ' = '\n  for (var i = 0; i < arr.length; i += 2) {\n    if (size === 32) {\n      msg += uint32ToHex(arr[i]).toUpperCase()\n      msg += ' '\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n    } else if (size === 64) {\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n      msg += uint32ToHex(arr[i]).toUpperCase()\n    } else throw new Error('Invalid size ' + size)\n    if (i % 6 === 4) {\n      msg += '\\n' + new Array(label.length + 4).join(' ')\n    } else if (i < arr.length - 2) {\n      msg += ' '\n    }\n  }\n  console.log(msg)\n}\n\n// For performance testing: generates N bytes of input, hashes M times\n// Measures and prints MB/second hash performance each time\nfunction testSpeed (hashFn, N, M) {\n  var startMs = new Date().getTime()\n\n  var input = new Uint8Array(N)\n  for (var i = 0; i < N; i++) {\n    input[i] = i % 256\n  }\n  var genMs = new Date().getTime()\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\n  startMs = genMs\n\n  for (i = 0; i < M; i++) {\n    var hashHex = hashFn(input)\n    var hashMs = new Date().getTime()\n    var ms = hashMs - startMs\n    startMs = hashMs\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\n    console.log(Math.round(N / (1 << 20) / (ms / 1000) * 100) / 100 + ' MB PER SECOND')\n  }\n}\n\nmodule.exports = {\n  normalizeInput: normalizeInput,\n  toHex: toHex,\n  debugPrint: debugPrint,\n  testSpeed: testSpeed\n}\n","// Blake2B in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = require('./util')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  var o0 = v[a] + v[b]\n  var o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  var o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  var o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return (arr[i] ^\n  (arr[i + 1] << 8) ^\n  (arr[i + 2] << 16) ^\n  (arr[i + 3] << 24))\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  var x0 = m[ix]\n  var x1 = m[ix + 1]\n  var y0 = m[iy]\n  var y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  var xor0 = v[d] ^ v[a]\n  var xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nvar BLAKE2B_IV32 = new Uint32Array([\n  0xF3BCC908, 0x6A09E667, 0x84CAA73B, 0xBB67AE85,\n  0xFE94F82B, 0x3C6EF372, 0x5F1D36F1, 0xA54FF53A,\n  0xADE682D1, 0x510E527F, 0x2B3E6C1F, 0x9B05688C,\n  0xFB41BD6B, 0x1F83D9AB, 0x137E2179, 0x5BE0CD19\n])\n\nvar SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nvar SIGMA82 = new Uint8Array(SIGMA8.map(function (x) { return x * 2 }))\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nvar v = new Uint32Array(32)\nvar m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  var i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < 12; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n  // util.debugPrint('   (i=12) v[16]', v, 64)\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n  // util.debugPrint('h[8]', ctx.h, 64)\n}\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\nfunction blake2bInit (outlen, key) {\n  if (outlen === 0 || outlen > 64) {\n    throw new Error('Illegal output length, expected 0 < length <= 64')\n  }\n  if (key && key.length > 64) {\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\n  }\n\n  // state, 'param block'\n  var ctx = {\n    b: new Uint8Array(128),\n    h: new Uint32Array(16),\n    t: 0, // input count\n    c: 0, // pointer within buffer\n    outlen: outlen // output length in bytes\n  }\n\n  // initialize hash state\n  for (var i = 0; i < 16; i++) {\n    ctx.h[i] = BLAKE2B_IV32[i]\n  }\n  var keylen = key ? key.length : 0\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(ctx, key)\n    // at the end\n    ctx.c = 128\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 128) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2b (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 64\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2bInit(outlen, key)\n  blake2bUpdate(ctx, input)\n  return blake2bFinal(ctx)\n}\n\n// Computes the BLAKE2B hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2bHex (input, key, outlen) {\n  var output = blake2b(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2b: blake2b,\n  blake2bHex: blake2bHex,\n  blake2bInit: blake2bInit,\n  blake2bUpdate: blake2bUpdate,\n  blake2bFinal: blake2bFinal\n}\n","// BLAKE2s hash function in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = require('./util')\n\n// Little-endian byte access.\n// Expects a Uint8Array and an index\n// Returns the little-endian uint32 at v[i..i+3]\nfunction B2S_GET32 (v, i) {\n  return v[i] ^ (v[i + 1] << 8) ^ (v[i + 2] << 16) ^ (v[i + 3] << 24)\n}\n\n// Mixing function G.\nfunction B2S_G (a, b, c, d, x, y) {\n  v[a] = v[a] + v[b] + x\n  v[d] = ROTR32(v[d] ^ v[a], 16)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 12)\n  v[a] = v[a] + v[b] + y\n  v[d] = ROTR32(v[d] ^ v[a], 8)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 7)\n}\n\n// 32-bit right rotation\n// x should be a uint32\n// y must be between 1 and 31, inclusive\nfunction ROTR32 (x, y) {\n  return (x >>> y) ^ (x << (32 - y))\n}\n\n// Initialization Vector.\nvar BLAKE2S_IV = new Uint32Array([\n  0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A,\n  0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19])\n\nvar SIGMA = new Uint8Array([\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0])\n\n// Compression function. \"last\" flag indicates last block\nvar v = new Uint32Array(16)\nvar m = new Uint32Array(16)\nfunction blake2sCompress (ctx, last) {\n  var i = 0\n  for (i = 0; i < 8; i++) { // init work variables\n    v[i] = ctx.h[i]\n    v[i + 8] = BLAKE2S_IV[i]\n  }\n\n  v[12] ^= ctx.t // low 32 bits of offset\n  v[13] ^= (ctx.t / 0x100000000) // high 32 bits\n  if (last) { // last block flag set ?\n    v[14] = ~v[14]\n  }\n\n  for (i = 0; i < 16; i++) { // get little-endian words\n    m[i] = B2S_GET32(ctx.b, 4 * i)\n  }\n\n  // ten rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 32)\n  for (i = 0; i < 10; i++) {\n    // util.debugPrint('   (i=' + i + ')  v[16]', v, 32)\n    B2S_G(0, 4, 8, 12, m[SIGMA[i * 16 + 0]], m[SIGMA[i * 16 + 1]])\n    B2S_G(1, 5, 9, 13, m[SIGMA[i * 16 + 2]], m[SIGMA[i * 16 + 3]])\n    B2S_G(2, 6, 10, 14, m[SIGMA[i * 16 + 4]], m[SIGMA[i * 16 + 5]])\n    B2S_G(3, 7, 11, 15, m[SIGMA[i * 16 + 6]], m[SIGMA[i * 16 + 7]])\n    B2S_G(0, 5, 10, 15, m[SIGMA[i * 16 + 8]], m[SIGMA[i * 16 + 9]])\n    B2S_G(1, 6, 11, 12, m[SIGMA[i * 16 + 10]], m[SIGMA[i * 16 + 11]])\n    B2S_G(2, 7, 8, 13, m[SIGMA[i * 16 + 12]], m[SIGMA[i * 16 + 13]])\n    B2S_G(3, 4, 9, 14, m[SIGMA[i * 16 + 14]], m[SIGMA[i * 16 + 15]])\n  }\n  // util.debugPrint('   (i=10) v[16]', v, 32)\n\n  for (i = 0; i < 8; i++) {\n    ctx.h[i] ^= v[i] ^ v[i + 8]\n  }\n  // util.debugPrint('h[8]', ctx.h, 32)\n}\n\n// Creates a BLAKE2s hashing context\n// Requires an output length between 1 and 32 bytes\n// Takes an optional Uint8Array key\nfunction blake2sInit (outlen, key) {\n  if (!(outlen > 0 && outlen <= 32)) {\n    throw new Error('Incorrect output length, should be in [1, 32]')\n  }\n  var keylen = key ? key.length : 0\n  if (key && !(keylen > 0 && keylen <= 32)) {\n    throw new Error('Incorrect key length, should be in [1, 32]')\n  }\n\n  var ctx = {\n    h: new Uint32Array(BLAKE2S_IV), // hash state\n    b: new Uint32Array(64), // input block\n    c: 0, // pointer within block\n    t: 0, // input count\n    outlen: outlen // output length in bytes\n  }\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  if (keylen > 0) {\n    blake2sUpdate(ctx, key)\n    ctx.c = 64 // at the end\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2s streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2sUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 64) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2sCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2s streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2sFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n  while (ctx.c < 64) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2sCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = (ctx.h[i >> 2] >> (8 * (i & 3))) & 0xFF\n  }\n  return out\n}\n\n// Computes the BLAKE2S hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2s (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 32\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2sInit(outlen, key)\n  blake2sUpdate(ctx, input)\n  return blake2sFinal(ctx)\n}\n\n// Computes the BLAKE2S hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2sHex (input, key, outlen) {\n  var output = blake2s(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2s: blake2s,\n  blake2sHex: blake2sHex,\n  blake2sInit: blake2sInit,\n  blake2sUpdate: blake2sUpdate,\n  blake2sFinal: blake2sFinal\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","var b2b = require('./blake2b')\nvar b2s = require('./blake2s')\n\nmodule.exports = {\n  blake2b: b2b.blake2b,\n  blake2bHex: b2b.blake2bHex,\n  blake2bInit: b2b.blake2bInit,\n  blake2bUpdate: b2b.blake2bUpdate,\n  blake2bFinal: b2b.blake2bFinal,\n  blake2s: b2s.blake2s,\n  blake2sHex: b2s.blake2sHex,\n  blake2sInit: b2s.blake2sInit,\n  blake2sUpdate: b2s.blake2sUpdate,\n  blake2sFinal: b2s.blake2sFinal\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? Symbol.for('nodejs.util.inspect.custom')\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? Symbol.for('nodejs.util.inspect.custom')\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","\"use strict\";var copy=function copy(I,i){return function(O,o){var oi=o*2;var ii=i*2;O[oi]=I[ii];O[oi+1]=I[ii+1]}};module.exports=copy;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var chi=function chi(_ref){var A=_ref.A,C=_ref.C;for(var y=0;y<25;y+=5){for(var x=0;x<5;x++){(0,_copy[\"default\"])(A,y+x)(C,x)}for(var _x=0;_x<5;_x++){var xy=(y+_x)*2;var x1=(_x+1)%5*2;var x2=(_x+2)%5*2;A[xy]^=~C[x1]&C[x2];A[xy+1]^=~C[x1+1]&C[x2+1]}}};var _default=chi;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var ROUND_CONSTANTS=new Uint32Array([0,1,0,32898,2147483648,32906,2147483648,2147516416,0,32907,0,2147483649,2147483648,2147516545,2147483648,32777,0,138,0,136,0,2147516425,0,2147483658,0,2147516555,2147483648,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,0,32778,2147483648,2147483658,2147483648,2147516545,2147483648,32896,0,2147483649,2147483648,2147516424]);var _default=ROUND_CONSTANTS;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _roundConstants=_interopRequireDefault(require(\"./round-constants\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var iota=function iota(_ref){var A=_ref.A,roundIndex=_ref.roundIndex;var i=roundIndex*2;A[0]^=_roundConstants[\"default\"][i];A[1]^=_roundConstants[\"default\"][i+1]};var _default=iota;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var PI_SHUFFLES=[10,7,11,17,18,3,5,16,8,21,24,4,15,23,19,13,12,2,20,14,22,9,6,1];var _default=PI_SHUFFLES;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var RHO_OFFSETS=[1,3,6,10,15,21,28,36,45,55,2,14,27,41,56,8,25,43,62,18,39,61,20,44];var _default=RHO_OFFSETS;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _piShuffles=_interopRequireDefault(require(\"./pi-shuffles\"));var _rhoOffsets=_interopRequireDefault(require(\"./rho-offsets\"));var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var rhoPi=function rhoPi(_ref){var A=_ref.A,C=_ref.C,W=_ref.W;(0,_copy[\"default\"])(A,1)(W,0);var H=0;var L=0;var Wi=0;var ri=32;for(var i=0;i<24;i++){var j=_piShuffles[\"default\"][i];var r=_rhoOffsets[\"default\"][i];(0,_copy[\"default\"])(A,j)(C,0);H=W[0];L=W[1];ri=32-r;Wi=r<32?0:1;W[Wi]=H<<r|L>>>ri;W[(Wi+1)%2]=L<<r|H>>>ri;(0,_copy[\"default\"])(W,0)(A,j);(0,_copy[\"default\"])(C,0)(W,0)}};var _default=rhoPi;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var theta=function theta(_ref){var A=_ref.A,C=_ref.C,D=_ref.D,W=_ref.W;var H=0;var L=0;for(var x=0;x<5;x++){var x20=x*2;var x21=(x+5)*2;var x22=(x+10)*2;var x23=(x+15)*2;var x24=(x+20)*2;C[x20]=A[x20]^A[x21]^A[x22]^A[x23]^A[x24];C[x20+1]=A[x20+1]^A[x21+1]^A[x22+1]^A[x23+1]^A[x24+1]}for(var _x=0;_x<5;_x++){(0,_copy[\"default\"])(C,(_x+1)%5)(W,0);H=W[0];L=W[1];W[0]=H<<1|L>>>31;W[1]=L<<1|H>>>31;D[_x*2]=C[(_x+4)%5*2]^W[0];D[_x*2+1]=C[(_x+4)%5*2+1]^W[1];for(var y=0;y<25;y+=5){A[(y+_x)*2]^=D[_x*2];A[(y+_x)*2+1]^=D[_x*2+1]}}};var _default=theta;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _chi=_interopRequireDefault(require(\"./chi\"));var _iota=_interopRequireDefault(require(\"./iota\"));var _rhoPi=_interopRequireDefault(require(\"./rho-pi\"));var _theta=_interopRequireDefault(require(\"./theta\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var permute=function permute(){var C=new Uint32Array(10);var D=new Uint32Array(10);var W=new Uint32Array(2);return function(A){for(var roundIndex=0;roundIndex<24;roundIndex++){(0,_theta[\"default\"])({A:A,C:C,D:D,W:W});(0,_rhoPi[\"default\"])({A:A,C:C,W:W});(0,_chi[\"default\"])({A:A,C:C});(0,_iota[\"default\"])({A:A,roundIndex:roundIndex})}C.fill(0);D.fill(0);W.fill(0)}};var _default=permute;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _buffer=require(\"buffer\");var _permute=_interopRequireDefault(require(\"./permute\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var xorWords=function xorWords(I,O){for(var i=0;i<I.length;i+=8){var o=i/4;O[o]^=I[i+7]<<24|I[i+6]<<16|I[i+5]<<8|I[i+4];O[o+1]^=I[i+3]<<24|I[i+2]<<16|I[i+1]<<8|I[i]}return O};var readWords=function readWords(I,O){for(var o=0;o<O.length;o+=8){var i=o/4;O[o]=I[i+1];O[o+1]=I[i+1]>>>8;O[o+2]=I[i+1]>>>16;O[o+3]=I[i+1]>>>24;O[o+4]=I[i];O[o+5]=I[i]>>>8;O[o+6]=I[i]>>>16;O[o+7]=I[i]>>>24}return O};var Sponge=function Sponge(_ref){var _this=this;var capacity=_ref.capacity,padding=_ref.padding;var keccak=(0,_permute[\"default\"])();var stateSize=200;var blockSize=capacity/8;var queueSize=stateSize-capacity/4;var queueOffset=0;var state=new Uint32Array(stateSize/4);var queue=_buffer.Buffer.allocUnsafe(queueSize);this.absorb=function(buffer){for(var i=0;i<buffer.length;i++){queue[queueOffset]=buffer[i];queueOffset+=1;if(queueOffset>=queueSize){xorWords(queue,state);keccak(state);queueOffset=0}}return _this};this.squeeze=function(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var output={buffer:options.buffer||_buffer.Buffer.allocUnsafe(blockSize),padding:options.padding||padding,queue:_buffer.Buffer.allocUnsafe(queue.length),state:new Uint32Array(state.length)};queue.copy(output.queue);for(var i=0;i<state.length;i++){output.state[i]=state[i]}output.queue.fill(0,queueOffset);output.queue[queueOffset]|=output.padding;output.queue[queueSize-1]|=128;xorWords(output.queue,output.state);for(var offset=0;offset<output.buffer.length;offset+=queueSize){keccak(output.state);readWords(output.state,output.buffer.slice(offset,offset+queueSize))}return output.buffer};this.reset=function(){queue.fill(0);state.fill(0);queueOffset=0;return _this};return this};var _default=Sponge;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=exports.SHAKE=exports.SHA3Hash=exports.SHA3=exports.Keccak=void 0;var _buffer=require(\"buffer\");var _sponge=_interopRequireDefault(require(\"./sponge\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var createHash=function createHash(_ref){var allowedSizes=_ref.allowedSizes,padding=_ref.padding;return function Hash(){var _this=this;var size=arguments.length>0&&arguments[0]!==undefined?arguments[0]:512;if(!this||this.constructor!==Hash){return new Hash(size)}if(allowedSizes&&!allowedSizes.includes(size)){throw new Error(\"Unsupported hash length\")}var sponge=new _sponge[\"default\"]({capacity:size});this.update=function(input){var encoding=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"utf8\";if(_buffer.Buffer.isBuffer(input)){sponge.absorb(input);return _this}if(typeof input===\"string\"){return _this.update(_buffer.Buffer.from(input,encoding))}throw new TypeError(\"Not a string or buffer\")};this.digest=function(){var formatOrOptions=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"binary\";var options=typeof formatOrOptions===\"string\"?{format:formatOrOptions}:formatOrOptions;var buffer=sponge.squeeze({buffer:options.buffer,padding:options.padding||padding});if(options.format&&options.format!==\"binary\"){return buffer.toString(options.format)}return buffer};this.reset=function(){sponge.reset();return _this};return this}};var Keccak=createHash({allowedSizes:[224,256,384,512],padding:1});exports.Keccak=Keccak;var SHA3=createHash({allowedSizes:[224,256,384,512],padding:6});exports.SHA3=SHA3;var SHAKE=createHash({allowedSizes:[128,256],padding:31});exports.SHAKE=SHAKE;var SHA3Hash=Keccak;exports.SHA3Hash=SHA3Hash;SHA3.SHA3Hash=SHA3Hash;var _default=SHA3;exports[\"default\"]=_default;","// Extracted from https://github.com/crypto-browserify/ripemd160\nconst ARRAY16 = new Array(16);\nconst zl = initU8Array([\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n    3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n    1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n    4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]);\nconst zr = initU8Array([\n    5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n    6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n    15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n    8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n    12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]);\nconst sl = initU8Array([\n    11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n    7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n    11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n    11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n    9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]);\nconst sr = initU8Array([\n    8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n    9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n    9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n    15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n    8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]);\nconst hl = initU32Array([0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]);\nconst hr = initU32Array([0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]);\nfunction rotl(x, n) {\n    return (x << n) | (x >>> (32 - n));\n}\nfunction fn1(a, b, c, d, e, m, k, s) {\n    return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0;\n}\nfunction fn2(a, b, c, d, e, m, k, s) {\n    return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0;\n}\nfunction fn3(a, b, c, d, e, m, k, s) {\n    return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0;\n}\nfunction fn4(a, b, c, d, e, m, k, s) {\n    return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0;\n}\nfunction fn5(a, b, c, d, e, m, k, s) {\n    return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0;\n}\nfunction readInt32LE(buffer, offset) {\n    offset >>>= 0;\n    return (buffer[offset])\n        | (buffer[offset + 1] << 8)\n        | (buffer[offset + 2] << 16)\n        | (buffer[offset + 3] << 24);\n}\nfunction writeUInt32LE(buffer, value, offset) {\n    value = +value;\n    offset >>>= 0;\n    buffer[offset + 3] = (value >>> 24);\n    buffer[offset + 2] = (value >>> 16);\n    buffer[offset + 1] = (value >>> 8);\n    buffer[offset] = (value & 0xff);\n    return offset + 4;\n}\nfunction writeInt32LE(buffer, value, offset) {\n    value = +value;\n    offset >>>= 0;\n    buffer[offset] = (value & 0xff);\n    buffer[offset + 1] = (value >>> 8);\n    buffer[offset + 2] = (value >>> 16);\n    buffer[offset + 3] = (value >>> 24);\n    return offset + 4;\n}\nfunction initU32Array(data) {\n    if (typeof Uint32Array !== 'undefined') {\n        return new Uint32Array(data);\n    }\n    else {\n        return data;\n    }\n}\nfunction initU8Array(data) {\n    if (typeof Uint8Array !== 'undefined') {\n        return new Uint8Array(data);\n    }\n    else {\n        return data;\n    }\n}\nfunction createU8Array(size) {\n    if (typeof Uint8Array !== 'undefined') {\n        return new Uint8Array(size);\n    }\n    else {\n        return new Array(size);\n    }\n}\nexport class RIPEMD160 {\n    constructor() {\n        this._block = createU8Array(64);\n        this._blockSize = 64;\n        this._blockOffset = 0;\n        this._length = [0, 0, 0, 0];\n        this._finalized = false;\n        this._a = 0x67452301;\n        this._b = 0xefcdab89;\n        this._c = 0x98badcfe;\n        this._d = 0x10325476;\n        this._e = 0xc3d2e1f0;\n    }\n    update(data) {\n        if (this._finalized)\n            throw new Error('Digest already called');\n        // consume data\n        const block = this._block;\n        let offset = 0;\n        while (this._blockOffset + data.length - offset >= this._blockSize) {\n            for (let i = this._blockOffset; i < this._blockSize;)\n                block[i++] = data[offset++];\n            this._update();\n            this._blockOffset = 0;\n        }\n        while (offset < data.length)\n            block[this._blockOffset++] = data[offset++];\n        // update length\n        for (let j = 0, carry = data.length * 8; carry > 0; ++j) {\n            this._length[j] += carry;\n            carry = (this._length[j] / 0x0100000000) | 0;\n            if (carry > 0)\n                this._length[j] -= 0x0100000000 * carry;\n        }\n        return this;\n    }\n    _update() {\n        const words = ARRAY16;\n        for (let j = 0; j < 16; ++j) {\n            words[j] = readInt32LE(this._block, j * 4);\n        }\n        let al = this._a | 0;\n        let bl = this._b | 0;\n        let cl = this._c | 0;\n        let dl = this._d | 0;\n        let el = this._e | 0;\n        let ar = this._a | 0;\n        let br = this._b | 0;\n        let cr = this._c | 0;\n        let dr = this._d | 0;\n        let er = this._e | 0;\n        // computation\n        for (let i = 0; i < 80; i += 1) {\n            let tl;\n            let tr;\n            if (i < 16) {\n                tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i]);\n                tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i]);\n            }\n            else if (i < 32) {\n                tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i]);\n                tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i]);\n            }\n            else if (i < 48) {\n                tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i]);\n                tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i]);\n            }\n            else if (i < 64) {\n                tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i]);\n                tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i]);\n            }\n            else { // if (i<80) {\n                tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i]);\n                tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i]);\n            }\n            al = el;\n            el = dl;\n            dl = rotl(cl, 10);\n            cl = bl;\n            bl = tl;\n            ar = er;\n            er = dr;\n            dr = rotl(cr, 10);\n            cr = br;\n            br = tr;\n        }\n        // update state\n        const t = (this._b + cl + dr) | 0;\n        this._b = (this._c + dl + er) | 0;\n        this._c = (this._d + el + ar) | 0;\n        this._d = (this._e + al + br) | 0;\n        this._e = (this._a + bl + cr) | 0;\n        this._a = t;\n    }\n    digest() {\n        if (this._finalized) {\n            throw new Error('Digest already called');\n        }\n        this._finalized = true;\n        // create padding and handle blocks\n        this._block[this._blockOffset++] = 0x80;\n        if (this._blockOffset > 56) {\n            this._block.fill(0, this._blockOffset, 64);\n            this._update();\n            this._blockOffset = 0;\n        }\n        this._block.fill(0, this._blockOffset, 56);\n        writeUInt32LE(this._block, this._length[0], 56);\n        writeUInt32LE(this._block, this._length[1], 60);\n        this._update();\n        // produce result\n        const buffer = createU8Array(20);\n        writeInt32LE(buffer, this._a, 0);\n        writeInt32LE(buffer, this._b, 4);\n        writeInt32LE(buffer, this._c, 8);\n        writeInt32LE(buffer, this._d, 12);\n        writeInt32LE(buffer, this._e, 16);\n        // reset state\n        this._block.fill(0);\n        this._blockOffset = 0;\n        for (let i = 0; i < 4; ++i) {\n            this._length[i] = 0;\n        }\n        return buffer;\n    }\n}\nexport default RIPEMD160;\n","function t(t){return t&&\"object\"==typeof t&&\"default\"in t?t.default:t}var r=require(\"sha3\"),e=t(require(\"base-x\")),n=require(\"safe-buffer\"),i=t(require(\"big-integer\")),o=t(require(\"bs58\")),f=require(\"ripemd160-min\"),u=require(\"blakejs/blake2b\"),s=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",a=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\"],h=function(t){for(var r=new ArrayBuffer(5*t.length/8),e=new Uint8Array(r),n=0;n<t.length/8;n++){for(var i=[0,0,0,0,0,0,0,0],o=0;o<8;++o)i[o]=s.indexOf(t[8*n+o]);e[5*n+0]=i[0]<<3|i[1]>>2,e[5*n+1]=(3&i[1])<<6|i[2]<<1|i[3]>>4,e[5*n+2]=(15&i[3])<<4|i[4]>>1,e[5*n+3]=(1&i[4])<<7|i[5]<<2|i[6]>>3,e[5*n+4]=(7&i[6])<<5|i[7]}return Buffer.from(e)};function c(t,r){this._block=n.Buffer.alloc(t),this._finalSize=r,this._blockSize=t,this._len=0}c.prototype.update=function(t,r){\"string\"==typeof t&&(t=n.Buffer.from(t,r=r||\"utf8\"));for(var e=this._block,i=this._blockSize,o=t.length,f=this._len,u=0;u<o;){for(var s=f%i,a=Math.min(o-u,i-s),h=0;h<a;h++)e[s+h]=t[u+h];u+=a,(f+=a)%i==0&&this._update(e)}return this._len+=o,this},c.prototype.digest=function(t){var r=this._len%this._blockSize;this._block[r]=128,this._block.fill(0,r+1),r>=this._finalSize&&(this._update(this._block),this._block.fill(0));var e=8*this._len;if(e<=4294967295)this._block.writeUInt32BE(e,this._blockSize-4);else{var n=(4294967295&e)>>>0;this._block.writeUInt32BE((e-n)/4294967296,this._blockSize-8),this._block.writeUInt32BE(n,this._blockSize-4)}this._update(this._block);var i=this._hash();return t?i.toString(t):i},c.prototype._update=function(){throw new Error(\"_update must be implemented by subclass\")};var l,d,p=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],v=new Array(64);function y(){this.init(),this._w=v,c.call(this,64,56)}function g(t,r,e){return e^t&(r^e)}function w(t,r,e){return t&r|e&(t|r)}function m(t){return(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10)}function b(t){return(t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7)}function _(t){return(t>>>7|t<<25)^(t>>>18|t<<14)^t>>>3}function x(t){return void 0!==t.length}l=y,(d=c)&&(l.super_=d,l.prototype=Object.create(d.prototype,{constructor:{value:l,enumerable:!1,writable:!0,configurable:!0}})),y.prototype.init=function(){return this._a=1779033703,this._b=3144134277,this._c=1013904242,this._d=2773480762,this._e=1359893119,this._f=2600822924,this._g=528734635,this._h=1541459225,this},y.prototype._update=function(t){for(var r,e=this._w,n=0|this._a,i=0|this._b,o=0|this._c,f=0|this._d,u=0|this._e,s=0|this._f,a=0|this._g,h=0|this._h,c=0;c<16;++c)e[c]=t.readInt32BE(4*c);for(;c<64;++c)e[c]=0|(((r=e[c-2])>>>17|r<<15)^(r>>>19|r<<13)^r>>>10)+e[c-7]+_(e[c-15])+e[c-16];for(var l=0;l<64;++l){var d=h+b(u)+g(u,s,a)+p[l]+e[l]|0,v=m(n)+w(n,i,o)|0;h=a,a=s,s=u,u=f+d|0,f=o,o=i,i=n,n=d+v|0}this._a=n+this._a|0,this._b=i+this._b|0,this._c=o+this._c|0,this._d=f+this._d|0,this._e=u+this._e|0,this._f=s+this._f|0,this._g=a+this._g|0,this._h=h+this._h|0},y.prototype._hash=function(){var t=n.Buffer.allocUnsafe(32);return t.writeInt32BE(this._a,0),t.writeInt32BE(this._b,4),t.writeInt32BE(this._c,8),t.writeInt32BE(this._d,12),t.writeInt32BE(this._e,16),t.writeInt32BE(this._f,20),t.writeInt32BE(this._g,24),t.writeInt32BE(this._h,28),t};var E=new(function(){function t(t){this.sha256=t.sha256,this.alphabet=t.alphabet,this.codec=e(this.alphabet),this.base=this.alphabet.length}var r=t.prototype;return r.encodeChecked=function(t){var r=this.sha256(this.sha256(t)).slice(0,4);return this.encodeRaw(Buffer.from(function(){for(var t=[],r=arguments.length,e=new Array(r),n=0;n<r;n++)e[n]=arguments[n];return e.forEach(function(r){if(x(r))for(var e=0;e<r.length;e++)t.push(r[e]);else t.push(r)}),t}(t,r)))},r.encodeRaw=function(t){return this.codec.encode(t)},r.decodeChecked=function(t){var r=this.decodeRaw(t);if(r.length<5)throw new Error(\"invalid_input_size: decoded data must have length >= 5\");if(!this.verifyCheckSum(r))throw new Error(\"checksum_invalid\");return r.slice(0,-4)},r.decodeRaw=function(t){return this.codec.decode(t)},r.verifyCheckSum=function(t){return function(t,r){if(t.length!==r.length)return!1;for(var e=0;e<t.length;e++)if(t[e]!==r[e])return!1;return!0}(this.sha256(this.sha256(t.slice(0,-4))).slice(0,4),t.slice(-4))},t}())({sha256:function(t){return(new y).update(Buffer.from(t)).digest()},alphabet:\"rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz\"}),B=function(t){return\"0x\"===t.slice(0,2)?t.slice(2):t},I=function(t,e){if(void 0===e&&(e=null),\"string\"!=typeof t)throw new Error(\"stripHexPrefix param must be type 'string', is currently type \"+typeof t+\".\");for(var n,i=B(t).toLowerCase(),o=(n=(null!=e?e.toString()+\"0x\":\"\")+i,new r.Keccak(256).update(n).digest()).toString(\"hex\"),f=\"0x\",u=0;u<i.length;u++)f+=parseInt(o[u],16)>=8?i[u].toUpperCase():i[u];return f},A=function(t,r){if(!t)throw r},S=function(t,r){if(!Buffer.isBuffer(t))throw r},k=i.one,z=i.zero,C=i(3);function O(t,r){return t.and(k.shiftLeft(r)).notEquals(z)}function U(t){return i.fromArray(Array.prototype.slice.call(t,0),256)}function P(t,r){var e=t.toArray(256).value,n=r?Math.max(r-e.length,0):0;return Buffer.from([].concat(Array(n).fill(0),e))}function q(t,r,e,n){A(void 0!==n,\"Missing Z coordinate\"),this.curve=t,this.x=r,this.y=e,this.z=n,this._zInv=null,this.compressed=!0}Object.defineProperty(q.prototype,\"zInv\",{get:function(){return null===this._zInv&&(this._zInv=this.z.modInv(this.curve.p)),this._zInv}}),Object.defineProperty(q.prototype,\"affineX\",{get:function(){return this.x.multiply(this.zInv).mod(this.curve.p)}}),Object.defineProperty(q.prototype,\"affineY\",{get:function(){return this.y.multiply(this.zInv).mod(this.curve.p)}}),q.fromAffine=function(t,r,e){return new q(t,r,e,k)},q.prototype.equals=function(t){return t===this||(this.curve.isInfinity(this)?this.curve.isInfinity(t):this.curve.isInfinity(t)?this.curve.isInfinity(this):0===t.y.multiply(this.z).subtract(this.y.multiply(t.z)).mod(this.curve.p).compare(z)&&0===t.x.multiply(this.z).subtract(this.x.multiply(t.z)).mod(this.curve.p).compare(z))},q.prototype.negate=function(){var t=this.curve.p.subtract(this.y);return new q(this.curve,this.x,t,this.z)},q.prototype.add=function(t){if(this.curve.isInfinity(this))return t;if(this.curve.isInfinity(t))return this;var r=this.x,e=this.y,n=t.x,i=t.y.multiply(this.z).subtract(e.multiply(t.z)).mod(this.curve.p),o=n.multiply(this.z).subtract(r.multiply(t.z)).mod(this.curve.p);if(0===o.compare(z))return 0===i.compare(z)?this.twice():this.curve.infinity;var f=o.square(),u=f.multiply(o),s=r.multiply(f),a=i.square().multiply(this.z),h=a.subtract(s.shiftLeft(1)).multiply(t.z).subtract(u).multiply(o).mod(this.curve.p),c=s.multiply(C).multiply(i).subtract(e.multiply(u)).subtract(a.multiply(i)).multiply(t.z).add(i.multiply(u)).mod(this.curve.p),l=u.multiply(this.z).multiply(t.z).mod(this.curve.p);return new q(this.curve,h,c,l)},q.prototype.twice=function(){if(this.curve.isInfinity(this))return this;if(0===this.y.compare(z))return this.curve.infinity;var t=this.x,r=this.y,e=r.multiply(this.z).mod(this.curve.p),n=e.multiply(r).mod(this.curve.p),i=this.curve.a,o=t.square().multiply(C);0!==i.compare(z)&&(o=o.add(this.z.square().multiply(i)));var f=(o=o.mod(this.curve.p)).square().subtract(t.shiftLeft(3).multiply(n)).shiftLeft(1).multiply(e).mod(this.curve.p),u=o.multiply(C).multiply(t).subtract(n.shiftLeft(1)).shiftLeft(2).multiply(n).subtract(o.pow(3)).mod(this.curve.p),s=e.pow(3).shiftLeft(3).mod(this.curve.p);return new q(this.curve,f,u,s)},q.prototype.multiply=function(t){if(this.curve.isInfinity(this))return this;if(0===t.compare(z))return this.curve.infinity;for(var r=t,e=r.multiply(C),n=this.negate(),i=this,o=e.bitLength()-2;o>0;--o){var f=O(e,o),u=O(r,o);i=i.twice(),f!==u&&(i=i.add(f?this:n))}return i},q.prototype.multiplyTwo=function(t,r,e){for(var n=Math.max(t.bitLength(),e.bitLength())-1,i=this.curve.infinity,o=this.add(r);n>=0;){var f=O(t,n),u=O(e,n);i=i.twice(),f?i=i.add(u?o:this):u&&(i=i.add(r)),--n}return i},q.prototype.getEncoded=function(t){if(null==t&&(t=this.compressed),this.curve.isInfinity(this))return new Buffer(\"00\",\"hex\");var r,e=this.affineX,n=this.affineY,i=this.curve.pLength;return t?(r=new Buffer(1+i)).writeUInt8(n.isEven()?2:3,0):((r=new Buffer(1+i+i)).writeUInt8(4,0),P(n,i).copy(r,1+i)),P(e,i).copy(r,1),r},q.decodeFrom=function(t,r){var e,n=r.readUInt8(0),i=4!==n,o=Math.floor((t.p.bitLength()+7)/8),f=U(r.slice(1,1+o));if(i)A(r.length===o+1,\"Invalid sequence length\"),A(2===n||3===n,\"Invalid sequence tag\"),e=t.pointFromX(3===n,f);else{A(r.length===1+o+o,\"Invalid sequence length\");var u=U(r.slice(1+o));e=q.fromAffine(t,f,u)}return e.compressed=i,e},q.prototype.toString=function(){return this.curve.isInfinity(this)?\"(INFINITY)\":\"(\"+this.affineX.toString()+\",\"+this.affineY.toString()+\")\"};var L=i.zero,j=i.one;function R(t,r,e,n,i,o,f){this.p=t,this.a=r,this.b=e,this.G=q.fromAffine(this,n,i),this.n=o,this.h=f,this.infinity=new q(this,null,null,L),this.pOverFour=t.add(j).shiftRight(2),this.pLength=Math.floor((this.p.bitLength()+7)/8)}R.prototype.pointFromX=function(t,r){var e=r.pow(3).add(this.a.multiply(r)).add(this.b).mod(this.p).modPow(this.pOverFour,this.p),n=e;return e.isEven()^!t&&(n=this.p.subtract(n)),q.fromAffine(this,r,n)},R.prototype.isInfinity=function(t){return t===this.infinity||0===t.z.compare(L)&&0!==t.y.compare(L)},R.prototype.isOnCurve=function(t){if(this.isInfinity(t))return!0;var r=t.affineX,e=t.affineY,n=this.a,i=this.b,o=this.p;if(r.compare(L)<0||r.compareTo(o)>=0)return!1;if(e.compare(L)<0||e.compareTo(o)>=0)return!1;var f=e.square().mod(o),u=r.pow(3).add(n.multiply(r)).add(i).mod(o);return f.equals(u)},R.prototype.validate=function(t){A(!this.isInfinity(t),\"Point is at infinity\"),A(this.isOnCurve(t),\"Point is not on the curve\");var r=t.multiply(this.n);return A(this.isInfinity(r),\"Point is not a scalar multiple of G\"),!0};var M={p:\"fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\",a:\"00\",b:\"07\",n:\"fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\",h:\"01\",Gx:\"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\",Gy:\"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8\"};function F(t,e){return new r.SHA3(256).update(t).digest(e)}function T(t){return Buffer.from((new f.RIPEMD160).update(t).digest())}function D(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(S(t,\"expecting keyBuffer<Buffer>\"),\"sha256x2\"===r){var e=F(F(t)).slice(0,4);return o.encode(Buffer.concat([t,e]))}var n=[t];r&&n.push(Buffer.from(r));var i=T(Buffer.concat(n)).slice(0,4);return o.encode(Buffer.concat([t,i]))}function H(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;A(t,\"private key expected\");var e,n=new Buffer(o.decode(t)),i=n.slice(-4),f=n.slice(0,-4);if(\"sha256x2\"===r)e=F(F(f)).slice(0,4);else{var u=[f];r&&u.push(Buffer.from(r)),e=T(Buffer.concat(u)).slice(0,4)}if(i.toString(\"hex\")!==e.toString(\"hex\"))throw new Error(\"Invalid checksum, \"+\"\".concat(i.toString(\"hex\"),\" != \").concat(e.toString(\"hex\")));return f}var G=function(t){var r=M;if(!r)return null;var e=i(r.p,16),n=i(r.a,16),o=i(r.b,16),f=i(r.n,16),u=i(r.h,16);return new R(e,n,o,i(r.Gx,16),i(r.Gy,16),f,u)}();function N(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"EOS\";if(\"string\"==typeof t)return N.fromString(t,r);if(Buffer.isBuffer(t))return N.fromBuffer(t);if(\"object\"==typeof t&&t.Q)return N(t.Q);function e(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:t.compressed;return t.getEncoded(r)}function n(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"EOS\";return t+D(e())}function i(){return e().toString(\"hex\")}return{Q:t,toString:n,toBuffer:e,toHex:i}}N.isValid=function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"EOS\";try{return N(t,r),!0}catch(t){return!1}},N.fromBuffer=function(t){return N(q.decodeFrom(G,t))},N.fromString=function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"EOS\";try{return N.fromStringOrThrow(t,r)}catch(t){return null}},N.fromStringOrThrow=function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"EOS\",e=t.match(/^PUB_([A-Za-z0-9]+)_([A-Za-z0-9]+)$/);if(null===e){var n=new RegExp(\"^\"+r);return n.test(t)&&(t=t.substring(r.length)),N.fromBuffer(H(t))}var i=e[1],o=e[2];return N.fromBuffer(H(o,i))},N.fromHex=function(t){return N.fromBuffer(new Buffer(t,\"hex\"))},N.fromStringHex=function(t){return N.fromString(new Buffer(t,\"hex\"))};var X=e(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\"),K=X.encode,Y=X.decode,V=function(t){return void 0===t},Q={ed25519PublicKey:48,ed25519SecretSeed:144,preAuthTx:152,sha256Hash:184},Z=function(t){var r=Buffer.alloc(2);return r.writeUInt16LE(function(t,r){Buffer.isBuffer(t)||(t=new Buffer);for(var e=0,n=0;n<t.length;n++){var i=e>>>8&255;i^=255&t[n],e=e<<8&65535,e^=i^=i>>>4,e^=i=i<<5&65535,e^=i=i<<7&65535}return e}(t),0),r};function J(t){return(J=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function W(t,r){return(W=Object.setPrototypeOf||function(t,r){return t.__proto__=r,t})(t,r)}function $(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}function tt(t,r,e){return(tt=$()?Reflect.construct:function(t,r,e){var n=[null];n.push.apply(n,r);var i=new(Function.bind.apply(t,n));return e&&W(i,e.prototype),i}).apply(null,arguments)}function rt(t){var r=\"function\"==typeof Map?new Map:void 0;return(rt=function(t){if(null===t||-1===Function.toString.call(t).indexOf(\"[native code]\"))return t;if(\"function\"!=typeof t)throw new TypeError(\"Super expression must either be null or a function\");if(void 0!==r){if(r.has(t))return r.get(t);r.set(t,e)}function e(){return tt(t,arguments,J(this).constructor)}return e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),W(e,t)})(t)}var et=[0,1,2,42,43,68,69],nt=function(t){for(var r=new Uint8Array(t.length),e=0;e<t.length;e++)r[e]=t.charCodeAt(e);return r}(\"SS58PRE\"),it=function(t){var r,e;function n(){return t.apply(this,arguments)||this}return e=t,(r=n).prototype=Object.create(e.prototype),r.prototype.constructor=r,r.__proto__=e,n.prototype.toJSON=function(){return{_type:\"AccountIndex\",data:this+0}},n}(rt(Number));function ot(t,r){t.length||(t=[t]),r.length||(r=[r]);var e=new Uint8Array(t.length+r.length);return e.set(t),e.set(r,t.length),e}function ft(t){var r=new Error;this.name=r.name=\"ValidationError\",this.message=r.message=t,this.stack=r.stack}function ut(t,r){if(null==r&&(r=\"Assertion failed.\"),!t)throw new ft(r)}ft.prototype=Object.create(Error.prototype);var st=function(){function t(t,r){this.hi=0|t,this.lo=0|r}return t.prototype.ushrn32=function(t){var r=this.lo;return 0==(t&=63)||(t<32?(r>>>=t,r|=this.hi<<32-t):r=this.hi>>>t-32),r},t}(),at=Buffer.allocUnsafe(105),ht=\"qpzry9x8gf2tvdw0s3jn54khce6mua7l\",ct=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,15,-1,10,17,21,20,26,30,7,5,-1,-1,-1,-1,-1,-1,-1,29,-1,24,13,25,9,8,23,-1,18,22,31,27,19,-1,1,0,3,16,11,28,12,14,6,4,2,-1,-1,-1,-1,-1,-1,29,-1,24,13,25,9,8,23,-1,18,22,31,27,19,-1,1,0,3,16,11,28,12,14,6,4,2,-1,-1,-1,-1,-1],lt=new st(7,4294967295),dt=[new st(152,4072443489),new st(121,3077413346),new st(243,1046459332),new st(174,783016616),new st(30,1329849456)];function pt(t,r){var e=t,n=e.hi>>>3;e.hi&=lt.hi,e.lo&=lt.lo,e.hi<<=5,e.hi|=e.lo>>>27,e.lo<<=5;for(var i=0;i<dt.length;i++)n>>>i&1&&(e.hi^=dt[i].hi,e.lo^=dt[i].lo);return e.lo^=r,e}function vt(t,r,e,n,i,o,f){ut(Buffer.isBuffer(t)),ut(r>>>0===r),ut(Buffer.isBuffer(e)),ut(n>>>0===n),ut((255&i)===i),ut((255&o)===o),ut(\"boolean\"==typeof f);for(var u=(1<<o)-1,s=0,a=0;r<t.length;r++){var h=t[r];if(h>>>i!=0)throw new Error(\"Invalid bits.\");for(s=s<<i|h,a+=i;a>=o;)e[n++]=s>>>(a-=o)&u}if(f)a&&(e[n++]=s<<o-a&u);else if(a>=i||s<<o-a&u)throw new Error(\"Invalid bits.\");return ut(n<=e.length),e.slice(0,n)}var yt=function(t){function r(r){var e=r.slice(0,-4),n=r.slice(-4),i=t(e);if(!(n[0]^i[0]|n[1]^i[1]|n[2]^i[2]|n[3]^i[3]))return e}return{bs58Encode:function(r){var e=t(r);return o.encode(Buffer.concat([r,e],r.length+4))},bs58Decode:function(t){var e=r(o.decode(t));if(!e)throw new Error(\"Invalid checksum\");return e},decodeUnsafe:function(t){var e=o.decodeUnsafe(t);if(e)return r(e)}}}(function(t){var r=(new y).update(t).digest();return(new y).update(r).digest()}),gt=yt.bs58Decode,wt=yt.bs58Encode;exports.b32decode=h,exports.b32encode=function(t){var r=[],e=Math.floor(t.length/5),n=t.length%5;if(0!=n){for(var i=0;i<5-n;i++)t+=\"\\0\";e+=1}for(var o=0;o<e;o++)r.push(s.charAt(t.charCodeAt(5*o)>>3)),r.push(s.charAt((7&t.charCodeAt(5*o))<<2|t.charCodeAt(5*o+1)>>6)),r.push(s.charAt((63&t.charCodeAt(5*o+1))>>1)),r.push(s.charAt((1&t.charCodeAt(5*o+1))<<4|t.charCodeAt(5*o+2)>>4)),r.push(s.charAt((15&t.charCodeAt(5*o+2))<<1|t.charCodeAt(5*o+3)>>7)),r.push(s.charAt((127&t.charCodeAt(5*o+3))>>2)),r.push(s.charAt((3&t.charCodeAt(5*o+3))<<3|t.charCodeAt(5*o+4)>>5)),r.push(s.charAt(31&t.charCodeAt(5*o+4)));var f=0;1==n?f=6:2==n?f=4:3==n?f=3:4==n&&(f=1);for(var u=0;u<f;u++)r.pop();for(var a=0;a<f;a++)r.push(\"=\");return r.join(\"\")},exports.bs58Decode=gt,exports.bs58Encode=wt,exports.calculateChecksum=Z,exports.cashaddrDecode=function(t,r){void 0===r&&(r=\"bitcoincash\"),ut(\"string\"==typeof t),ut(\"string\"==typeof r);var e=function(t,r){if(ut(\"string\"==typeof t),t.length<8||t.length>196)throw new Error(\"Invalid cashaddr data length.\");for(var e=!1,n=!1,i=!1,o=0,f=0;f<t.length;f++){var u=t.charCodeAt(f);if(u>=97&&u<=122)e=!0;else if(u>=65&&u<=90)n=!0;else if(u>=48&&u<=57)i=!0;else{if(58!==u)throw new Error(\"Invalid cashaddr character.\");if(i||0===f||f>83)throw new Error(\"Invalid cashaddr prefix.\");if(0!==o)throw new Error(\"Invalid cashaddr separators.\");o=f}}if(n&&e)throw new Error(\"Invalid cashaddr casing.\");var s,a=new st(0,1);0===o?s=r.toLowerCase():(s=t.substring(0,o).toLowerCase(),o+=1);for(var h=0;h<s.length;h++)pt(a,31&(32|s.charCodeAt(h)));pt(a,0);var c=t.length-o;if(c<=8||c>112)throw new Error(\"Invalid cashaddr data length.\");for(var l=Buffer.allocUnsafe(c),d=o;d<t.length;d++){var p=t.charCodeAt(d),v=65408&p?-1:ct[p];if(-1===v)throw new Error(\"Invalid cashaddr character.\");pt(a,v),d+8<t.length&&(l[d-o]=v)}if(0!==a.hi||1!==a.lo||s!==r)throw new Error(\"Invalid cashaddr checksum.\");return[s,l.slice(0,-8)]}(t,r),n=e[0],i=e[1],o=5*i.length&7;if(o>=5)throw new Error(\"Invalid padding in data.\");if(i[i.length-1]&(1<<o)-1)throw new Error(\"Non zero padding.\");var f=vt(i,0,i,0,5,8,!1),u=f[0]>>>3&31,s=f.slice(1),a=20+4*(3&f[0]);if(4&f[0]&&(a*=2),a!==s.length)throw new Error(\"Invalid cashaddr data length.\");return{prefix:n,type:u,hash:s}},exports.cashaddrEncode=function(t,r,e){if(ut(\"string\"==typeof t),ut((15&r)===r,\"Invalid cashaddr type.\"),ut(Buffer.isBuffer(e)),0===t.length||t.length>83)throw new Error(\"Invalid cashaddr prefix.\");var n=function(t){switch(ut(t>>>0===t),t){case 20:return 0;case 24:return 1;case 28:return 2;case 32:return 3;case 40:return 4;case 48:return 5;case 56:return 6;case 64:return 7;default:throw new Error(\"Non standard length.\")}}(e.length),i=Buffer.allocUnsafe(e.length+1);return i[0]=r<<3|n,e.copy(i,1),function(t,r){ut(\"string\"==typeof t),ut(Buffer.isBuffer(r));for(var e=new st(0,1),n=\"\",i=!1,o=!1,f=0;f<t.length;f++){var u=t.charCodeAt(f);if(65280&u||u>>>5==0)throw new Error(\"Invalid cashaddr character.\");if(u>=97&&u<=122)o=!0;else if(u>=65&&u<=90)i=!0,u=u-65+97;else if(u>=48&&u<=57)throw new Error(\"Invalid cashaddr prefix.\");pt(e,31&u),n+=String.fromCharCode(u)}if(o&&i)throw new Error(\"Invalid cashaddr prefix.\");pt(e,0),n+=\":\";for(var s=0;s<r.length;s++){var a=r[s];if(a>>>5!=0)throw new Error(\"Invalid cashaddr value.\");pt(e,a),n+=ht[a]}for(var h=0;h<8;h++)pt(e,0);e.lo^=1;for(var c=0;c<8;c++){var l=31&e.ushrn32(5*(7-c));n+=ht[l]}return n}(t,vt(i,0,at,0,8,5,!0))},exports.codec=E,exports.decodeCheck=function(t,r){if(\"string\"!=typeof r)throw new TypeError(\"encoded argument must be of type String\");var e=Y(r),n=e[0],i=e.slice(0,-2),o=i.slice(1),f=e.slice(-2);if(r!==K(e))throw new Error(\"invalid encoded string\");var u=Q[t];if(V(u))throw new Error(t+' is not a valid version byte name.  expected one of \"accountId\" or \"seed\"');if(n!==u)throw new Error(\"invalid version byte. expected \"+u+\", got \"+n);if(!function(t,r){if(t.length!==r.length)return!1;if(0===t.length)return!0;for(var e=0;e<t.length;e+=1)if(t[e]!==r[e])return!1;return!0}(Z(i),f))throw new Error(\"invalid checksum\");return Buffer.from(o)},exports.encodeCheck=function(t,r){if(null===r||V(r))throw new Error(\"cannot encode null data\");var e=Q[t];if(V(e))throw new Error(t+' is not a valid version byte name.  expected one of \"ed25519PublicKey\", \"ed25519SecretSeed\", \"preAuthTx\", \"sha256Hash\"');r=Buffer.from(r);var n=Buffer.from([e]),i=Buffer.concat([n,r]),o=Z(i),f=Buffer.concat([i,o]);return K(f)},exports.eosPublicKey=N,exports.hex2a=function(t){for(var r=t.toString(),e=\"\",n=0;n<r.length;n+=2)e+=String.fromCharCode(parseInt(r.substr(n,2),16));return e},exports.isValid=function(t){var e=t.toString().toUpperCase().replace(/-/g,\"\");if(!e||40!==e.length)return!1;var n,i=function(t){for(var r=\"\",e=0;e<t.length;e++){var n=Math.round(t[e]).toString(16);1===n.length&&(n=\"0\"+n),r+=n}return r}(h(e));return n=Buffer.from(i.slice(0,42),\"hex\"),new r.Keccak(256).update(n).digest(\"hex\").toString().substr(0,8)===i.slice(42)},exports.isValidChecksumAddress=function(t,r){return function(t){return/^0x[0-9a-fA-F]{40}$/.test(t)}(t)&&I(t,r)===t},exports.ss58Decode=function(t,r){var e;void 0===r&&(r=0);try{e=o.decode(t)}catch(t){return null}if(-1===et.indexOf(e[0]))return null;if(e.length<3)return null;var n,i=e.length<=3?1:e.length<=5?2:e.length<=9?4:e.length<=17?8:32,f=e.length-1-i,s=e.slice(1,1+i);e.slice(1+e.length),32===i&&(n=s);var a=i<32?new it(function(t){var r=0,e=1;return t.forEach(function(t){r+=t*e,e*=256}),r}(s)):new Buffer.from(s);if(e[0]%1&&!n&&!r)return null;for(var h=u.blake2b(ot(nt,e[0]%1?n||r(a):e.slice(0,1+i))),c=0;c<f;++c)if(h[c]!==e[1+i+c])return null;return a},exports.ss58Encode=function(t,r,e,n,i){var f;if(void 0===r&&(r=42),void 0===e&&(e=null),void 0===n&&(n=null),-1===et.indexOf(r))throw new Error(\"Unknown ss58 address type\",r);if(\"number\"==typeof t||t instanceof it){var s=t<256?1:t<65536?2:t<1?4:8;if(-1===[1,2,4,8].indexOf(n=n||s))throw new Error(\"Invalid length\");if(n=Math.max(s,n),e&&\"number\"!=typeof e)throw new Error(\"Invalid checksum length\");switch(n){case 1:e=1;break;case 2:e=[1,2].indexOf(e)+1||1;break;case 4:e=[1,2,3,4].indexOf(e)+1||1;break;case 8:e=[1,2,3,4,5,6,7,8].indexOf(e)+1||1}f=function(t,r){var e=!1;t<0&&(t=-t-1,e=!0);for(var n=new Uint8Array(r),i=0;i<r;++i)n[i]=t%256,e&&(n[i]=255&~n[i]),t/=256;return n}(t,n)}else{if(!(t instanceof Uint8Array)||32!==t.length&&35!==t.length)throw new Error(\"Unknown item to encode as ss58. Passing back.\",t);e=2,i=f=35===t.length?t.slice(1,33):t}var a=u.blake2b(ot(nt,1&r?i:ot(r,f))),h=ot(ot(r,f),a.slice(0,e));return o.encode(Buffer.from(h))},exports.stripHexPrefix=B,exports.toChecksumAddress=I,exports.ua2hex=function(t){for(var r=\"\",e=0;e<t.length;e++){var n=t[e];r+=a[n>>>4],r+=a[15&n]}return r};\n//# sourceMappingURL=index.js.map\n","const alphabet = '13456789abcdefghijkmnopqrstuwxyz'\r\n\r\n/**\r\n * Encode provided Uint8Array using the Nano-specific Base-32 implementeation.\r\n * @param {Uint8Array} view Input buffer formatted as a Uint8Array\r\n * @returns {string}\r\n */\r\nfunction encode (view) {\r\n  if (view.constructor !== Uint8Array) {\r\n    throw new Error('View must be a Uint8Array!')\r\n  }\r\n  const length = view.length\r\n  const leftover = (length * 8) % 5\r\n  const offset = leftover === 0 ? 0 : 5 - leftover\r\n\r\n  let value = 0\r\n  let output = ''\r\n  let bits = 0\r\n\r\n  for (var i = 0; i < length; i++) {\r\n    value = (value << 8) | view[i]\r\n    bits += 8\r\n\r\n    while (bits >= 5) {\r\n      output += alphabet[(value >>> (bits + offset - 5)) & 31]\r\n      bits -= 5\r\n    }\r\n  }\r\n\r\n  if (bits > 0) {\r\n    output += alphabet[(value << (5 - (bits + offset))) & 31]\r\n  }\r\n\r\n  return output\r\n}\r\n\r\nfunction readChar (char) {\r\n  var idx = alphabet.indexOf(char)\r\n\r\n  if (idx === -1) {\r\n    throw new Error('Invalid character found: ' + char)\r\n  }\r\n\r\n  return idx\r\n}\r\n\r\n/**\r\n * Decodes a Nano-implementation Base32 encoded string into a Uint8Array\r\n * @param {string} input A Nano-Base32 encoded string\r\n * @returns {Uint8Array}\r\n */\r\nfunction decode (input) {\r\n  if (typeof input !== 'string') {\r\n    throw new Error('Input must be a string!')\r\n  }\r\n  var length = input.length\r\n  const leftover = (length * 5) % 8\r\n  const offset = leftover === 0 ? 0 : 8 - leftover\r\n\r\n  var bits = 0\r\n  var value = 0\r\n\r\n  var index = 0\r\n  var output = new Uint8Array(Math.ceil(length * 5 / 8))\r\n\r\n  for (var i = 0; i < length; i++) {\r\n    value = (value << 5) | readChar(input[i])\r\n    bits += 5\r\n\r\n    if (bits >= 8) {\r\n      output[index++] = (value >>> (bits + offset - 8)) & 255\r\n      bits -= 8\r\n    }\r\n  }\r\n  if (bits > 0) {\r\n    output[index++] = (value << (bits + offset - 8)) & 255\r\n  }\r\n\r\n  if (leftover !== 0) {\r\n    output = output.slice(1)\r\n  }\r\n  return output\r\n}\r\n\r\nmodule.exports = {\r\n  encode,\r\n  decode\r\n}\r\n","// https://gitlab.com/mjbecze/leb128 was ported so that we can reuse older version of bn.js (4.0.0) instead of the one leb128 uses (5.1)\n\n// Could not make import work for bn.js as @types/bn.js wasn't working\n/* tslint:disable:no-var-requires */\nconst Bn = require('bn.js')\n// https://gitlab.com/mjbecze/leb128/-/blob/master/stream.js\nclass Stream{\n  public buffer:Buffer\n  private bytesRead:number\n\n  constructor (buf:Buffer = Buffer.from([])) {\n    this.buffer = buf\n    this.bytesRead = 0\n  }\n\n  public read (size:number) {\n    const data = this.buffer.slice(0, size)\n    this.buffer = this.buffer.slice(size)\n    this.bytesRead += size\n    return data\n  }\n\n  public write (buf:[any]) {\n    this.buffer = Buffer.concat([this.buffer, Buffer.from(buf)])\n  }\n}\n\n// https://gitlab.com/mjbecze/leb128/-/blob/master/unsigned.js\nfunction read (stream: Stream) {\n  return readBn(stream).toString()\n}\n\nfunction readBn (stream: Stream) {\n  const num = new Bn(0)\n  let shift = 0\n  let byt\n  while (true) {\n    byt = stream.read(1)[0]\n    /* tslint:disable:no-bitwise */\n    num.ior(new Bn(byt & 0x7f).shln(shift))\n    if (byt >> 7 === 0) {\n      break\n    } else {\n      shift += 7\n    }\n  }\n  return num\n}\n\nfunction write (num:string | number, stream: Stream) {\n  const bigNum = new Bn(num)\n  while (true) {\n    const i = bigNum.maskn(7).toNumber()\n    bigNum.ishrn(7)\n    if (bigNum.isZero()) {\n      stream.write([i])\n      break\n    } else {\n      stream.write([i | 0x80])\n    }\n  }\n}\n\n/**\n * LEB128 encodeds an interger\n * @param {String|Number} num\n * @return {Buffer}\n */\nexport function encode (num: string | number ) {\n  const stream = new Stream()\n  write(num, stream)\n  return stream.buffer\n}\n\n/**\n * decodes a LEB128 encoded interger\n * @param {Buffer} buffer\n * @return {String}\n */\nexport function decode (buffer:Buffer) {\n  const stream = new Stream(buffer)\n  return read(stream)\n}\n","export class Address {\n  public str: Buffer;\n  constructor(str: Buffer) {\n    if (!str || str.length < 1) { throw new Error('Missing str in address') }\n    this.str = str\n  }\n\n  // https://beta.spec.filecoin.io/#appendix__address__protocol-indicator\n  public protocol(): number {\n    if (this.str.length < 1) {\n      throw Error('No address found.')\n    }\n\n    return this.str[0]\n  }\n\n  public payload(): Buffer {\n    if (this.str.length < 1) {\n      throw Error('No address found.')\n    }\n    return this.str.slice(1, this.str.length)\n  }\n}\n","// Ported from https://www.npmjs.com/package/@glif/filecoin-address to reduce file size\n\nimport { blake2b } from 'blakejs'\nimport { b32decode, b32encode, hex2a} from 'crypto-addr-codec';\nimport { decode as lebDecode, encode as lebEncode } from '../leb128/unsigned';\nimport { Address } from './address';\n\nfunction validateChecksum (ingest:Buffer, expect:Buffer){\n    const digest = getChecksum(ingest)\n    return Buffer.compare(Buffer.from(digest), expect)\n}\n\nfunction getChecksum (ingest:Buffer):Buffer {\n    return blake2b(ingest, null, 4)\n}\n\nfunction checkAddressString (address:string){\n    if (!address){throw Error('No bytes to validate.')}\n    if (address.length < 3){throw Error('Address is too short to validate.')}\n    if (address[0] !== 'f' && address[0] !== 't') {\n        throw Error('Unknown address network.')\n    }\n\n    switch (address[1]) {\n        case '0': {\n        if (address.length > 22){throw Error('Invalid ID address length.')}\n        break\n        }\n        case '1': {\n        if (address.length !== 41){throw Error('Invalid secp256k1 address length.')}\n        break\n        }\n        case '2': {\n        if (address.length !== 41){throw Error('Invalid Actor address length.')}\n        break\n        }\n        case '3': {\n        if (address.length !== 86){throw Error('Invalid BLS address length.')}\n        break\n        }\n        default: {\n            throw new Error('Invalid address protocol.')\n        }\n    }\n}\n\nfunction filDecode (address: string) {\n    checkAddressString(address)\n    const network = address[0]\n    const protocol = parseInt(address[1], 10)\n    const protocolByte = Buffer.from([protocol])\n    const raw = address.slice(2)\n\n    if (protocol === 0) {\n      return filNewAddress(protocol, Buffer.from(lebEncode(raw)))\n    }\n\n    const payloadChecksum = Buffer.from(b32decode(raw.toUpperCase()))\n    const { length } = payloadChecksum\n    const payload = payloadChecksum.slice(0, length - 4)\n    const checksum = payloadChecksum.slice(length - 4, length)\n    if (validateChecksum(Buffer.concat([protocolByte, payload]), checksum)) {\n        throw Error(\"Checksums don't match\")\n    }\n\n    const addressObj = filNewAddress(protocol, payload)\n    if (filEncode(network, addressObj) !== address){\n        throw Error(`Did not encode this address properly: ${address}`)\n    }\n    return addressObj\n}\n\n\nfunction filEncode (network:string, address:Address) {\n    if (!address || !address.str){throw Error('Invalid address')}\n    let addressString = ''\n    const payload = address.payload()\n    const protocol = address.protocol()\n\n    switch (protocol) {\n        case 0: {\n            const decoded = lebDecode(payload)\n            addressString = network + String(protocol) + decoded\n            break\n        }\n        default: {\n            const protocolByte = Buffer.from([protocol])\n            const toChecksum = Buffer.concat([protocolByte, payload])\n            const checksum = getChecksum(toChecksum)\n            const bytes = Buffer.concat([payload, Buffer.from(checksum)])\n            const bytes2a = hex2a(bytes.toString('hex'));\n            const bytes32encoded = b32encode(bytes2a).replace(/=/g, '').toLowerCase();\n            addressString = String(network) + String(protocol) + bytes32encoded\n            break\n        }\n    }\n    return addressString\n}\n\nfunction filNewAddress (protocol:number, payload:Buffer): Address {\n    const protocolByte = Buffer.from([protocol])\n    const input = Buffer.concat([protocolByte, payload])\n    return new Address(input)\n}\n  \nexport function filAddrEncoder(data: Buffer): string {\n    const address = filNewAddress(data[0], data.slice(1))\n    return filEncode('f', address).toString()\n}\n    \nexport function filAddrDecoder(data: string): Buffer {\n    return filDecode(data).str\n}    \n","import {\n  decode as bech32Decode,\n  encode as bech32Encode,\n  fromWords as bech32FromWords,\n  toWords as bech32ToWords,\n} from 'bech32';\nimport bigInt from 'big-integer';\nimport { blake2b } from 'blakejs'\nimport { decode as bs58DecodeNoCheck, encode as bs58EncodeNoCheck } from 'bs58';\n// @ts-ignore\nimport { createHash } from 'crypto';\nimport {\n  b32decode,\n  b32encode,\n  bs58Decode,\n  bs58Encode,\n  cashaddrDecode,\n  cashaddrEncode,\n  codec as xrpCodec,\n  decodeCheck as decodeEd25519PublicKey,\n  encodeCheck as encodeEd25519PublicKey,\n  eosPublicKey,\n  hex2a,\n  isValid as isValidXemAddress,\n  isValidChecksumAddress as rskIsValidChecksumAddress,\n  ss58Decode,\n  ss58Encode,\n  stripHexPrefix as rskStripHexPrefix,\n  toChecksumAddress as rskToChecksumAddress,\n} from 'crypto-addr-codec';\nimport { decode as nanoBase32Decode, encode as nanoBase32Encode } from 'nano-base32';\nimport { filAddrDecoder, filAddrEncoder } from './filecoin/index';\n\ntype EnCoder = (data: Buffer) => string;\ntype DeCoder = (data: string) => Buffer;\n\ntype base58CheckVersion = number[]\n\nexport interface IFormat {\n  coinType: number;\n  name: string;\n  encoder: (data: Buffer) => string;\n  decoder: (data: string) => Buffer;\n}\n\n// Support version field of more than one byte (e.g. Zcash)\nfunction makeBitcoinBase58CheckEncoder(p2pkhVersion: base58CheckVersion, p2shVersion: base58CheckVersion): (data: Buffer) => string {\n  return (data: Buffer) => {\n    let addr: Buffer;\n    switch (data.readUInt8(0)) {\n      case 0x76: // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (\n          data.readUInt8(1) !== 0xa9 ||\n          data.readUInt8(data.length - 2) !== 0x88 ||\n          data.readUInt8(data.length - 1) !== 0xac\n        ) {\n          throw Error('Unrecognised address format');\n        }\n        addr = Buffer.concat([Buffer.from(p2pkhVersion), data.slice(3, 3 + data.readUInt8(2))]);\n        // @ts-ignore\n        return bs58Encode(addr);\n      case 0xa9: // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (data.readUInt8(data.length - 1) !== 0x87) {\n          throw Error('Unrecognised address format');\n        }\n        addr = Buffer.concat([Buffer.from(p2shVersion), data.slice(2, 2 + data.readUInt8(1))]);\n        return bs58Encode(addr);\n      default:\n        throw Error('Unrecognised address format');\n    }\n  };\n}\n\n// Supports version field of more than one byte\n// NOTE: Assumes all versions in p2pkhVersions[] or p2shVersions[] will have the same length\nfunction makeBitcoinBase58CheckDecoder(p2pkhVersions: base58CheckVersion[], p2shVersions: base58CheckVersion[]): (data: string) => Buffer {\n  return (data: string) => {\n    const addr = bs58Decode(data);\n    // Checks if the first addr bytes are exactly equal to provided version field\n    const checkVersion = (version: base58CheckVersion) => {\n      return version.every((value: number, index: number) => index < addr.length && value === addr.readUInt8(index))\n    }\n    if (p2pkhVersions.some(checkVersion)) {\n      return Buffer.concat([Buffer.from([0x76, 0xa9, 0x14]), addr.slice(p2pkhVersions[0].length), Buffer.from([0x88, 0xac])]);\n    } else if (p2shVersions.some(checkVersion)) {\n      return Buffer.concat([Buffer.from([0xa9, 0x14]), addr.slice(p2shVersions[0].length), Buffer.from([0x87])]);\n    }\n    throw Error('Unrecognised address format');\n  };\n}\n\nconst bitcoinBase58Chain = (name: string, coinType: number, p2pkhVersions: base58CheckVersion[], p2shVersions: base58CheckVersion[]) => ({\n  coinType,\n  decoder: makeBitcoinBase58CheckDecoder(p2pkhVersions, p2shVersions),\n  encoder: makeBitcoinBase58CheckEncoder(p2pkhVersions[0], p2shVersions[0]),\n  name,\n});\n\nfunction makeBech32SegwitEncoder(hrp: string): (data: Buffer) => string {\n  return (data: Buffer) => {\n    let version = data.readUInt8(0);\n    if (version >= 0x51 && version <= 0x60) {\n      version -= 0x50;\n    } else if (version !== 0x00) {\n      throw Error('Unrecognised address format');\n    }\n\n    const words = [version].concat(bech32ToWords(data.slice(2, data.readUInt8(1) + 2)));\n    return bech32Encode(hrp, words);\n  };\n}\n\nfunction makeBech32SegwitDecoder(hrp: string): (data: string) => Buffer {\n  return (data: string) => {\n    const { prefix, words } = bech32Decode(data);\n    if (prefix !== hrp) {\n      throw Error('Unexpected human-readable part in bech32 encoded address');\n    }\n    const script = bech32FromWords(words.slice(1));\n    let version = words[0];\n    if (version > 0) {\n      version += 0x50;\n    }\n    return Buffer.concat([Buffer.from([version, script.length]), Buffer.from(script)]);\n  };\n}\n\nfunction makeBitcoinEncoder(hrp: string, p2pkhVersion: base58CheckVersion, p2shVersion: base58CheckVersion): (data: Buffer) => string {\n  const encodeBech32 = makeBech32SegwitEncoder(hrp);\n  const encodeBase58Check = makeBitcoinBase58CheckEncoder(p2pkhVersion, p2shVersion);\n  return (data: Buffer) => {\n    try {\n      return encodeBase58Check(data);\n    } catch {\n      return encodeBech32(data);\n    }\n  };\n}\n\nfunction makeBitcoinDecoder(hrp: string, p2pkhVersions: base58CheckVersion[], p2shVersions: base58CheckVersion[]): (data: string) => Buffer {\n  const decodeBech32 = makeBech32SegwitDecoder(hrp);\n  const decodeBase58Check = makeBitcoinBase58CheckDecoder(p2pkhVersions, p2shVersions);\n  return (data: string) => {\n    if (data.toLowerCase().startsWith(hrp + '1')) {\n      return decodeBech32(data);\n    } else {\n      return decodeBase58Check(data);\n    }\n  };\n}\n\nconst bitcoinChain = (\n  name: string,\n  coinType: number,\n  hrp: string,\n  p2pkhVersions: base58CheckVersion[],\n  p2shVersions: base58CheckVersion[],\n) => ({\n  coinType,\n  decoder: makeBitcoinDecoder(hrp, p2pkhVersions, p2shVersions),\n  encoder: makeBitcoinEncoder(hrp, p2pkhVersions[0], p2shVersions[0]),\n  name,\n});\n\n// Similar to makeBitcoinEncoder but:\n// - Uses Bech32 without SegWit https://zips.z.cash/zip-0173\n// - Supports version field of more than one byte\nfunction makeZcashEncoder(hrp: string, p2pkhVersion: base58CheckVersion, p2shVersion: base58CheckVersion): (data: Buffer) => string {\n  const encodeBech32 = makeBech32Encoder(hrp);\n  const encodeBase58Check = makeBitcoinBase58CheckEncoder(p2pkhVersion, p2shVersion);\n  return (data: Buffer) => {\n    try {\n      return encodeBase58Check(data);\n    } catch {\n      return encodeBech32(data);\n    }\n  };\n}\n\n// Similar to makeBitcoinDecoder but uses makeZcashBase58CheckDecoder to support version field of more than one byte\nfunction makeZcashDecoder(hrp: string, p2pkhVersions: base58CheckVersion[], p2shVersions: base58CheckVersion[]): (data: string) => Buffer {\n  const decodeBase58Check = makeBitcoinBase58CheckDecoder(p2pkhVersions, p2shVersions);\n  const decodeBech32 = makeBech32Decoder(hrp);\n  return (data: string) => {\n    if (data.toLowerCase().startsWith(hrp)) {\n      return decodeBech32(data);\n    } else {\n      return decodeBase58Check(data);\n    }\n  };\n}\n\nconst zcashChain = (\n  name: string,\n  coinType: number,\n  hrp: string,\n  p2pkhVersions: base58CheckVersion[],\n  p2shVersions: base58CheckVersion[],\n) => ({\n  coinType,\n  decoder: makeZcashDecoder(hrp, p2pkhVersions, p2shVersions),\n  encoder: makeZcashEncoder(hrp, p2pkhVersions[0], p2shVersions[0]),\n  name,\n});\n\nfunction encodeCashAddr(data: Buffer): string {\n  switch (data.readUInt8(0)) {\n    case 0x76: // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n      if (\n        data.readUInt8(1) !== 0xa9 ||\n        data.readUInt8(data.length - 2) !== 0x88 ||\n        data.readUInt8(data.length - 1) !== 0xac\n      ) {\n        throw Error('Unrecognised address format');\n      }\n      return cashaddrEncode('bitcoincash', 0, data.slice(3, 3 + data.readUInt8(2)));\n    case 0xa9: // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n      if (data.readUInt8(data.length - 1) !== 0x87) {\n        throw Error('Unrecognised address format');\n      }\n      return cashaddrEncode('bitcoincash', 1, data.slice(2, 2 + data.readUInt8(1)));\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\nfunction decodeCashAddr(data: string): Buffer {\n  const { prefix, type, hash } = cashaddrDecode(data);\n  if (type === 0) {\n    return Buffer.concat([Buffer.from([0x76, 0xa9, 0x14]), Buffer.from(hash), Buffer.from([0x88, 0xac])]);\n  } else if (type === 1) {\n    return Buffer.concat([Buffer.from([0xa9, 0x14]), Buffer.from(hash), Buffer.from([0x87])]);\n  }\n  throw Error('Unrecognised address format');\n}\n\nfunction decodeBitcoinCash(data: string): Buffer {\n  const decodeBase58Check = makeBitcoinBase58CheckDecoder([[0x00]], [[0x05]]);\n  try {\n    return decodeBase58Check(data);\n  } catch {\n    return decodeCashAddr(data);\n  }\n}\n\nfunction makeChecksummedHexEncoder(chainId?: number) {\n  return (data: Buffer) => rskToChecksumAddress(data.toString('hex'), chainId || null);\n}\n\nfunction makeChecksummedHexDecoder(chainId?: number) {\n  return (data: string) => {\n    const stripped = rskStripHexPrefix(data);\n    if (\n      !rskIsValidChecksumAddress(data, chainId || null) &&\n      stripped !== stripped.toLowerCase() &&\n      stripped !== stripped.toUpperCase()\n    ) {\n      throw Error('Invalid address checksum');\n    }\n    return Buffer.from(rskStripHexPrefix(data), 'hex');\n  };\n}\n\nconst hexChecksumChain = (name: string, coinType: number, chainId?: number) => ({\n  coinType,\n  decoder: makeChecksummedHexDecoder(chainId),\n  encoder: makeChecksummedHexEncoder(chainId),\n  name,\n});\n\nfunction makeBech32Encoder(prefix: string) {\n  return (data: Buffer) => bech32Encode(prefix, bech32ToWords(data));\n}\n\nfunction makeBech32Decoder(currentPrefix: string) {\n  return (data: string) => {\n    const { prefix, words } = bech32Decode(data);\n    if (prefix !== currentPrefix) {\n      throw Error('Unrecognised address format');\n    }\n    return Buffer.from(bech32FromWords(words));\n  };\n}\n\nconst bech32Chain = (name: string, coinType: number, prefix: string) => ({\n  coinType,\n  decoder: makeBech32Decoder(prefix),\n  encoder: makeBech32Encoder(prefix),\n  name,\n});\n\n\nfunction b32encodeXemAddr(data: Buffer): string {\n  return b32encode(hex2a(data.toString('hex')));\n}\n\nfunction b32decodeXemAddr(data: string): Buffer {\n  if (!isValidXemAddress(data)) {\n    throw Error('Unrecognised address format');\n  }\n  const address = data\n    .toString()\n    .toUpperCase()\n    .replace(/-/g, '');\n  return b32decode(address);\n}\n\nfunction eosAddrEncoder(data: Buffer): string {\n  if (!eosPublicKey.isValid(data)) {\n    throw Error('Unrecognised address format');\n  }\n  return eosPublicKey.fromHex(data).toString();\n}\n\nfunction eosAddrDecoder(data: string): Buffer {\n  if (!eosPublicKey.isValid(data)) {\n    throw Error('Unrecognised address format');\n  }\n  return eosPublicKey(data).toBuffer();\n}\n\nfunction ksmAddrEncoder(data: Buffer): string {\n  return ss58Encode(Uint8Array.from(data), 2);\n}\n\nfunction dotAddrEncoder(data: Buffer): string {\n  return ss58Encode(Uint8Array.from(data), 0);\n}\n\nfunction ksmAddrDecoder(data: string): Buffer {\n  return new Buffer(ss58Decode(data));\n}\n\nfunction ontAddrEncoder(data: Buffer): string {\n  return bs58Encode(Buffer.concat([Buffer.from([0x17]), data]))\n}\n\nfunction ontAddrDecoder(data: string): Buffer {\n  const address = bs58Decode(data)\n\n  switch (address.readUInt8(0)) {\n   case 0x17:\n     return address.slice(1);\n\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\nfunction strDecoder(data: string): Buffer {\n  return decodeEd25519PublicKey('ed25519PublicKey', data);\n}\n\nfunction strEncoder(data: Buffer): string {\n  return encodeEd25519PublicKey('ed25519PublicKey', data);\n}\n\n// Referenced from the followings\n// https://tezos.stackexchange.com/questions/183/base58-encoding-decoding-of-addresses-in-micheline\n// https://tezos.gitlab.io/api/p2p.html?highlight=contract_id#contract-id-22-bytes-8-bit-tag\nfunction tezosAddressEncoder(data: Buffer): string {\n  if (data.length !== 22 && data.length !== 21) {\n    throw Error('Unrecognised address format');\n  }\n\n  let prefix: Buffer;\n  switch (data.readUInt8(0)) {\n    case 0x00:\n      if (data.readUInt8(1) === 0x00) {\n        prefix = Buffer.from([0x06, 0xa1, 0x9f]); // prefix tz1 equal 06a19f\n      } else if (data.readUInt8(1) === 0x01) {\n        prefix = Buffer.from([0x06, 0xa1, 0xa1]); // prefix tz2 equal 06a1a1\n      } else if (data.readUInt8(1) === 0x02) {\n        prefix = Buffer.from([0x06, 0xa1, 0xa4]); // prefix tz3 equal 06a1a4\n      } else {\n        throw Error('Unrecognised address format');\n      }\n      return bs58Encode(Buffer.concat([prefix, data.slice(2)]));\n    case 0x01:\n      prefix = Buffer.from([0x02, 0x5a, 0x79]); // prefix KT1 equal 025a79\n      return bs58Encode(Buffer.concat([prefix, data.slice(1, 21)]));\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\nfunction tezosAddressDecoder(data: string): Buffer {\n  const address = bs58Decode(data).slice(3);\n  switch (data.substring(0, 3)) {\n    case 'tz1':\n      return Buffer.concat([Buffer.from([0x00, 0x00]), address]);\n    case 'tz2':\n      return Buffer.concat([Buffer.from([0x00, 0x01]), address]);\n    case 'tz3':\n      return Buffer.concat([Buffer.from([0x00, 0x02]), address]);\n    case 'KT1':\n      return Buffer.concat([Buffer.from([0x01]), address, Buffer.from([0x00])]);\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\n// Reference from js library:\n// https://github.com/hashgraph/hedera-sdk-java/blob/120d98ac9cd167db767ed77bb52cefc844b09fc9/src/main/java/com/hedera/hashgraph/sdk/SolidityUtil.java#L26\nfunction hederaAddressEncoder(data: Buffer): string {\n  if (data.length !== 20) {\n    throw Error('Unrecognised address format');\n  }\n\n  const view = new DataView(data.buffer, 0);\n\n  const shard = view.getUint32(0);\n  const realm = view.getBigUint64(4);\n  const account = view.getBigUint64(12);\n\n  return [shard, realm, account].join('.');\n}\n\n// Reference from js library:\n// https://github.com/hashgraph/hedera-sdk-java/blob/120d98ac9cd167db767ed77bb52cefc844b09fc9/src/main/java/com/hedera/hashgraph/sdk/SolidityUtil.java#L26\nfunction hederaAddressDecoder(data: string): Buffer {\n  const buffer = Buffer.alloc(20);\n  const view = new DataView(buffer.buffer, 0, 20);\n\n  const components = data.split('.');\n  if (components.length !== 3) {\n    throw Error('Unrecognised address format');\n  }\n\n  const shard = Number(components[0]);\n  const realm = BigInt(components[1]);\n  const account = BigInt(components[2]);\n\n  view.setUint32(0, shard);\n  view.setBigUint64(4, realm);\n  view.setBigUint64(12, account);\n\n  return buffer;\n}\n\n// Reference from Lisk validator\n// https://github.com/LiskHQ/lisk-sdk/blob/master/elements/lisk-validator/src/validation.ts#L202\nfunction validateLiskAddress(address: string) {\n  if (address.length < 2 || address.length > 22) {\n    throw new Error('Address length does not match requirements. Expected between 2 and 22 characters.');\n  }\n\n  if (address[address.length - 1] !== 'L') {\n    throw new Error('Address format does not match requirements. Expected \"L\" at the end.');\n  }\n\n  if (address.includes('.')) {\n    throw new Error('Address format does not match requirements. Address includes invalid character: `.`.');\n  }\n}\n\nfunction liskAddressEncoder(data: Buffer): string {\n  const address = `${bigInt(data.toString('hex'), 16).toString(10)}L`;\n\n  return address;\n}\n\nfunction liskAddressDecoder(data: string): Buffer {\n  validateLiskAddress(data);\n\n  return Buffer.from(bigInt(data.slice(0, -1)).toString(16), 'hex');\n}\n  \n// Reference:\n// https://github.com/handshake-org/hsd/blob/c85d9b4c743a9e1c9577d840e1bd20dee33473d3/lib/primitives/address.js#L297\nfunction hnsAddressEncoder(data: Buffer): string {\n  if (data.length !== 20) {\n    throw Error('P2WPKH must be 20 bytes');\n  }\n\n  const version = 0;\n  const words = [version].concat(bech32ToWords(data));\n  return bech32Encode('hs', words);\n}\n\n// Reference:\n// https://github.com/handshake-org/hsd/blob/c85d9b4c743a9e1c9577d840e1bd20dee33473d3/lib/primitives/address.js#L225\nfunction hnsAddressDecoder(data: string): Buffer {\n  const { prefix, words } = bech32Decode(data);\n\n  if (prefix !== 'hs') {\n    throw Error('Unrecognised address format');\n  }\n\n  const version = words[0];\n  const hash = bech32FromWords(words.slice(1));\n\n  if (version !== 0) {\n    throw Error('Bad program version');\n  }\n\n  if (hash.length !== 20) {\n    throw Error('Witness program hash is the wrong size');\n  }\n\n  return Buffer.from(hash);\n}\n\n// Referenced from following\n// https://github.com/icon-project/icon-service/blob/master/iconservice/base/address.py#L219\nfunction icxAddressEncoder(data: Buffer): string {\n  if (data.length !== 21) {\n    throw Error('Unrecognised address format');\n  }\n  switch (data.readUInt8(0)) {\n    case 0x00:\n      return 'hx' + data.slice(1).toString('hex');\n    case 0x01:\n      return 'cx' + data.slice(1).toString('hex');\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\n// Referenced from following\n// https://github.com/icon-project/icon-service/blob/master/iconservice/base/address.py#L238\nfunction icxAddressDecoder(data: string): Buffer {\n  const prefix = data.slice(0, 2)\n  const body = data.slice(2)\n  switch (prefix) {\n    case 'hx':\n      return Buffer.concat([Buffer.from([0x00]), Buffer.from(body, 'hex')]);\n    case 'cx':\n      return Buffer.concat([Buffer.from([0x01]), Buffer.from(body, 'hex')]);\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\nfunction steemAddressEncoder(data: Buffer): string {  \n  const RIPEMD160 = require('ripemd160');\n\n  const checksum = new RIPEMD160().update(data).digest();\n\n  return 'STM' + bs58EncodeNoCheck(Buffer.concat([data, checksum.slice(0, 4)]));\n}\n\nfunction steemAddressDecoder(data: string): Buffer {\n  const RIPEMD160 = require('ripemd160');\n\n  const prefix = data.slice(0, 3);\n  if (prefix !== 'STM') {\n    throw Error('Unrecognised address format');\n  }\n\n  data = data.slice(3);\n\n  const buffer: Buffer = bs58DecodeNoCheck(data);\n  const checksum = buffer.slice(-4);\n  const key = buffer.slice(0, -4);\n  const checksumVerify = new RIPEMD160().update(key).digest().slice(0, 4);\n\n  if(!checksumVerify.equals(checksum)) {\n    throw Error('Invalid checksum');\n  }\n\n  return Buffer.from(key);\n}\n\nconst AlgoChecksumByteLength = 4;\nconst AlgoAddressByteLength = 36;\n\n// Returns 4 last byte (8 chars) of sha512_256(publicKey)\nfunction algoChecksum(pk: Buffer): string {\n  return createHash('SHA512-256')\n    .update(pk)\n    .digest('hex')\n    .substr(-AlgoChecksumByteLength * 2);\n}\n\nfunction algoDecode(data: string): Buffer {\n  const decoded = b32decode(data);\n\n  if (decoded.length !== AlgoAddressByteLength) {\n    throw Error('Unrecognised address format');\n  }\n\n  const publicKey = decoded.slice(0, -AlgoChecksumByteLength);\n  const checksum = decoded.slice(-AlgoChecksumByteLength);\n  const expectedChecksum = algoChecksum(publicKey);\n\n  if (checksum.toString('hex') !== expectedChecksum) {\n    throw Error('Unrecognised address format');\n  }\n\n  return publicKey;\n}\n\nfunction algoEncode(data: Buffer): string {\n  // Calculate publicKey checksum\n  const checksum = algoChecksum(data);\n\n  // Append publicKey and checksum\n  const addr = b32encode(hex2a(data.toString('hex').concat(checksum)));\n\n  // Removing the extra '='\n  const cleanAddr = addr.replace(/=/g, '');\n  return cleanAddr;\n}\n\nfunction arkAddressDecoder(data: string): Buffer {\n  const buffer = bs58Decode(data);\n\n  if (buffer[0] !== 23) {\n    throw Error('Unrecognised address format');\n  }\n\n  return buffer;\n}\n\nfunction nanoAddressEncoder(data: Buffer): string {\n  const encoded = nanoBase32Encode(Uint8Array.from(data));\n  const checksum = blake2b(data, null, 5).reverse();\n  const checksumEncoded = nanoBase32Encode(checksum);\n\n  const address = `nano_${encoded}${checksumEncoded}`;\n  \n  return address;\n}\n\nfunction nanoAddressDecoder(data: string): Buffer {\n  const decoded = nanoBase32Decode(data.slice(5));\n  \n  return Buffer.from(decoded).slice(0, -5);\n}\n\nconst getConfig = (name: string, coinType: number, encoder: EnCoder, decoder: DeCoder) => {\n  return {\n    coinType,\n    decoder,\n    encoder,\n    name,\n  };\n};\n\n// Ordered by coinType\nexport const formats: IFormat[] = [\n  bitcoinChain('BTC', 0, 'bc', [[0x00]], [[0x05]]),\n  bitcoinChain('LTC', 2, 'ltc', [[0x30]], [[0x32], [0x05]]),\n  bitcoinBase58Chain('DOGE', 3, [[0x1e]], [[0x16]]),\n  bitcoinBase58Chain('RDD', 4, [[0x3d]], [[0x05]]),\n  bitcoinBase58Chain('DASH', 5, [[0x4c]], [[0x10]]),\n  bitcoinBase58Chain('PPC', 6, [[0x37]], [[0x75]]),\n  getConfig('NMC', 7, bs58Encode, bs58Decode),\n  bitcoinChain('MONA', 22, 'mona', [[0x32]], [[0x37], [0x05]]),\n  getConfig('DCR', 42, bs58EncodeNoCheck, bs58DecodeNoCheck),\n  getConfig('XEM', 43, b32encodeXemAddr, b32decodeXemAddr),\n  bitcoinBase58Chain('AIB', 55, [[0x17]], [[0x05]]),\n  bitcoinChain('SYS', 57, 'sys', [[0x3f]], [[0x05]]),\n  hexChecksumChain('ETH', 60),\n  hexChecksumChain('ETC', 61),\n  getConfig('ICX', 74, icxAddressEncoder, icxAddressDecoder),\n  getConfig('ARK', 111, bs58Encode, arkAddressDecoder),\n  bech32Chain('ATOM', 118, 'cosmos'),\n  bech32Chain('ZIL', 119, 'zil'),\n  bech32Chain('EGLD', 120, 'erd'),\n  zcashChain('ZEC', 133, 'zs', [[0x1c, 0xb8]], [[0x1c, 0xbd]]),\n  getConfig('LSK', 134, liskAddressEncoder, liskAddressDecoder),\n  getConfig('STEEM', 135, steemAddressEncoder, steemAddressDecoder),\n  hexChecksumChain('RSK', 137, 30),\n  getConfig('XRP', 144, data => xrpCodec.encodeChecked(data), data => xrpCodec.decodeChecked(data)),\n  getConfig('BCH', 145, encodeCashAddr, decodeBitcoinCash),\n  getConfig('XLM', 148, strEncoder, strDecoder),\n  getConfig('NANO', 165, nanoAddressEncoder, nanoAddressDecoder),\n  getConfig('EOS', 194, eosAddrEncoder, eosAddrDecoder),\n  getConfig('TRX', 195, bs58Encode, bs58Decode),\n  getConfig('NEO', 239, bs58Encode, bs58Decode),\n  getConfig('ALGO', 283, algoEncode, algoDecode),\n  bitcoinBase58Chain('DIVI', 301, [[0x1e]], [[0xd]]),\n  bech32Chain('IOTX', 304, 'io'),\n  getConfig('DOT', 354, dotAddrEncoder, ksmAddrDecoder),\n  getConfig('KSM', 434, ksmAddrEncoder, ksmAddrDecoder),\n  getConfig('FIL', 461, filAddrEncoder, filAddrDecoder),\n  bitcoinBase58Chain('CCA', 489, [[0x0b]], [[0x05]]),\n  getConfig('SOL', 501, bs58EncodeNoCheck, bs58DecodeNoCheck),\n  bitcoinBase58Chain('LRG', 568, [[0x1e]], [[0x0d]]),\n  bitcoinChain('CCXX', 571, 'ccx', [[0x89]], [[0x4b], [0x05]]),\n  bitcoinBase58Chain('BPS', 576, [[0x00]], [[0x05]]),\n  hexChecksumChain('XDAI', 700),\n  hexChecksumChain('VET', 703),\n  bech32Chain('BNB', 714, 'bnb'),\n  getConfig('HIVE', 825, steemAddressEncoder, steemAddressDecoder),\n  bech32Chain('ONE', 1023, 'one'),\n  getConfig('ONT', 1024, ontAddrEncoder, ontAddrDecoder),\n  {\n    coinType: 1729,\n    decoder: tezosAddressDecoder,\n    encoder: tezosAddressEncoder,\n    name: 'XTZ',\n  },\n  bech32Chain('ADA', 1815, 'addr'),\n  getConfig('QTUM', 2301, bs58Encode, bs58Decode),\n  getConfig('ELA', 2305, bs58EncodeNoCheck, bs58DecodeNoCheck),\n  {\n    coinType: 3030,\n    decoder: hederaAddressDecoder,\n    encoder: hederaAddressEncoder,\n    name: 'HBAR',\n  },\n  getConfig('HNS', 5353, hnsAddressEncoder, hnsAddressDecoder),\n  hexChecksumChain('CELO', 52752),\n];\n\nexport const formatsByName: { [key: string]: IFormat } = Object.assign({}, ...formats.map(x => ({ [x.name]: x })));\nexport const formatsByCoinType: { [key: number]: IFormat } = Object.assign(\n  {},\n  ...formats.map(x => ({ [x.coinType]: x })),\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}