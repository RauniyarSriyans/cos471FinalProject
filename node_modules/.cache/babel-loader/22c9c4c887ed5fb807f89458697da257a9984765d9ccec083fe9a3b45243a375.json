{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.uniqueArray = void 0;\nconst ArrayArbitrary_1 = require(\"./_internals/ArrayArbitrary\");\nconst MaxLengthFromMinLength_1 = require(\"./_internals/helpers/MaxLengthFromMinLength\");\nconst CustomEqualSet_1 = require(\"./_internals/helpers/CustomEqualSet\");\nconst StrictlyEqualSet_1 = require(\"./_internals/helpers/StrictlyEqualSet\");\nconst SameValueSet_1 = require(\"./_internals/helpers/SameValueSet\");\nconst SameValueZeroSet_1 = require(\"./_internals/helpers/SameValueZeroSet\");\nfunction buildUniqueArraySetBuilder(constraints) {\n  if (typeof constraints.comparator === 'function') {\n    if (constraints.selector === undefined) {\n      const comparator = constraints.comparator;\n      const isEqualForBuilder = (nextA, nextB) => comparator(nextA.value_, nextB.value_);\n      return () => new CustomEqualSet_1.CustomEqualSet(isEqualForBuilder);\n    }\n    const comparator = constraints.comparator;\n    const selector = constraints.selector;\n    const refinedSelector = next => selector(next.value_);\n    const isEqualForBuilder = (nextA, nextB) => comparator(refinedSelector(nextA), refinedSelector(nextB));\n    return () => new CustomEqualSet_1.CustomEqualSet(isEqualForBuilder);\n  }\n  const selector = constraints.selector || (v => v);\n  const refinedSelector = next => selector(next.value_);\n  switch (constraints.comparator) {\n    case 'IsStrictlyEqual':\n      return () => new StrictlyEqualSet_1.StrictlyEqualSet(refinedSelector);\n    case 'SameValueZero':\n      return () => new SameValueZeroSet_1.SameValueZeroSet(refinedSelector);\n    case 'SameValue':\n    case undefined:\n      return () => new SameValueSet_1.SameValueSet(refinedSelector);\n  }\n}\nfunction uniqueArray(arb) {\n  let constraints = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const minLength = constraints.minLength !== undefined ? constraints.minLength : 0;\n  const maxLength = constraints.maxLength !== undefined ? constraints.maxLength : MaxLengthFromMinLength_1.MaxLengthUpperBound;\n  const maxGeneratedLength = (0, MaxLengthFromMinLength_1.maxGeneratedLengthFromSizeForArbitrary)(constraints.size, minLength, maxLength, constraints.maxLength !== undefined);\n  const depthIdentifier = constraints.depthIdentifier;\n  const setBuilder = buildUniqueArraySetBuilder(constraints);\n  const arrayArb = new ArrayArbitrary_1.ArrayArbitrary(arb, minLength, maxGeneratedLength, maxLength, depthIdentifier, setBuilder, []);\n  if (minLength === 0) return arrayArb;\n  return arrayArb.filter(tab => tab.length >= minLength);\n}\nexports.uniqueArray = uniqueArray;","map":{"version":3,"names":["Object","defineProperty","exports","value","uniqueArray","ArrayArbitrary_1","require","MaxLengthFromMinLength_1","CustomEqualSet_1","StrictlyEqualSet_1","SameValueSet_1","SameValueZeroSet_1","buildUniqueArraySetBuilder","constraints","comparator","selector","undefined","isEqualForBuilder","nextA","nextB","value_","CustomEqualSet","refinedSelector","next","v","StrictlyEqualSet","SameValueZeroSet","SameValueSet","arb","arguments","length","minLength","maxLength","MaxLengthUpperBound","maxGeneratedLength","maxGeneratedLengthFromSizeForArbitrary","size","depthIdentifier","setBuilder","arrayArb","ArrayArbitrary","filter","tab"],"sources":["/Users/karimelbarbary/Desktop/test4/devote/node_modules/fast-check/lib/arbitrary/uniqueArray.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uniqueArray = void 0;\nconst ArrayArbitrary_1 = require(\"./_internals/ArrayArbitrary\");\nconst MaxLengthFromMinLength_1 = require(\"./_internals/helpers/MaxLengthFromMinLength\");\nconst CustomEqualSet_1 = require(\"./_internals/helpers/CustomEqualSet\");\nconst StrictlyEqualSet_1 = require(\"./_internals/helpers/StrictlyEqualSet\");\nconst SameValueSet_1 = require(\"./_internals/helpers/SameValueSet\");\nconst SameValueZeroSet_1 = require(\"./_internals/helpers/SameValueZeroSet\");\nfunction buildUniqueArraySetBuilder(constraints) {\n    if (typeof constraints.comparator === 'function') {\n        if (constraints.selector === undefined) {\n            const comparator = constraints.comparator;\n            const isEqualForBuilder = (nextA, nextB) => comparator(nextA.value_, nextB.value_);\n            return () => new CustomEqualSet_1.CustomEqualSet(isEqualForBuilder);\n        }\n        const comparator = constraints.comparator;\n        const selector = constraints.selector;\n        const refinedSelector = (next) => selector(next.value_);\n        const isEqualForBuilder = (nextA, nextB) => comparator(refinedSelector(nextA), refinedSelector(nextB));\n        return () => new CustomEqualSet_1.CustomEqualSet(isEqualForBuilder);\n    }\n    const selector = constraints.selector || ((v) => v);\n    const refinedSelector = (next) => selector(next.value_);\n    switch (constraints.comparator) {\n        case 'IsStrictlyEqual':\n            return () => new StrictlyEqualSet_1.StrictlyEqualSet(refinedSelector);\n        case 'SameValueZero':\n            return () => new SameValueZeroSet_1.SameValueZeroSet(refinedSelector);\n        case 'SameValue':\n        case undefined:\n            return () => new SameValueSet_1.SameValueSet(refinedSelector);\n    }\n}\nfunction uniqueArray(arb, constraints = {}) {\n    const minLength = constraints.minLength !== undefined ? constraints.minLength : 0;\n    const maxLength = constraints.maxLength !== undefined ? constraints.maxLength : MaxLengthFromMinLength_1.MaxLengthUpperBound;\n    const maxGeneratedLength = (0, MaxLengthFromMinLength_1.maxGeneratedLengthFromSizeForArbitrary)(constraints.size, minLength, maxLength, constraints.maxLength !== undefined);\n    const depthIdentifier = constraints.depthIdentifier;\n    const setBuilder = buildUniqueArraySetBuilder(constraints);\n    const arrayArb = new ArrayArbitrary_1.ArrayArbitrary(arb, minLength, maxGeneratedLength, maxLength, depthIdentifier, setBuilder, []);\n    if (minLength === 0)\n        return arrayArb;\n    return arrayArb.filter((tab) => tab.length >= minLength);\n}\nexports.uniqueArray = uniqueArray;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}