{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assert = exports.check = void 0;\nconst Stream_1 = require(\"../../stream/Stream\");\nconst GlobalParameters_1 = require(\"./configuration/GlobalParameters\");\nconst QualifiedParameters_1 = require(\"./configuration/QualifiedParameters\");\nconst DecorateProperty_1 = require(\"./DecorateProperty\");\nconst RunnerIterator_1 = require(\"./RunnerIterator\");\nconst SourceValuesIterator_1 = require(\"./SourceValuesIterator\");\nconst Tosser_1 = require(\"./Tosser\");\nconst PathWalker_1 = require(\"./utils/PathWalker\");\nconst RunDetailsFormatter_1 = require(\"./utils/RunDetailsFormatter\");\nfunction runIt(property, shrink, sourceValues, verbose, interruptedAsFailure) {\n  const runner = new RunnerIterator_1.RunnerIterator(sourceValues, shrink, verbose, interruptedAsFailure);\n  for (const v of runner) {\n    const out = property.run(v);\n    runner.handleResult(out);\n  }\n  return runner.runExecution;\n}\nasync function asyncRunIt(property, shrink, sourceValues, verbose, interruptedAsFailure) {\n  const runner = new RunnerIterator_1.RunnerIterator(sourceValues, shrink, verbose, interruptedAsFailure);\n  for (const v of runner) {\n    const out = await property.run(v);\n    runner.handleResult(out);\n  }\n  return runner.runExecution;\n}\nfunction runnerPathWalker(valueProducers, shrink, path) {\n  const pathPoints = path.split(':');\n  const pathStream = (0, Stream_1.stream)(valueProducers).drop(pathPoints.length > 0 ? +pathPoints[0] : 0).map(producer => producer());\n  const adaptedPath = ['0', ...pathPoints.slice(1)].join(':');\n  return (0, Stream_1.stream)((0, PathWalker_1.pathWalk)(adaptedPath, pathStream, shrink)).map(v => () => v);\n}\nfunction buildInitialValues(valueProducers, shrink, qParams) {\n  if (qParams.path.length === 0) {\n    return (0, Stream_1.stream)(valueProducers);\n  }\n  return runnerPathWalker(valueProducers, shrink, qParams.path);\n}\nfunction check(rawProperty, params) {\n  if (rawProperty == null || rawProperty.generate == null) throw new Error('Invalid property encountered, please use a valid property');\n  if (rawProperty.run == null) throw new Error('Invalid property encountered, please use a valid property not an arbitrary');\n  const qParams = QualifiedParameters_1.QualifiedParameters.read(Object.assign(Object.assign({}, (0, GlobalParameters_1.readConfigureGlobal)()), params));\n  if (qParams.reporter !== null && qParams.asyncReporter !== null) throw new Error('Invalid parameters encountered, reporter and asyncReporter cannot be specified together');\n  if (qParams.asyncReporter !== null && !rawProperty.isAsync()) throw new Error('Invalid parameters encountered, only asyncProperty can be used when asyncReporter specified');\n  const property = (0, DecorateProperty_1.decorateProperty)(rawProperty, qParams);\n  const generator = (0, Tosser_1.toss)(property, qParams.seed, qParams.randomType, qParams.examples);\n  const maxInitialIterations = qParams.path.indexOf(':') === -1 ? qParams.numRuns : -1;\n  const maxSkips = qParams.numRuns * qParams.maxSkipsPerRun;\n  const shrink = property.shrink.bind(property);\n  const initialValues = buildInitialValues(generator, shrink, qParams);\n  const sourceValues = new SourceValuesIterator_1.SourceValuesIterator(initialValues, maxInitialIterations, maxSkips);\n  const finalShrink = !qParams.endOnFailure ? shrink : Stream_1.Stream.nil;\n  return property.isAsync() ? asyncRunIt(property, finalShrink, sourceValues, qParams.verbose, qParams.markInterruptAsFailure).then(e => e.toRunDetails(qParams.seed, qParams.path, maxSkips, qParams)) : runIt(property, finalShrink, sourceValues, qParams.verbose, qParams.markInterruptAsFailure).toRunDetails(qParams.seed, qParams.path, maxSkips, qParams);\n}\nexports.check = check;\nfunction assert(property, params) {\n  const out = check(property, params);\n  if (property.isAsync()) return out.then(RunDetailsFormatter_1.asyncReportRunDetails);else (0, RunDetailsFormatter_1.reportRunDetails)(out);\n}\nexports.assert = assert;","map":{"version":3,"names":["Object","defineProperty","exports","value","assert","check","Stream_1","require","GlobalParameters_1","QualifiedParameters_1","DecorateProperty_1","RunnerIterator_1","SourceValuesIterator_1","Tosser_1","PathWalker_1","RunDetailsFormatter_1","runIt","property","shrink","sourceValues","verbose","interruptedAsFailure","runner","RunnerIterator","v","out","run","handleResult","runExecution","asyncRunIt","runnerPathWalker","valueProducers","path","pathPoints","split","pathStream","stream","drop","length","map","producer","adaptedPath","slice","join","pathWalk","buildInitialValues","qParams","rawProperty","params","generate","Error","QualifiedParameters","read","assign","readConfigureGlobal","reporter","asyncReporter","isAsync","decorateProperty","generator","toss","seed","randomType","examples","maxInitialIterations","indexOf","numRuns","maxSkips","maxSkipsPerRun","bind","initialValues","SourceValuesIterator","finalShrink","endOnFailure","Stream","nil","markInterruptAsFailure","then","e","toRunDetails","asyncReportRunDetails","reportRunDetails"],"sources":["/Users/karimelbarbary/Desktop/test4/devote/node_modules/fast-check/lib/check/runner/Runner.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assert = exports.check = void 0;\nconst Stream_1 = require(\"../../stream/Stream\");\nconst GlobalParameters_1 = require(\"./configuration/GlobalParameters\");\nconst QualifiedParameters_1 = require(\"./configuration/QualifiedParameters\");\nconst DecorateProperty_1 = require(\"./DecorateProperty\");\nconst RunnerIterator_1 = require(\"./RunnerIterator\");\nconst SourceValuesIterator_1 = require(\"./SourceValuesIterator\");\nconst Tosser_1 = require(\"./Tosser\");\nconst PathWalker_1 = require(\"./utils/PathWalker\");\nconst RunDetailsFormatter_1 = require(\"./utils/RunDetailsFormatter\");\nfunction runIt(property, shrink, sourceValues, verbose, interruptedAsFailure) {\n    const runner = new RunnerIterator_1.RunnerIterator(sourceValues, shrink, verbose, interruptedAsFailure);\n    for (const v of runner) {\n        const out = property.run(v);\n        runner.handleResult(out);\n    }\n    return runner.runExecution;\n}\nasync function asyncRunIt(property, shrink, sourceValues, verbose, interruptedAsFailure) {\n    const runner = new RunnerIterator_1.RunnerIterator(sourceValues, shrink, verbose, interruptedAsFailure);\n    for (const v of runner) {\n        const out = await property.run(v);\n        runner.handleResult(out);\n    }\n    return runner.runExecution;\n}\nfunction runnerPathWalker(valueProducers, shrink, path) {\n    const pathPoints = path.split(':');\n    const pathStream = (0, Stream_1.stream)(valueProducers)\n        .drop(pathPoints.length > 0 ? +pathPoints[0] : 0)\n        .map((producer) => producer());\n    const adaptedPath = ['0', ...pathPoints.slice(1)].join(':');\n    return (0, Stream_1.stream)((0, PathWalker_1.pathWalk)(adaptedPath, pathStream, shrink)).map((v) => () => v);\n}\nfunction buildInitialValues(valueProducers, shrink, qParams) {\n    if (qParams.path.length === 0) {\n        return (0, Stream_1.stream)(valueProducers);\n    }\n    return runnerPathWalker(valueProducers, shrink, qParams.path);\n}\nfunction check(rawProperty, params) {\n    if (rawProperty == null || rawProperty.generate == null)\n        throw new Error('Invalid property encountered, please use a valid property');\n    if (rawProperty.run == null)\n        throw new Error('Invalid property encountered, please use a valid property not an arbitrary');\n    const qParams = QualifiedParameters_1.QualifiedParameters.read(Object.assign(Object.assign({}, (0, GlobalParameters_1.readConfigureGlobal)()), params));\n    if (qParams.reporter !== null && qParams.asyncReporter !== null)\n        throw new Error('Invalid parameters encountered, reporter and asyncReporter cannot be specified together');\n    if (qParams.asyncReporter !== null && !rawProperty.isAsync())\n        throw new Error('Invalid parameters encountered, only asyncProperty can be used when asyncReporter specified');\n    const property = (0, DecorateProperty_1.decorateProperty)(rawProperty, qParams);\n    const generator = (0, Tosser_1.toss)(property, qParams.seed, qParams.randomType, qParams.examples);\n    const maxInitialIterations = qParams.path.indexOf(':') === -1 ? qParams.numRuns : -1;\n    const maxSkips = qParams.numRuns * qParams.maxSkipsPerRun;\n    const shrink = property.shrink.bind(property);\n    const initialValues = buildInitialValues(generator, shrink, qParams);\n    const sourceValues = new SourceValuesIterator_1.SourceValuesIterator(initialValues, maxInitialIterations, maxSkips);\n    const finalShrink = !qParams.endOnFailure ? shrink : Stream_1.Stream.nil;\n    return property.isAsync()\n        ? asyncRunIt(property, finalShrink, sourceValues, qParams.verbose, qParams.markInterruptAsFailure).then((e) => e.toRunDetails(qParams.seed, qParams.path, maxSkips, qParams))\n        : runIt(property, finalShrink, sourceValues, qParams.verbose, qParams.markInterruptAsFailure).toRunDetails(qParams.seed, qParams.path, maxSkips, qParams);\n}\nexports.check = check;\nfunction assert(property, params) {\n    const out = check(property, params);\n    if (property.isAsync())\n        return out.then(RunDetailsFormatter_1.asyncReportRunDetails);\n    else\n        (0, RunDetailsFormatter_1.reportRunDetails)(out);\n}\nexports.assert = assert;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}