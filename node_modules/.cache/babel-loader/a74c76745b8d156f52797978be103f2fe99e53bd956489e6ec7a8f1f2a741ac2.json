{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildAlphaNumericPercentArbitrary = exports.buildAlphaNumericArbitrary = exports.buildLowerAlphaNumericArbitrary = exports.buildLowerAlphaArbitrary = void 0;\nconst fullUnicode_1 = require(\"../../fullUnicode\");\nconst oneof_1 = require(\"../../oneof\");\nconst mapToConstant_1 = require(\"../../mapToConstant\");\nconst lowerCaseMapper = {\n  num: 26,\n  build: v => String.fromCharCode(v + 0x61)\n};\nconst upperCaseMapper = {\n  num: 26,\n  build: v => String.fromCharCode(v + 0x41)\n};\nconst numericMapper = {\n  num: 10,\n  build: v => String.fromCharCode(v + 0x30)\n};\nfunction percentCharArbMapper(c) {\n  const encoded = encodeURIComponent(c);\n  return c !== encoded ? encoded : `%${c.charCodeAt(0).toString(16)}`;\n}\nfunction percentCharArbUnmapper(value) {\n  if (typeof value !== 'string') {\n    throw new Error('Unsupported');\n  }\n  const decoded = decodeURIComponent(value);\n  return decoded;\n}\nconst percentCharArb = (0, fullUnicode_1.fullUnicode)().map(percentCharArbMapper, percentCharArbUnmapper);\nconst buildLowerAlphaArbitrary = others => (0, mapToConstant_1.mapToConstant)(lowerCaseMapper, {\n  num: others.length,\n  build: v => others[v]\n});\nexports.buildLowerAlphaArbitrary = buildLowerAlphaArbitrary;\nconst buildLowerAlphaNumericArbitrary = others => (0, mapToConstant_1.mapToConstant)(lowerCaseMapper, numericMapper, {\n  num: others.length,\n  build: v => others[v]\n});\nexports.buildLowerAlphaNumericArbitrary = buildLowerAlphaNumericArbitrary;\nconst buildAlphaNumericArbitrary = others => (0, mapToConstant_1.mapToConstant)(lowerCaseMapper, upperCaseMapper, numericMapper, {\n  num: others.length,\n  build: v => others[v]\n});\nexports.buildAlphaNumericArbitrary = buildAlphaNumericArbitrary;\nconst buildAlphaNumericPercentArbitrary = others => (0, oneof_1.oneof)({\n  weight: 10,\n  arbitrary: (0, exports.buildAlphaNumericArbitrary)(others)\n}, {\n  weight: 1,\n  arbitrary: percentCharArb\n});\nexports.buildAlphaNumericPercentArbitrary = buildAlphaNumericPercentArbitrary;","map":{"version":3,"names":["Object","defineProperty","exports","value","buildAlphaNumericPercentArbitrary","buildAlphaNumericArbitrary","buildLowerAlphaNumericArbitrary","buildLowerAlphaArbitrary","fullUnicode_1","require","oneof_1","mapToConstant_1","lowerCaseMapper","num","build","v","String","fromCharCode","upperCaseMapper","numericMapper","percentCharArbMapper","c","encoded","encodeURIComponent","charCodeAt","toString","percentCharArbUnmapper","Error","decoded","decodeURIComponent","percentCharArb","fullUnicode","map","others","mapToConstant","length","oneof","weight","arbitrary"],"sources":["/Users/karimelbarbary/Desktop/test4/devote/node_modules/fast-check/lib/arbitrary/_internals/builders/CharacterRangeArbitraryBuilder.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildAlphaNumericPercentArbitrary = exports.buildAlphaNumericArbitrary = exports.buildLowerAlphaNumericArbitrary = exports.buildLowerAlphaArbitrary = void 0;\nconst fullUnicode_1 = require(\"../../fullUnicode\");\nconst oneof_1 = require(\"../../oneof\");\nconst mapToConstant_1 = require(\"../../mapToConstant\");\nconst lowerCaseMapper = { num: 26, build: (v) => String.fromCharCode(v + 0x61) };\nconst upperCaseMapper = { num: 26, build: (v) => String.fromCharCode(v + 0x41) };\nconst numericMapper = { num: 10, build: (v) => String.fromCharCode(v + 0x30) };\nfunction percentCharArbMapper(c) {\n    const encoded = encodeURIComponent(c);\n    return c !== encoded ? encoded : `%${c.charCodeAt(0).toString(16)}`;\n}\nfunction percentCharArbUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Unsupported');\n    }\n    const decoded = decodeURIComponent(value);\n    return decoded;\n}\nconst percentCharArb = (0, fullUnicode_1.fullUnicode)().map(percentCharArbMapper, percentCharArbUnmapper);\nconst buildLowerAlphaArbitrary = (others) => (0, mapToConstant_1.mapToConstant)(lowerCaseMapper, { num: others.length, build: (v) => others[v] });\nexports.buildLowerAlphaArbitrary = buildLowerAlphaArbitrary;\nconst buildLowerAlphaNumericArbitrary = (others) => (0, mapToConstant_1.mapToConstant)(lowerCaseMapper, numericMapper, { num: others.length, build: (v) => others[v] });\nexports.buildLowerAlphaNumericArbitrary = buildLowerAlphaNumericArbitrary;\nconst buildAlphaNumericArbitrary = (others) => (0, mapToConstant_1.mapToConstant)(lowerCaseMapper, upperCaseMapper, numericMapper, { num: others.length, build: (v) => others[v] });\nexports.buildAlphaNumericArbitrary = buildAlphaNumericArbitrary;\nconst buildAlphaNumericPercentArbitrary = (others) => (0, oneof_1.oneof)({ weight: 10, arbitrary: (0, exports.buildAlphaNumericArbitrary)(others) }, { weight: 1, arbitrary: percentCharArb });\nexports.buildAlphaNumericPercentArbitrary = buildAlphaNumericPercentArbitrary;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,iCAAiC,GAAGF,OAAO,CAACG,0BAA0B,GAAGH,OAAO,CAACI,+BAA+B,GAAGJ,OAAO,CAACK,wBAAwB,GAAG,KAAK,CAAC;AACpK,MAAMC,aAAa,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAClD,MAAMC,OAAO,GAAGD,OAAO,CAAC,aAAa,CAAC;AACtC,MAAME,eAAe,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AACtD,MAAMG,eAAe,GAAG;EAAEC,GAAG,EAAE,EAAE;EAAEC,KAAK,EAAGC,CAAC,IAAKC,MAAM,CAACC,YAAY,CAACF,CAAC,GAAG,IAAI;AAAE,CAAC;AAChF,MAAMG,eAAe,GAAG;EAAEL,GAAG,EAAE,EAAE;EAAEC,KAAK,EAAGC,CAAC,IAAKC,MAAM,CAACC,YAAY,CAACF,CAAC,GAAG,IAAI;AAAE,CAAC;AAChF,MAAMI,aAAa,GAAG;EAAEN,GAAG,EAAE,EAAE;EAAEC,KAAK,EAAGC,CAAC,IAAKC,MAAM,CAACC,YAAY,CAACF,CAAC,GAAG,IAAI;AAAE,CAAC;AAC9E,SAASK,oBAAoBA,CAACC,CAAC,EAAE;EAC7B,MAAMC,OAAO,GAAGC,kBAAkB,CAACF,CAAC,CAAC;EACrC,OAAOA,CAAC,KAAKC,OAAO,GAAGA,OAAO,GAAI,IAAGD,CAAC,CAACG,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAE,EAAC;AACvE;AACA,SAASC,sBAAsBA,CAACvB,KAAK,EAAE;EACnC,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC3B,MAAM,IAAIwB,KAAK,CAAC,aAAa,CAAC;EAClC;EACA,MAAMC,OAAO,GAAGC,kBAAkB,CAAC1B,KAAK,CAAC;EACzC,OAAOyB,OAAO;AAClB;AACA,MAAME,cAAc,GAAG,CAAC,CAAC,EAAEtB,aAAa,CAACuB,WAAW,EAAE,CAAC,CAACC,GAAG,CAACZ,oBAAoB,EAAEM,sBAAsB,CAAC;AACzG,MAAMnB,wBAAwB,GAAI0B,MAAM,IAAK,CAAC,CAAC,EAAEtB,eAAe,CAACuB,aAAa,EAAEtB,eAAe,EAAE;EAAEC,GAAG,EAAEoB,MAAM,CAACE,MAAM;EAAErB,KAAK,EAAGC,CAAC,IAAKkB,MAAM,CAAClB,CAAC;AAAE,CAAC,CAAC;AACjJb,OAAO,CAACK,wBAAwB,GAAGA,wBAAwB;AAC3D,MAAMD,+BAA+B,GAAI2B,MAAM,IAAK,CAAC,CAAC,EAAEtB,eAAe,CAACuB,aAAa,EAAEtB,eAAe,EAAEO,aAAa,EAAE;EAAEN,GAAG,EAAEoB,MAAM,CAACE,MAAM;EAAErB,KAAK,EAAGC,CAAC,IAAKkB,MAAM,CAAClB,CAAC;AAAE,CAAC,CAAC;AACvKb,OAAO,CAACI,+BAA+B,GAAGA,+BAA+B;AACzE,MAAMD,0BAA0B,GAAI4B,MAAM,IAAK,CAAC,CAAC,EAAEtB,eAAe,CAACuB,aAAa,EAAEtB,eAAe,EAAEM,eAAe,EAAEC,aAAa,EAAE;EAAEN,GAAG,EAAEoB,MAAM,CAACE,MAAM;EAAErB,KAAK,EAAGC,CAAC,IAAKkB,MAAM,CAAClB,CAAC;AAAE,CAAC,CAAC;AACnLb,OAAO,CAACG,0BAA0B,GAAGA,0BAA0B;AAC/D,MAAMD,iCAAiC,GAAI6B,MAAM,IAAK,CAAC,CAAC,EAAEvB,OAAO,CAAC0B,KAAK,EAAE;EAAEC,MAAM,EAAE,EAAE;EAAEC,SAAS,EAAE,CAAC,CAAC,EAAEpC,OAAO,CAACG,0BAA0B,EAAE4B,MAAM;AAAE,CAAC,EAAE;EAAEI,MAAM,EAAE,CAAC;EAAEC,SAAS,EAAER;AAAe,CAAC,CAAC;AAC9L5B,OAAO,CAACE,iCAAiC,GAAGA,iCAAiC"},"metadata":{},"sourceType":"script","externalDependencies":[]}