{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeTopic = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = (0, debug_1.default)(\"codec:topic:decode\");\nconst read_1 = __importDefault(require(\"../../read\"));\nconst Basic = __importStar(require(\"../../basic\"));\nconst Format = __importStar(require(\"../../format\"));\nconst Conversion = __importStar(require(\"../../conversion\"));\nfunction decodeTopic(dataType, pointer, info) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return function* () {\n    if (Format.Types.isReferenceType(dataType) || dataType.typeClass === \"tuple\") {\n      //we cannot decode reference types \"stored\" in topics; we have to just return an error\n      let bytes = yield* (0, read_1.default)(pointer, info.state);\n      let raw = Conversion.toHexString(bytes);\n      //NOTE: even in strict mode we want to just return this, not throw an error here\n      return {\n        //dunno why TS is failing here\n        type: dataType,\n        kind: \"error\",\n        error: {\n          kind: \"IndexedReferenceTypeError\",\n          type: dataType,\n          raw\n        }\n      };\n    }\n    //otherwise, dispatch to decodeBasic\n    return yield* Basic.Decode.decodeBasic(dataType, pointer, info, options);\n  }();\n}\nexports.decodeTopic = decodeTopic;","map":{"version":3,"names":["debug_1","__importDefault","require","debug","default","read_1","Basic","__importStar","Format","Conversion","decodeTopic","dataType","pointer","info","options","arguments","length","undefined","Types","isReferenceType","typeClass","bytes","state","raw","toHexString","type","kind","error","Decode","decodeBasic","exports"],"sources":["../../../../lib/topic/decode/index.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAAA,OAAA,GAAAC,eAAA,CAAAC,OAAA;AACA,MAAMC,KAAK,GAAG,IAAAH,OAAA,CAAAI,OAAW,EAAC,oBAAoB,CAAC;AAE/C,MAAAC,MAAA,GAAAJ,eAAA,CAAAC,OAAA;AACA,MAAAI,KAAA,GAAAC,YAAA,CAAAL,OAAA;AACA,MAAAM,MAAA,GAAAD,YAAA,CAAAL,OAAA;AACA,MAAAO,UAAA,GAAAF,YAAA,CAAAL,OAAA;AAKA,SAAiBQ,WAAWA,CAC1BC,QAA2B,EAC3BC,OAAkC,EAClCC,IAAiB;EAAA,IACjBC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA0B,EAAE;EAAA;IAE5B,IACEP,MAAM,CAACU,KAAK,CAACC,eAAe,CAACR,QAAQ,CAAC,IACtCA,QAAQ,CAACS,SAAS,KAAK,OAAO,EAC9B;MACA;MACA,IAAIC,KAAK,GAAe,OAAO,IAAAhB,MAAA,CAAAD,OAAI,EAACQ,OAAO,EAAEC,IAAI,CAACS,KAAK,CAAC;MACxD,IAAIC,GAAG,GAAWd,UAAU,CAACe,WAAW,CAACH,KAAK,CAAC;MAC/C;MACA,OAAkC;QAChC;QACAI,IAAI,EAAEd,QAAQ;QACde,IAAI,EAAE,OAAgB;QACtBC,KAAK,EAAE;UACLD,IAAI,EAAE,2BAAoC;UAC1CD,IAAI,EAAEd,QAAQ;UACdY;;OAEH;;IAEH;IACA,OAAO,OAAOjB,KAAK,CAACsB,MAAM,CAACC,WAAW,CAAClB,QAAQ,EAAEC,OAAO,EAAEC,IAAI,EAAEC,OAAO,CAAC;EAC1E,CAAC;AAAA;AA3BDgB,OAAA,CAAApB,WAAA,GAAAA,WAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}