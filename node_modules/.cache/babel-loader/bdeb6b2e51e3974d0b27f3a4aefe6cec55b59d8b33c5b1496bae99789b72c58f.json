{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pathWalk = void 0;\nconst Stream_1 = require(\"../../../stream/Stream\");\nfunction pathWalk(path, initialValues, shrink) {\n  let values = (0, Stream_1.stream)(initialValues);\n  const segments = path.split(':').map(text => +text);\n  if (segments.length === 0) return values;\n  if (!segments.every(v => !Number.isNaN(v))) {\n    throw new Error(`Unable to replay, got invalid path=${path}`);\n  }\n  values = values.drop(segments[0]);\n  for (const s of segments.slice(1)) {\n    const valueToShrink = values.getNthOrLast(0);\n    if (valueToShrink == null) {\n      throw new Error(`Unable to replay, got wrong path=${path}`);\n    }\n    values = shrink(valueToShrink).drop(s);\n  }\n  return values;\n}\nexports.pathWalk = pathWalk;","map":{"version":3,"names":["Object","defineProperty","exports","value","pathWalk","Stream_1","require","path","initialValues","shrink","values","stream","segments","split","map","text","length","every","v","Number","isNaN","Error","drop","s","slice","valueToShrink","getNthOrLast"],"sources":["/Users/karimelbarbary/Desktop/test4/devote/node_modules/fast-check/lib/check/runner/utils/PathWalker.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pathWalk = void 0;\nconst Stream_1 = require(\"../../../stream/Stream\");\nfunction pathWalk(path, initialValues, shrink) {\n    let values = (0, Stream_1.stream)(initialValues);\n    const segments = path.split(':').map((text) => +text);\n    if (segments.length === 0)\n        return values;\n    if (!segments.every((v) => !Number.isNaN(v))) {\n        throw new Error(`Unable to replay, got invalid path=${path}`);\n    }\n    values = values.drop(segments[0]);\n    for (const s of segments.slice(1)) {\n        const valueToShrink = values.getNthOrLast(0);\n        if (valueToShrink == null) {\n            throw new Error(`Unable to replay, got wrong path=${path}`);\n        }\n        values = shrink(valueToShrink).drop(s);\n    }\n    return values;\n}\nexports.pathWalk = pathWalk;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,QAAQ,GAAG,KAAK,CAAC;AACzB,MAAMC,QAAQ,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAClD,SAASF,QAAQA,CAACG,IAAI,EAAEC,aAAa,EAAEC,MAAM,EAAE;EAC3C,IAAIC,MAAM,GAAG,CAAC,CAAC,EAAEL,QAAQ,CAACM,MAAM,EAAEH,aAAa,CAAC;EAChD,MAAMI,QAAQ,GAAGL,IAAI,CAACM,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,IAAI,IAAK,CAACA,IAAI,CAAC;EACrD,IAAIH,QAAQ,CAACI,MAAM,KAAK,CAAC,EACrB,OAAON,MAAM;EACjB,IAAI,CAACE,QAAQ,CAACK,KAAK,CAAEC,CAAC,IAAK,CAACC,MAAM,CAACC,KAAK,CAACF,CAAC,CAAC,CAAC,EAAE;IAC1C,MAAM,IAAIG,KAAK,CAAE,sCAAqCd,IAAK,EAAC,CAAC;EACjE;EACAG,MAAM,GAAGA,MAAM,CAACY,IAAI,CAACV,QAAQ,CAAC,CAAC,CAAC,CAAC;EACjC,KAAK,MAAMW,CAAC,IAAIX,QAAQ,CAACY,KAAK,CAAC,CAAC,CAAC,EAAE;IAC/B,MAAMC,aAAa,GAAGf,MAAM,CAACgB,YAAY,CAAC,CAAC,CAAC;IAC5C,IAAID,aAAa,IAAI,IAAI,EAAE;MACvB,MAAM,IAAIJ,KAAK,CAAE,oCAAmCd,IAAK,EAAC,CAAC;IAC/D;IACAG,MAAM,GAAGD,MAAM,CAACgB,aAAa,CAAC,CAACH,IAAI,CAACC,CAAC,CAAC;EAC1C;EACA,OAAOb,MAAM;AACjB;AACAR,OAAO,CAACE,QAAQ,GAAGA,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}