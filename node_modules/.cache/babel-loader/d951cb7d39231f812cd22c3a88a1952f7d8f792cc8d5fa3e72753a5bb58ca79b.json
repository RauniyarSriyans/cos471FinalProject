{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AsyncProperty = void 0;\nconst PreconditionFailure_1 = require(\"../precondition/PreconditionFailure\");\nconst IRawProperty_1 = require(\"./IRawProperty\");\nconst GlobalParameters_1 = require(\"../runner/configuration/GlobalParameters\");\nconst Stream_1 = require(\"../../stream/Stream\");\nconst NoUndefinedAsContext_1 = require(\"../../arbitrary/_internals/helpers/NoUndefinedAsContext\");\nclass AsyncProperty {\n  constructor(arb, predicate) {\n    this.arb = arb;\n    this.predicate = predicate;\n    const {\n      asyncBeforeEach,\n      asyncAfterEach,\n      beforeEach,\n      afterEach\n    } = (0, GlobalParameters_1.readConfigureGlobal)() || {};\n    if (asyncBeforeEach !== undefined && beforeEach !== undefined) {\n      throw Error('Global \"asyncBeforeEach\" and \"beforeEach\" parameters can\\'t be set at the same time when running async properties');\n    }\n    if (asyncAfterEach !== undefined && afterEach !== undefined) {\n      throw Error('Global \"asyncAfterEach\" and \"afterEach\" parameters can\\'t be set at the same time when running async properties');\n    }\n    this.beforeEachHook = asyncBeforeEach || beforeEach || AsyncProperty.dummyHook;\n    this.afterEachHook = asyncAfterEach || afterEach || AsyncProperty.dummyHook;\n  }\n  isAsync() {\n    return true;\n  }\n  generate(mrng, runId) {\n    const value = this.arb.generate(mrng, runId != null ? (0, IRawProperty_1.runIdToFrequency)(runId) : undefined);\n    return (0, NoUndefinedAsContext_1.noUndefinedAsContext)(value);\n  }\n  shrink(value) {\n    if (value.context === undefined && !this.arb.canShrinkWithoutContext(value.value_)) {\n      return Stream_1.Stream.nil();\n    }\n    const safeContext = value.context !== NoUndefinedAsContext_1.UndefinedContextPlaceholder ? value.context : undefined;\n    return this.arb.shrink(value.value_, safeContext).map(NoUndefinedAsContext_1.noUndefinedAsContext);\n  }\n  async run(v) {\n    await this.beforeEachHook();\n    try {\n      const output = await this.predicate(v);\n      return output == null || output === true ? null : {\n        error: undefined,\n        errorMessage: 'Property failed by returning false'\n      };\n    } catch (err) {\n      if (PreconditionFailure_1.PreconditionFailure.isFailure(err)) return err;\n      if (err instanceof Error && err.stack) {\n        return {\n          error: err,\n          errorMessage: `${err}\\n\\nStack trace: ${err.stack}`\n        };\n      }\n      return {\n        error: err,\n        errorMessage: String(err)\n      };\n    } finally {\n      await this.afterEachHook();\n    }\n  }\n  beforeEach(hookFunction) {\n    const previousBeforeEachHook = this.beforeEachHook;\n    this.beforeEachHook = () => hookFunction(previousBeforeEachHook);\n    return this;\n  }\n  afterEach(hookFunction) {\n    const previousAfterEachHook = this.afterEachHook;\n    this.afterEachHook = () => hookFunction(previousAfterEachHook);\n    return this;\n  }\n}\nexports.AsyncProperty = AsyncProperty;\nAsyncProperty.dummyHook = () => {};","map":{"version":3,"names":["Object","defineProperty","exports","value","AsyncProperty","PreconditionFailure_1","require","IRawProperty_1","GlobalParameters_1","Stream_1","NoUndefinedAsContext_1","constructor","arb","predicate","asyncBeforeEach","asyncAfterEach","beforeEach","afterEach","readConfigureGlobal","undefined","Error","beforeEachHook","dummyHook","afterEachHook","isAsync","generate","mrng","runId","runIdToFrequency","noUndefinedAsContext","shrink","context","canShrinkWithoutContext","value_","Stream","nil","safeContext","UndefinedContextPlaceholder","map","run","v","output","error","errorMessage","err","PreconditionFailure","isFailure","stack","String","hookFunction","previousBeforeEachHook","previousAfterEachHook"],"sources":["/Users/karimelbarbary/Desktop/test4/devote/node_modules/fast-check/lib/check/property/AsyncProperty.generic.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AsyncProperty = void 0;\nconst PreconditionFailure_1 = require(\"../precondition/PreconditionFailure\");\nconst IRawProperty_1 = require(\"./IRawProperty\");\nconst GlobalParameters_1 = require(\"../runner/configuration/GlobalParameters\");\nconst Stream_1 = require(\"../../stream/Stream\");\nconst NoUndefinedAsContext_1 = require(\"../../arbitrary/_internals/helpers/NoUndefinedAsContext\");\nclass AsyncProperty {\n    constructor(arb, predicate) {\n        this.arb = arb;\n        this.predicate = predicate;\n        const { asyncBeforeEach, asyncAfterEach, beforeEach, afterEach } = (0, GlobalParameters_1.readConfigureGlobal)() || {};\n        if (asyncBeforeEach !== undefined && beforeEach !== undefined) {\n            throw Error('Global \"asyncBeforeEach\" and \"beforeEach\" parameters can\\'t be set at the same time when running async properties');\n        }\n        if (asyncAfterEach !== undefined && afterEach !== undefined) {\n            throw Error('Global \"asyncAfterEach\" and \"afterEach\" parameters can\\'t be set at the same time when running async properties');\n        }\n        this.beforeEachHook = asyncBeforeEach || beforeEach || AsyncProperty.dummyHook;\n        this.afterEachHook = asyncAfterEach || afterEach || AsyncProperty.dummyHook;\n    }\n    isAsync() {\n        return true;\n    }\n    generate(mrng, runId) {\n        const value = this.arb.generate(mrng, runId != null ? (0, IRawProperty_1.runIdToFrequency)(runId) : undefined);\n        return (0, NoUndefinedAsContext_1.noUndefinedAsContext)(value);\n    }\n    shrink(value) {\n        if (value.context === undefined && !this.arb.canShrinkWithoutContext(value.value_)) {\n            return Stream_1.Stream.nil();\n        }\n        const safeContext = value.context !== NoUndefinedAsContext_1.UndefinedContextPlaceholder ? value.context : undefined;\n        return this.arb.shrink(value.value_, safeContext).map(NoUndefinedAsContext_1.noUndefinedAsContext);\n    }\n    async run(v) {\n        await this.beforeEachHook();\n        try {\n            const output = await this.predicate(v);\n            return output == null || output === true\n                ? null\n                : { error: undefined, errorMessage: 'Property failed by returning false' };\n        }\n        catch (err) {\n            if (PreconditionFailure_1.PreconditionFailure.isFailure(err))\n                return err;\n            if (err instanceof Error && err.stack) {\n                return { error: err, errorMessage: `${err}\\n\\nStack trace: ${err.stack}` };\n            }\n            return { error: err, errorMessage: String(err) };\n        }\n        finally {\n            await this.afterEachHook();\n        }\n    }\n    beforeEach(hookFunction) {\n        const previousBeforeEachHook = this.beforeEachHook;\n        this.beforeEachHook = () => hookFunction(previousBeforeEachHook);\n        return this;\n    }\n    afterEach(hookFunction) {\n        const previousAfterEachHook = this.afterEachHook;\n        this.afterEachHook = () => hookFunction(previousAfterEachHook);\n        return this;\n    }\n}\nexports.AsyncProperty = AsyncProperty;\nAsyncProperty.dummyHook = () => { };\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}