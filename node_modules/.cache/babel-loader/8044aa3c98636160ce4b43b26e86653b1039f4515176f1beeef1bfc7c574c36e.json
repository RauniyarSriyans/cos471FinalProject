{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WithShrinkFromOtherArbitrary = void 0;\nconst Arbitrary_1 = require(\"../../check/arbitrary/definition/Arbitrary\");\nconst Value_1 = require(\"../../check/arbitrary/definition/Value\");\nfunction isSafeContext(context) {\n  return context !== undefined;\n}\nfunction toGeneratorValue(value) {\n  if (value.hasToBeCloned) {\n    return new Value_1.Value(value.value_, {\n      generatorContext: value.context\n    }, () => value.value);\n  }\n  return new Value_1.Value(value.value_, {\n    generatorContext: value.context\n  });\n}\nfunction toShrinkerValue(value) {\n  if (value.hasToBeCloned) {\n    return new Value_1.Value(value.value_, {\n      shrinkerContext: value.context\n    }, () => value.value);\n  }\n  return new Value_1.Value(value.value_, {\n    shrinkerContext: value.context\n  });\n}\nclass WithShrinkFromOtherArbitrary extends Arbitrary_1.Arbitrary {\n  constructor(generatorArbitrary, shrinkerArbitrary) {\n    super();\n    this.generatorArbitrary = generatorArbitrary;\n    this.shrinkerArbitrary = shrinkerArbitrary;\n  }\n  generate(mrng, biasFactor) {\n    return toGeneratorValue(this.generatorArbitrary.generate(mrng, biasFactor));\n  }\n  canShrinkWithoutContext(value) {\n    return this.shrinkerArbitrary.canShrinkWithoutContext(value);\n  }\n  shrink(value, context) {\n    if (!isSafeContext(context)) {\n      return this.shrinkerArbitrary.shrink(value, undefined).map(toShrinkerValue);\n    }\n    if ('generatorContext' in context) {\n      return this.generatorArbitrary.shrink(value, context.generatorContext).map(toGeneratorValue);\n    }\n    return this.shrinkerArbitrary.shrink(value, context.shrinkerContext).map(toShrinkerValue);\n  }\n}\nexports.WithShrinkFromOtherArbitrary = WithShrinkFromOtherArbitrary;","map":{"version":3,"names":["Object","defineProperty","exports","value","WithShrinkFromOtherArbitrary","Arbitrary_1","require","Value_1","isSafeContext","context","undefined","toGeneratorValue","hasToBeCloned","Value","value_","generatorContext","toShrinkerValue","shrinkerContext","Arbitrary","constructor","generatorArbitrary","shrinkerArbitrary","generate","mrng","biasFactor","canShrinkWithoutContext","shrink","map"],"sources":["/Users/karimelbarbary/Desktop/test4/devote/node_modules/fast-check/lib/arbitrary/_internals/WithShrinkFromOtherArbitrary.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WithShrinkFromOtherArbitrary = void 0;\nconst Arbitrary_1 = require(\"../../check/arbitrary/definition/Arbitrary\");\nconst Value_1 = require(\"../../check/arbitrary/definition/Value\");\nfunction isSafeContext(context) {\n    return context !== undefined;\n}\nfunction toGeneratorValue(value) {\n    if (value.hasToBeCloned) {\n        return new Value_1.Value(value.value_, { generatorContext: value.context }, () => value.value);\n    }\n    return new Value_1.Value(value.value_, { generatorContext: value.context });\n}\nfunction toShrinkerValue(value) {\n    if (value.hasToBeCloned) {\n        return new Value_1.Value(value.value_, { shrinkerContext: value.context }, () => value.value);\n    }\n    return new Value_1.Value(value.value_, { shrinkerContext: value.context });\n}\nclass WithShrinkFromOtherArbitrary extends Arbitrary_1.Arbitrary {\n    constructor(generatorArbitrary, shrinkerArbitrary) {\n        super();\n        this.generatorArbitrary = generatorArbitrary;\n        this.shrinkerArbitrary = shrinkerArbitrary;\n    }\n    generate(mrng, biasFactor) {\n        return toGeneratorValue(this.generatorArbitrary.generate(mrng, biasFactor));\n    }\n    canShrinkWithoutContext(value) {\n        return this.shrinkerArbitrary.canShrinkWithoutContext(value);\n    }\n    shrink(value, context) {\n        if (!isSafeContext(context)) {\n            return this.shrinkerArbitrary.shrink(value, undefined).map(toShrinkerValue);\n        }\n        if ('generatorContext' in context) {\n            return this.generatorArbitrary.shrink(value, context.generatorContext).map(toGeneratorValue);\n        }\n        return this.shrinkerArbitrary.shrink(value, context.shrinkerContext).map(toShrinkerValue);\n    }\n}\nexports.WithShrinkFromOtherArbitrary = WithShrinkFromOtherArbitrary;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,4BAA4B,GAAG,KAAK,CAAC;AAC7C,MAAMC,WAAW,GAAGC,OAAO,CAAC,4CAA4C,CAAC;AACzE,MAAMC,OAAO,GAAGD,OAAO,CAAC,wCAAwC,CAAC;AACjE,SAASE,aAAaA,CAACC,OAAO,EAAE;EAC5B,OAAOA,OAAO,KAAKC,SAAS;AAChC;AACA,SAASC,gBAAgBA,CAACR,KAAK,EAAE;EAC7B,IAAIA,KAAK,CAACS,aAAa,EAAE;IACrB,OAAO,IAAIL,OAAO,CAACM,KAAK,CAACV,KAAK,CAACW,MAAM,EAAE;MAAEC,gBAAgB,EAAEZ,KAAK,CAACM;IAAQ,CAAC,EAAE,MAAMN,KAAK,CAACA,KAAK,CAAC;EAClG;EACA,OAAO,IAAII,OAAO,CAACM,KAAK,CAACV,KAAK,CAACW,MAAM,EAAE;IAAEC,gBAAgB,EAAEZ,KAAK,CAACM;EAAQ,CAAC,CAAC;AAC/E;AACA,SAASO,eAAeA,CAACb,KAAK,EAAE;EAC5B,IAAIA,KAAK,CAACS,aAAa,EAAE;IACrB,OAAO,IAAIL,OAAO,CAACM,KAAK,CAACV,KAAK,CAACW,MAAM,EAAE;MAAEG,eAAe,EAAEd,KAAK,CAACM;IAAQ,CAAC,EAAE,MAAMN,KAAK,CAACA,KAAK,CAAC;EACjG;EACA,OAAO,IAAII,OAAO,CAACM,KAAK,CAACV,KAAK,CAACW,MAAM,EAAE;IAAEG,eAAe,EAAEd,KAAK,CAACM;EAAQ,CAAC,CAAC;AAC9E;AACA,MAAML,4BAA4B,SAASC,WAAW,CAACa,SAAS,CAAC;EAC7DC,WAAWA,CAACC,kBAAkB,EAAEC,iBAAiB,EAAE;IAC/C,KAAK,CAAC,CAAC;IACP,IAAI,CAACD,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;EAC9C;EACAC,QAAQA,CAACC,IAAI,EAAEC,UAAU,EAAE;IACvB,OAAOb,gBAAgB,CAAC,IAAI,CAACS,kBAAkB,CAACE,QAAQ,CAACC,IAAI,EAAEC,UAAU,CAAC,CAAC;EAC/E;EACAC,uBAAuBA,CAACtB,KAAK,EAAE;IAC3B,OAAO,IAAI,CAACkB,iBAAiB,CAACI,uBAAuB,CAACtB,KAAK,CAAC;EAChE;EACAuB,MAAMA,CAACvB,KAAK,EAAEM,OAAO,EAAE;IACnB,IAAI,CAACD,aAAa,CAACC,OAAO,CAAC,EAAE;MACzB,OAAO,IAAI,CAACY,iBAAiB,CAACK,MAAM,CAACvB,KAAK,EAAEO,SAAS,CAAC,CAACiB,GAAG,CAACX,eAAe,CAAC;IAC/E;IACA,IAAI,kBAAkB,IAAIP,OAAO,EAAE;MAC/B,OAAO,IAAI,CAACW,kBAAkB,CAACM,MAAM,CAACvB,KAAK,EAAEM,OAAO,CAACM,gBAAgB,CAAC,CAACY,GAAG,CAAChB,gBAAgB,CAAC;IAChG;IACA,OAAO,IAAI,CAACU,iBAAiB,CAACK,MAAM,CAACvB,KAAK,EAAEM,OAAO,CAACQ,eAAe,CAAC,CAACU,GAAG,CAACX,eAAe,CAAC;EAC7F;AACJ;AACAd,OAAO,CAACE,4BAA4B,GAAGA,4BAA4B"},"metadata":{},"sourceType":"script","externalDependencies":[]}