{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.base64String = void 0;\nconst array_1 = require(\"./array\");\nconst base64_1 = require(\"./base64\");\nconst MaxLengthFromMinLength_1 = require(\"./_internals/helpers/MaxLengthFromMinLength\");\nconst CodePointsToString_1 = require(\"./_internals/mappers/CodePointsToString\");\nconst StringToBase64_1 = require(\"./_internals/mappers/StringToBase64\");\nconst SlicesForStringBuilder_1 = require(\"./_internals/helpers/SlicesForStringBuilder\");\nfunction base64String() {\n  let constraints = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    minLength: unscaledMinLength = 0,\n    maxLength: unscaledMaxLength = MaxLengthFromMinLength_1.MaxLengthUpperBound,\n    size\n  } = constraints;\n  const minLength = unscaledMinLength + 3 - (unscaledMinLength + 3) % 4;\n  const maxLength = unscaledMaxLength - unscaledMaxLength % 4;\n  const requestedSize = constraints.maxLength === undefined && size === undefined ? '=' : size;\n  if (minLength > maxLength) throw new Error('Minimal length should be inferior or equal to maximal length');\n  if (minLength % 4 !== 0) throw new Error('Minimal length of base64 strings must be a multiple of 4');\n  if (maxLength % 4 !== 0) throw new Error('Maximal length of base64 strings must be a multiple of 4');\n  const charArbitrary = (0, base64_1.base64)();\n  const experimentalCustomSlices = (0, SlicesForStringBuilder_1.createSlicesForString)(charArbitrary, CodePointsToString_1.codePointsToStringUnmapper);\n  const enrichedConstraints = {\n    minLength,\n    maxLength,\n    size: requestedSize,\n    experimentalCustomSlices\n  };\n  return (0, array_1.array)(charArbitrary, enrichedConstraints).map(CodePointsToString_1.codePointsToStringMapper, CodePointsToString_1.codePointsToStringUnmapper).map(StringToBase64_1.stringToBase64Mapper, StringToBase64_1.stringToBase64Unmapper);\n}\nexports.base64String = base64String;","map":{"version":3,"names":["Object","defineProperty","exports","value","base64String","array_1","require","base64_1","MaxLengthFromMinLength_1","CodePointsToString_1","StringToBase64_1","SlicesForStringBuilder_1","constraints","arguments","length","undefined","minLength","unscaledMinLength","maxLength","unscaledMaxLength","MaxLengthUpperBound","size","requestedSize","Error","charArbitrary","base64","experimentalCustomSlices","createSlicesForString","codePointsToStringUnmapper","enrichedConstraints","array","map","codePointsToStringMapper","stringToBase64Mapper","stringToBase64Unmapper"],"sources":["/Users/karimelbarbary/Desktop/test4/devote/node_modules/fast-check/lib/arbitrary/base64String.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.base64String = void 0;\nconst array_1 = require(\"./array\");\nconst base64_1 = require(\"./base64\");\nconst MaxLengthFromMinLength_1 = require(\"./_internals/helpers/MaxLengthFromMinLength\");\nconst CodePointsToString_1 = require(\"./_internals/mappers/CodePointsToString\");\nconst StringToBase64_1 = require(\"./_internals/mappers/StringToBase64\");\nconst SlicesForStringBuilder_1 = require(\"./_internals/helpers/SlicesForStringBuilder\");\nfunction base64String(constraints = {}) {\n    const { minLength: unscaledMinLength = 0, maxLength: unscaledMaxLength = MaxLengthFromMinLength_1.MaxLengthUpperBound, size } = constraints;\n    const minLength = unscaledMinLength + 3 - ((unscaledMinLength + 3) % 4);\n    const maxLength = unscaledMaxLength - (unscaledMaxLength % 4);\n    const requestedSize = constraints.maxLength === undefined && size === undefined ? '=' : size;\n    if (minLength > maxLength)\n        throw new Error('Minimal length should be inferior or equal to maximal length');\n    if (minLength % 4 !== 0)\n        throw new Error('Minimal length of base64 strings must be a multiple of 4');\n    if (maxLength % 4 !== 0)\n        throw new Error('Maximal length of base64 strings must be a multiple of 4');\n    const charArbitrary = (0, base64_1.base64)();\n    const experimentalCustomSlices = (0, SlicesForStringBuilder_1.createSlicesForString)(charArbitrary, CodePointsToString_1.codePointsToStringUnmapper);\n    const enrichedConstraints = {\n        minLength,\n        maxLength,\n        size: requestedSize,\n        experimentalCustomSlices,\n    };\n    return (0, array_1.array)(charArbitrary, enrichedConstraints)\n        .map(CodePointsToString_1.codePointsToStringMapper, CodePointsToString_1.codePointsToStringUnmapper)\n        .map(StringToBase64_1.stringToBase64Mapper, StringToBase64_1.stringToBase64Unmapper);\n}\nexports.base64String = base64String;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AACpC,MAAME,wBAAwB,GAAGF,OAAO,CAAC,6CAA6C,CAAC;AACvF,MAAMG,oBAAoB,GAAGH,OAAO,CAAC,yCAAyC,CAAC;AAC/E,MAAMI,gBAAgB,GAAGJ,OAAO,CAAC,qCAAqC,CAAC;AACvE,MAAMK,wBAAwB,GAAGL,OAAO,CAAC,6CAA6C,CAAC;AACvF,SAASF,YAAYA,CAAA,EAAmB;EAAA,IAAlBQ,WAAW,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAClC,MAAM;IAAEG,SAAS,EAAEC,iBAAiB,GAAG,CAAC;IAAEC,SAAS,EAAEC,iBAAiB,GAAGX,wBAAwB,CAACY,mBAAmB;IAAEC;EAAK,CAAC,GAAGT,WAAW;EAC3I,MAAMI,SAAS,GAAGC,iBAAiB,GAAG,CAAC,GAAI,CAACA,iBAAiB,GAAG,CAAC,IAAI,CAAE;EACvE,MAAMC,SAAS,GAAGC,iBAAiB,GAAIA,iBAAiB,GAAG,CAAE;EAC7D,MAAMG,aAAa,GAAGV,WAAW,CAACM,SAAS,KAAKH,SAAS,IAAIM,IAAI,KAAKN,SAAS,GAAG,GAAG,GAAGM,IAAI;EAC5F,IAAIL,SAAS,GAAGE,SAAS,EACrB,MAAM,IAAIK,KAAK,CAAC,8DAA8D,CAAC;EACnF,IAAIP,SAAS,GAAG,CAAC,KAAK,CAAC,EACnB,MAAM,IAAIO,KAAK,CAAC,0DAA0D,CAAC;EAC/E,IAAIL,SAAS,GAAG,CAAC,KAAK,CAAC,EACnB,MAAM,IAAIK,KAAK,CAAC,0DAA0D,CAAC;EAC/E,MAAMC,aAAa,GAAG,CAAC,CAAC,EAAEjB,QAAQ,CAACkB,MAAM,EAAE,CAAC;EAC5C,MAAMC,wBAAwB,GAAG,CAAC,CAAC,EAAEf,wBAAwB,CAACgB,qBAAqB,EAAEH,aAAa,EAAEf,oBAAoB,CAACmB,0BAA0B,CAAC;EACpJ,MAAMC,mBAAmB,GAAG;IACxBb,SAAS;IACTE,SAAS;IACTG,IAAI,EAAEC,aAAa;IACnBI;EACJ,CAAC;EACD,OAAO,CAAC,CAAC,EAAErB,OAAO,CAACyB,KAAK,EAAEN,aAAa,EAAEK,mBAAmB,CAAC,CACxDE,GAAG,CAACtB,oBAAoB,CAACuB,wBAAwB,EAAEvB,oBAAoB,CAACmB,0BAA0B,CAAC,CACnGG,GAAG,CAACrB,gBAAgB,CAACuB,oBAAoB,EAAEvB,gBAAgB,CAACwB,sBAAsB,CAAC;AAC5F;AACAhC,OAAO,CAACE,YAAY,GAAGA,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}