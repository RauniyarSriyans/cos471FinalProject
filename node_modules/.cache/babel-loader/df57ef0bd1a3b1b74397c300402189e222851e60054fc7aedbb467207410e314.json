{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeBasic = void 0;\nconst Conversion = __importStar(require(\"../../conversion\"));\nconst Evm = __importStar(require(\"../../evm\"));\n//UGH -- it turns out TypeScript can't handle nested tagged unions\n//see: https://github.com/microsoft/TypeScript/issues/18758\n//so, I'm just going to have to throw in a bunch of type coercions >_>\n/**\n * Handles encoding of basic types; yes the input type is broader than\n * it should be but it's hard to fix this without causing other problems,\n * sorry!\n * @Category Encoding (low-level)\n */\nfunction encodeBasic(input) {\n  let bytes;\n  switch (input.type.typeClass) {\n    case \"userDefinedValueType\":\n      return encodeBasic(input.value);\n    case \"uint\":\n    case \"int\":\n      return Conversion.toBytes(input.value.asBN, Evm.Utils.WORD_SIZE);\n    case \"enum\":\n      return Conversion.toBytes(input.value.numericAsBN, Evm.Utils.WORD_SIZE);\n    case \"bool\":\n      {\n        bytes = new Uint8Array(Evm.Utils.WORD_SIZE); //is initialized to zeroes\n        if (input.value.asBoolean) {\n          bytes[Evm.Utils.WORD_SIZE - 1] = 1;\n        }\n        return bytes;\n      }\n    case \"bytes\":\n      switch (input.type.kind) {\n        //deliberately not handling dynamic case!\n        case \"static\":\n          bytes = Conversion.toBytes(input.value.asHex);\n          let padded = new Uint8Array(Evm.Utils.WORD_SIZE); //initialized to zeroes\n          padded.set(bytes);\n          return padded;\n      }\n    case \"address\":\n      return Conversion.toBytes(input.value.asAddress, Evm.Utils.WORD_SIZE);\n    case \"contract\":\n      return Conversion.toBytes(input.value.address, Evm.Utils.WORD_SIZE);\n    case \"function\":\n      {\n        switch (input.type.visibility) {\n          //for our purposes here, we will NOT count internal functions as a\n          //basic type!  so no handling of internal case\n          case \"external\":\n            let coercedInput = input;\n            let encoded = new Uint8Array(Evm.Utils.WORD_SIZE); //starts filled w/0s\n            let addressBytes = Conversion.toBytes(coercedInput.value.contract.address); //should already be correct length\n            let selectorBytes = Conversion.toBytes(coercedInput.value.selector); //should already be correct length\n            encoded.set(addressBytes);\n            encoded.set(selectorBytes, Evm.Utils.ADDRESS_SIZE); //set it after the address\n            return encoded;\n        }\n        break; //to satisfy TS\n      }\n\n    case \"fixed\":\n    case \"ufixed\":\n      let bigValue = input.value.asBig;\n      let shiftedValue = Conversion.shiftBigUp(bigValue, input.type.places);\n      return Conversion.toBytes(shiftedValue, Evm.Utils.WORD_SIZE);\n  }\n}\nexports.encodeBasic = encodeBasic;","map":{"version":3,"names":["Conversion","__importStar","require","Evm","encodeBasic","input","bytes","type","typeClass","value","toBytes","asBN","Utils","WORD_SIZE","numericAsBN","Uint8Array","asBoolean","kind","asHex","padded","set","asAddress","address","visibility","coercedInput","encoded","addressBytes","contract","selectorBytes","selector","ADDRESS_SIZE","bigValue","asBig","shiftedValue","shiftBigUp","places","exports"],"sources":["../../../../lib/basic/encode/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}