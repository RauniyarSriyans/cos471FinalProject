{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.lorem = void 0;\nconst array_1 = require(\"./array\");\nconst constant_1 = require(\"./constant\");\nconst oneof_1 = require(\"./oneof\");\nconst WordsToLorem_1 = require(\"./_internals/mappers/WordsToLorem\");\nconst h = (v, w) => {\n  return {\n    arbitrary: (0, constant_1.constant)(v),\n    weight: w\n  };\n};\nfunction loremWord() {\n  return (0, oneof_1.oneof)(h('non', 6), h('adipiscing', 5), h('ligula', 5), h('enim', 5), h('pellentesque', 5), h('in', 5), h('augue', 5), h('et', 5), h('nulla', 5), h('lorem', 4), h('sit', 4), h('sed', 4), h('diam', 4), h('fermentum', 4), h('ut', 4), h('eu', 4), h('aliquam', 4), h('mauris', 4), h('vitae', 4), h('felis', 4), h('ipsum', 3), h('dolor', 3), h('amet,', 3), h('elit', 3), h('euismod', 3), h('mi', 3), h('orci', 3), h('erat', 3), h('praesent', 3), h('egestas', 3), h('leo', 3), h('vel', 3), h('sapien', 3), h('integer', 3), h('curabitur', 3), h('convallis', 3), h('purus', 3), h('risus', 2), h('suspendisse', 2), h('lectus', 2), h('nec,', 2), h('ultricies', 2), h('sed,', 2), h('cras', 2), h('elementum', 2), h('ultrices', 2), h('maecenas', 2), h('massa,', 2), h('varius', 2), h('a,', 2), h('semper', 2), h('proin', 2), h('nec', 2), h('nisl', 2), h('amet', 2), h('duis', 2), h('congue', 2), h('libero', 2), h('vestibulum', 2), h('pede', 2), h('blandit', 2), h('sodales', 2), h('ante', 2), h('nibh', 2), h('ac', 2), h('aenean', 2), h('massa', 2), h('suscipit', 2), h('sollicitudin', 2), h('fusce', 2), h('tempus', 2), h('aliquam,', 2), h('nunc', 2), h('ullamcorper', 2), h('rhoncus', 2), h('metus', 2), h('faucibus,', 2), h('justo', 2), h('magna', 2), h('at', 2), h('tincidunt', 2), h('consectetur', 1), h('tortor,', 1), h('dignissim', 1), h('congue,', 1), h('non,', 1), h('porttitor,', 1), h('nonummy', 1), h('molestie,', 1), h('est', 1), h('eleifend', 1), h('mi,', 1), h('arcu', 1), h('scelerisque', 1), h('vitae,', 1), h('consequat', 1), h('in,', 1), h('pretium', 1), h('volutpat', 1), h('pharetra', 1), h('tempor', 1), h('bibendum', 1), h('odio', 1), h('dui', 1), h('primis', 1), h('faucibus', 1), h('luctus', 1), h('posuere', 1), h('cubilia', 1), h('curae,', 1), h('hendrerit', 1), h('velit', 1), h('mauris,', 1), h('gravida', 1), h('ornare', 1), h('ut,', 1), h('pulvinar', 1), h('varius,', 1), h('turpis', 1), h('nibh,', 1), h('eros', 1), h('id', 1), h('aliquet', 1), h('quis', 1), h('lobortis', 1), h('consectetuer', 1), h('morbi', 1), h('vehicula', 1), h('tortor', 1), h('tellus,', 1), h('id,', 1), h('eu,', 1), h('quam', 1), h('feugiat,', 1), h('posuere,', 1), h('iaculis', 1), h('lectus,', 1), h('tristique', 1), h('mollis,', 1), h('nisl,', 1), h('vulputate', 1), h('sem', 1), h('vivamus', 1), h('placerat', 1), h('imperdiet', 1), h('cursus', 1), h('rutrum', 1), h('iaculis,', 1), h('augue,', 1), h('lacus', 1));\n}\nfunction lorem() {\n  let constraints = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    maxCount,\n    mode = 'words',\n    size\n  } = constraints;\n  if (maxCount !== undefined && maxCount < 1) {\n    throw new Error(`lorem has to produce at least one word/sentence`);\n  }\n  const wordArbitrary = loremWord();\n  if (mode === 'sentences') {\n    const sentence = (0, array_1.array)(wordArbitrary, {\n      minLength: 1,\n      size: 'small'\n    }).map(WordsToLorem_1.wordsToSentenceMapper, (0, WordsToLorem_1.wordsToSentenceUnmapperFor)(wordArbitrary));\n    return (0, array_1.array)(sentence, {\n      minLength: 1,\n      maxLength: maxCount,\n      size\n    }).map(WordsToLorem_1.sentencesToParagraphMapper, WordsToLorem_1.sentencesToParagraphUnmapper);\n  } else {\n    return (0, array_1.array)(wordArbitrary, {\n      minLength: 1,\n      maxLength: maxCount,\n      size\n    }).map(WordsToLorem_1.wordsToJoinedStringMapper, (0, WordsToLorem_1.wordsToJoinedStringUnmapperFor)(wordArbitrary));\n  }\n}\nexports.lorem = lorem;","map":{"version":3,"names":["Object","defineProperty","exports","value","lorem","array_1","require","constant_1","oneof_1","WordsToLorem_1","h","v","w","arbitrary","constant","weight","loremWord","oneof","constraints","arguments","length","undefined","maxCount","mode","size","Error","wordArbitrary","sentence","array","minLength","map","wordsToSentenceMapper","wordsToSentenceUnmapperFor","maxLength","sentencesToParagraphMapper","sentencesToParagraphUnmapper","wordsToJoinedStringMapper","wordsToJoinedStringUnmapperFor"],"sources":["/Users/karimelbarbary/Desktop/test4/devote/node_modules/fast-check/lib/arbitrary/lorem.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lorem = void 0;\nconst array_1 = require(\"./array\");\nconst constant_1 = require(\"./constant\");\nconst oneof_1 = require(\"./oneof\");\nconst WordsToLorem_1 = require(\"./_internals/mappers/WordsToLorem\");\nconst h = (v, w) => {\n    return { arbitrary: (0, constant_1.constant)(v), weight: w };\n};\nfunction loremWord() {\n    return (0, oneof_1.oneof)(h('non', 6), h('adipiscing', 5), h('ligula', 5), h('enim', 5), h('pellentesque', 5), h('in', 5), h('augue', 5), h('et', 5), h('nulla', 5), h('lorem', 4), h('sit', 4), h('sed', 4), h('diam', 4), h('fermentum', 4), h('ut', 4), h('eu', 4), h('aliquam', 4), h('mauris', 4), h('vitae', 4), h('felis', 4), h('ipsum', 3), h('dolor', 3), h('amet,', 3), h('elit', 3), h('euismod', 3), h('mi', 3), h('orci', 3), h('erat', 3), h('praesent', 3), h('egestas', 3), h('leo', 3), h('vel', 3), h('sapien', 3), h('integer', 3), h('curabitur', 3), h('convallis', 3), h('purus', 3), h('risus', 2), h('suspendisse', 2), h('lectus', 2), h('nec,', 2), h('ultricies', 2), h('sed,', 2), h('cras', 2), h('elementum', 2), h('ultrices', 2), h('maecenas', 2), h('massa,', 2), h('varius', 2), h('a,', 2), h('semper', 2), h('proin', 2), h('nec', 2), h('nisl', 2), h('amet', 2), h('duis', 2), h('congue', 2), h('libero', 2), h('vestibulum', 2), h('pede', 2), h('blandit', 2), h('sodales', 2), h('ante', 2), h('nibh', 2), h('ac', 2), h('aenean', 2), h('massa', 2), h('suscipit', 2), h('sollicitudin', 2), h('fusce', 2), h('tempus', 2), h('aliquam,', 2), h('nunc', 2), h('ullamcorper', 2), h('rhoncus', 2), h('metus', 2), h('faucibus,', 2), h('justo', 2), h('magna', 2), h('at', 2), h('tincidunt', 2), h('consectetur', 1), h('tortor,', 1), h('dignissim', 1), h('congue,', 1), h('non,', 1), h('porttitor,', 1), h('nonummy', 1), h('molestie,', 1), h('est', 1), h('eleifend', 1), h('mi,', 1), h('arcu', 1), h('scelerisque', 1), h('vitae,', 1), h('consequat', 1), h('in,', 1), h('pretium', 1), h('volutpat', 1), h('pharetra', 1), h('tempor', 1), h('bibendum', 1), h('odio', 1), h('dui', 1), h('primis', 1), h('faucibus', 1), h('luctus', 1), h('posuere', 1), h('cubilia', 1), h('curae,', 1), h('hendrerit', 1), h('velit', 1), h('mauris,', 1), h('gravida', 1), h('ornare', 1), h('ut,', 1), h('pulvinar', 1), h('varius,', 1), h('turpis', 1), h('nibh,', 1), h('eros', 1), h('id', 1), h('aliquet', 1), h('quis', 1), h('lobortis', 1), h('consectetuer', 1), h('morbi', 1), h('vehicula', 1), h('tortor', 1), h('tellus,', 1), h('id,', 1), h('eu,', 1), h('quam', 1), h('feugiat,', 1), h('posuere,', 1), h('iaculis', 1), h('lectus,', 1), h('tristique', 1), h('mollis,', 1), h('nisl,', 1), h('vulputate', 1), h('sem', 1), h('vivamus', 1), h('placerat', 1), h('imperdiet', 1), h('cursus', 1), h('rutrum', 1), h('iaculis,', 1), h('augue,', 1), h('lacus', 1));\n}\nfunction lorem(constraints = {}) {\n    const { maxCount, mode = 'words', size } = constraints;\n    if (maxCount !== undefined && maxCount < 1) {\n        throw new Error(`lorem has to produce at least one word/sentence`);\n    }\n    const wordArbitrary = loremWord();\n    if (mode === 'sentences') {\n        const sentence = (0, array_1.array)(wordArbitrary, { minLength: 1, size: 'small' }).map(WordsToLorem_1.wordsToSentenceMapper, (0, WordsToLorem_1.wordsToSentenceUnmapperFor)(wordArbitrary));\n        return (0, array_1.array)(sentence, { minLength: 1, maxLength: maxCount, size }).map(WordsToLorem_1.sentencesToParagraphMapper, WordsToLorem_1.sentencesToParagraphUnmapper);\n    }\n    else {\n        return (0, array_1.array)(wordArbitrary, { minLength: 1, maxLength: maxCount, size }).map(WordsToLorem_1.wordsToJoinedStringMapper, (0, WordsToLorem_1.wordsToJoinedStringUnmapperFor)(wordArbitrary));\n    }\n}\nexports.lorem = lorem;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}