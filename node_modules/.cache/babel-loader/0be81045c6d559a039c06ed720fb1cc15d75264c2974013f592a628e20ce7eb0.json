{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.adapter = void 0;\nconst Arbitrary_1 = require(\"../../check/arbitrary/definition/Arbitrary\");\nconst Value_1 = require(\"../../check/arbitrary/definition/Value\");\nconst Stream_1 = require(\"../../stream/Stream\");\nconst AdaptedValue = Symbol('adapted-value');\nfunction toAdapterValue(rawValue, adapter) {\n  const adapted = adapter(rawValue.value_);\n  if (!adapted.adapted) {\n    return rawValue;\n  }\n  return new Value_1.Value(adapted.value, AdaptedValue);\n}\nclass AdapterArbitrary extends Arbitrary_1.Arbitrary {\n  constructor(sourceArb, adapter) {\n    super();\n    this.sourceArb = sourceArb;\n    this.adapter = adapter;\n    this.adaptValue = rawValue => toAdapterValue(rawValue, adapter);\n  }\n  generate(mrng, biasFactor) {\n    const rawValue = this.sourceArb.generate(mrng, biasFactor);\n    return this.adaptValue(rawValue);\n  }\n  canShrinkWithoutContext(value) {\n    return this.sourceArb.canShrinkWithoutContext(value) && !this.adapter(value).adapted;\n  }\n  shrink(value, context) {\n    if (context === AdaptedValue) {\n      if (!this.sourceArb.canShrinkWithoutContext(value)) {\n        return Stream_1.Stream.nil();\n      }\n      return this.sourceArb.shrink(value, undefined).map(this.adaptValue);\n    }\n    return this.sourceArb.shrink(value, context).map(this.adaptValue);\n  }\n}\nfunction adapter(sourceArb, adapter) {\n  return new AdapterArbitrary(sourceArb, adapter);\n}\nexports.adapter = adapter;","map":{"version":3,"names":["Object","defineProperty","exports","value","adapter","Arbitrary_1","require","Value_1","Stream_1","AdaptedValue","Symbol","toAdapterValue","rawValue","adapted","value_","Value","AdapterArbitrary","Arbitrary","constructor","sourceArb","adaptValue","generate","mrng","biasFactor","canShrinkWithoutContext","shrink","context","Stream","nil","undefined","map"],"sources":["/Users/karimelbarbary/Desktop/test4/devote/node_modules/fast-check/lib/arbitrary/_internals/AdapterArbitrary.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.adapter = void 0;\nconst Arbitrary_1 = require(\"../../check/arbitrary/definition/Arbitrary\");\nconst Value_1 = require(\"../../check/arbitrary/definition/Value\");\nconst Stream_1 = require(\"../../stream/Stream\");\nconst AdaptedValue = Symbol('adapted-value');\nfunction toAdapterValue(rawValue, adapter) {\n    const adapted = adapter(rawValue.value_);\n    if (!adapted.adapted) {\n        return rawValue;\n    }\n    return new Value_1.Value(adapted.value, AdaptedValue);\n}\nclass AdapterArbitrary extends Arbitrary_1.Arbitrary {\n    constructor(sourceArb, adapter) {\n        super();\n        this.sourceArb = sourceArb;\n        this.adapter = adapter;\n        this.adaptValue = (rawValue) => toAdapterValue(rawValue, adapter);\n    }\n    generate(mrng, biasFactor) {\n        const rawValue = this.sourceArb.generate(mrng, biasFactor);\n        return this.adaptValue(rawValue);\n    }\n    canShrinkWithoutContext(value) {\n        return this.sourceArb.canShrinkWithoutContext(value) && !this.adapter(value).adapted;\n    }\n    shrink(value, context) {\n        if (context === AdaptedValue) {\n            if (!this.sourceArb.canShrinkWithoutContext(value)) {\n                return Stream_1.Stream.nil();\n            }\n            return this.sourceArb.shrink(value, undefined).map(this.adaptValue);\n        }\n        return this.sourceArb.shrink(value, context).map(this.adaptValue);\n    }\n}\nfunction adapter(sourceArb, adapter) {\n    return new AdapterArbitrary(sourceArb, adapter);\n}\nexports.adapter = adapter;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,MAAMC,WAAW,GAAGC,OAAO,CAAC,4CAA4C,CAAC;AACzE,MAAMC,OAAO,GAAGD,OAAO,CAAC,wCAAwC,CAAC;AACjE,MAAME,QAAQ,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AAC/C,MAAMG,YAAY,GAAGC,MAAM,CAAC,eAAe,CAAC;AAC5C,SAASC,cAAcA,CAACC,QAAQ,EAAER,OAAO,EAAE;EACvC,MAAMS,OAAO,GAAGT,OAAO,CAACQ,QAAQ,CAACE,MAAM,CAAC;EACxC,IAAI,CAACD,OAAO,CAACA,OAAO,EAAE;IAClB,OAAOD,QAAQ;EACnB;EACA,OAAO,IAAIL,OAAO,CAACQ,KAAK,CAACF,OAAO,CAACV,KAAK,EAAEM,YAAY,CAAC;AACzD;AACA,MAAMO,gBAAgB,SAASX,WAAW,CAACY,SAAS,CAAC;EACjDC,WAAWA,CAACC,SAAS,EAAEf,OAAO,EAAE;IAC5B,KAAK,CAAC,CAAC;IACP,IAAI,CAACe,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACf,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACgB,UAAU,GAAIR,QAAQ,IAAKD,cAAc,CAACC,QAAQ,EAAER,OAAO,CAAC;EACrE;EACAiB,QAAQA,CAACC,IAAI,EAAEC,UAAU,EAAE;IACvB,MAAMX,QAAQ,GAAG,IAAI,CAACO,SAAS,CAACE,QAAQ,CAACC,IAAI,EAAEC,UAAU,CAAC;IAC1D,OAAO,IAAI,CAACH,UAAU,CAACR,QAAQ,CAAC;EACpC;EACAY,uBAAuBA,CAACrB,KAAK,EAAE;IAC3B,OAAO,IAAI,CAACgB,SAAS,CAACK,uBAAuB,CAACrB,KAAK,CAAC,IAAI,CAAC,IAAI,CAACC,OAAO,CAACD,KAAK,CAAC,CAACU,OAAO;EACxF;EACAY,MAAMA,CAACtB,KAAK,EAAEuB,OAAO,EAAE;IACnB,IAAIA,OAAO,KAAKjB,YAAY,EAAE;MAC1B,IAAI,CAAC,IAAI,CAACU,SAAS,CAACK,uBAAuB,CAACrB,KAAK,CAAC,EAAE;QAChD,OAAOK,QAAQ,CAACmB,MAAM,CAACC,GAAG,CAAC,CAAC;MAChC;MACA,OAAO,IAAI,CAACT,SAAS,CAACM,MAAM,CAACtB,KAAK,EAAE0B,SAAS,CAAC,CAACC,GAAG,CAAC,IAAI,CAACV,UAAU,CAAC;IACvE;IACA,OAAO,IAAI,CAACD,SAAS,CAACM,MAAM,CAACtB,KAAK,EAAEuB,OAAO,CAAC,CAACI,GAAG,CAAC,IAAI,CAACV,UAAU,CAAC;EACrE;AACJ;AACA,SAAShB,OAAOA,CAACe,SAAS,EAAEf,OAAO,EAAE;EACjC,OAAO,IAAIY,gBAAgB,CAACG,SAAS,EAAEf,OAAO,CAAC;AACnD;AACAF,OAAO,CAACE,OAAO,GAAGA,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}